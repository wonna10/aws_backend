{"version":3,"sources":["Pages/ResetPassword/ResetPassword.module.css","Pages/Login/Login.module.css","reportWebVitals.js","Config.js","Components/Title/Title.js","Components/Colours/Colours.js","Images/iso-2-1-logo-black-and-white.png","Pages/Login/Login.js","Utils/Common.js","Components/StyledButton/StyledButton.js","Images/visa.png","Images/amex.png","Images/mastercard.png","Components/SetupPaymentMethod/SetupPaymentMethod.js","Components/ModalPopupPayment/ModalPopupPayment.js","Components/TopBar/TopBar.js","Pages/Dashboard/Dashboard.js","Components/ModalPopup/ModalPopup.js","Components/MUITableIcons/material.table.icons.jsx","Pages/ManageUsers/ManageUsers.js","Pages/ManageInvites/ManageInvites.js","Pages/EditUser/EditUser.js","Pages/MissingPage/MissingPage.js","Pages/AssignRole/AssignRole.js","Pages/ResetPassword/ResetPassword.js","Pages/ManageRoles/MangeRoles.js","Pages/EditRole/EditRole.js","Pages/Profile/Profile.js","Pages/EditProfile/EditProfile.js","Pages/Register/Register.js","Components/EmailChip/EmailChip.js","Pages/SendInvites/SendInvites.js","Pages/Company/Company.js","Pages/PaymentMethod/PaymentMethod.js","Pages/ChangePassword/ChangePassword.js","Pages/Expired/Expired.js","Pages/ResetPassword/EmailRequest.js","Pages/ResetPassword/ResetPasswordV2.js","Components/SideNav/SideNav.js","Components/Header/Header.js","Routes.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","baseUrl","stripeKey","process","REACT_APP_STRIPE_KEY","Title","title","Helmet","charSet","colour","c1","c2","c3","c4","c5","c6","c7","c8","c9","error","Login","useForm","register","handleSubmit","errors","history","useHistory","Cookies","useState","setErrSpaceA","setErrSpaceB","useEffect","email","password","classes","makeStyles","shadow","boxShadow","formContainer","backgroundColor","color","borderRadius","form","width","margin","padding","errorMessage","useStyles","className","styles","bg","loginFormContainer","style","textAlign","fontSize","onSubmit","data","console","log","axios","post","withCredentials","response","alert","token","displayName","localStorage","setItem","saveUserDataToLocalStore","push","catch","dir","request","status","message","htmlFor","type","name","placeholder","ref","required","value","href","Button","borderLeft","height","src","img","maxWidth","alt","StyledButton","props","onClick","event","text","SetupPaymentMethod","open","setOpen","handleClose","cardSetupError","setCardSetupError","cardSetupProcessing","setCardSetupProcessing","cardSetupDisabled","setCardSetupDisabled","cardSetupSuccess","setCardSetupSuccess","setupIntentID","setSetupIntentID","clientSecret","setClientSecret","stripe","getItem","useStripe","elements","useElements","showHideClassName","CARD_ELEMENT_OPTIONS","hidePostalCode","base","iconColor","fontFamily","fontSmoothing","invalid","a","preventDefault","getElement","CardElement","update","disabled","confirmCardSetup","payment_method","card","result","paymentMethodID","setupIntent","clear","duplicate","handleBtn","handleCardInputChange","complete","componentMounted","titleContainer","contentContainer","textField","marginTop","border","actionContainer","Dialog","onClose","aria-labelledby","onBackdropClick","DialogTitle","id","DialogContent","viewBox","strokeWidth","fill","stroke","d","options","onChange","role","DialogActions","Spinner","animation","ModalPopupPayment","rowData","userData","setUserData","paymentId","setPaymentId","selectOptions","setSelectOptions","get","map","x","stripe_payment_method_id","label","stripe_card_last_four_digit","stripe_card_exp_date","selectContainer","disabledReasonTextField","borderColor","reasonTextField","selectStyle","option","menu","provided","zIndex","handleSelectChange","TopBar","pageInfo","page","pageName","container","paddingLeft","marginBottom","Dashboard","planData","setPlanData","root","length","Row","price","ModalPopup","Data","setData","rowDataState","setRowDataState","DialogContentText","user_status","e","prevState","TextField","InputLabelProps","shrink","multiline","rows","rowsMax","variant","autoFocus","reason","target","put","user_id","index","findIndex","obj","changedData","tableIcons","Add","forwardRef","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","table","borderBottom","boxContainer","marginRight","ManageUsers","company_id","decodeToken","companyId","privId","eventHandler","Paper","icons","columns","field","hidden","editable","defaultSort","lookup","0","1","align","render","gu_id","tableLayout","draggable","headerStyle","borderTop","borderWidth","rowStyle","ManageInvites","priv_id","resendInvite","delete","filter","Col","EditUser","match","control","formState","userPrivilege","params","userId","countryOptions","useMemo","countryList","getData","firstName","setFirstName","lastName","setLastName","setEmail","contact","setContact","country","setCountry","state","setState","street","setStreet","postalcode","setPostalCode","privilege","setPrivilege","i","first_name","last_name","contact_number","toString","postal_code","privOptions","formField","btnContainer","undefined","reset","noValidate","autoComplete","defaultValue","aria-describedby","pattern","rules","validate","isValidPhoneNumber","phoneValidation","dropdownStyle","enableSearch","removeOutline","marginLeft","missing","MissingPage","Typography","AssignRole","allRoles","setAllRoles","userRoles","setUserRoles","rolesData","oneData","role_id","concat","userRole","roles","indexOf","overflow","minHeight","outline","alignContent","multiValueRemove","multiValue","multiValueLabel","closeMenuOnSelect","isMulti","maxMenuHeight","menuPlacement","window","location","ResetPassword","guId","setPassword","pwType","setPwType","confirmPassword","setConfirmPassword","cmfPwType","setCmfPwType","display","w","IconButton","VisibilityOff","Visibility","err","paddingBottom","float","btn","ManageRoles","EditRole","watch","setValue","roleId","description","swot_rights","ip_rights","ror_rights","qms_rights","policy_rights","oap_rights","raa_rights","scope_rights","nr_rights","td_rights","handlingOptions","formGroup","Profile","Register","key","assign","minLength","regexEmail","RegExp","isInList","emailstate","items","includes","isEmail","test","EmailChip","chipBox","chip","handleKeyDown","evt","trim","isValid","paste","clipboardData","handlePaste","item","Chip","onDelete","handleDelete","SendInvites","emailValid","setEmailValid","string","Company","contactValid","setContactValid","regex","loadStripe","App","userSubscription","setUserSubscription","stripe_card_type","visa","amex","mastercard","confirm","reload","stripe_status","ChangePassword","user_uuid","userUUID","currentPassword","setCurrentPassword","currentPwType","setCurrentPwType","newPassword","setNewPassword","newPwType","setNewPwType","EmailRequest","userCredential","setUserCredential","setMessage","isDisplay","setIsDisplay","aria-hidden","Form","Group","controlId","Label","Control","handleInputChange","ResetPasswordV2","useParams","headers","records","SideNav","closeWidth","drawerWidth","setDrawerWidth","drawerOpen","setDrawerOpen","drawer","drawerPaper","borderRight","menuRow","textDecoration","logoutRow","iconStyle","textStyle","fontWeight","iconBtnStyle","expandBtnStyle","expandStyle","logout","ClickAwayListener","onClickAway","Drawer","anchor","paper","List","Menu","to","Person","Business","People","Email","Ballot","ExitToApp","Header","CompanyName","setIsLogin","setDisplayName","getDisplayName","sessionStorage","authGuard","Component","jwt","authGuardNotLogin","themeMUI","createMuiTheme","typography","Routes","ThemeProvider","theme","path","component","exact","strict","EditProfile","PaymentMethod","document","body","promise","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0c7db226.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ResetPassword_bg__1cJjU\",\"container\":\"ResetPassword_container__292tS\",\"loginFormContainer\":\"ResetPassword_loginFormContainer__3GmYp\",\"loginFormLegend\":\"ResetPassword_loginFormLegend__2q9K2\",\"errorMessage\":\"ResetPassword_errorMessage__33Yof\",\"Logo\":\"ResetPassword_Logo__3HxnW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Login_bg__6Qy7m\",\"container\":\"Login_container__1a-Ne\",\"loginFormContainer\":\"Login_loginFormContainer__38Y4M\",\"loginFormLegend\":\"Login_loginFormLegend__343fz\",\"errorMessage\":\"Login_errorMessage__3d285\",\"Logo\":\"Login_Logo__2pBA7\",\"shadow\":\"Login_shadow__KTvEX\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// src/config.js\r\nconst dotenv = require('dotenv');\r\ndotenv.config(); //Build the process.env object.\r\nconst config = {\r\n    baseUrl: \"http://52.221.202.208:8003/api\", // No trialing slash here\r\n    stripeKey: process.env.REACT_APP_STRIPE_KEY\r\n  };\r\nexport default config;","import Helmet from \"react-helmet\";\r\nimport React from \"react\";\r\n\r\nconst Title = ({title}) => {\r\n    var defaultTitle = '⚛️ app';\r\n    return (\r\n        <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>{title ? title : defaultTitle}</title>\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default Title;","//global colours\r\nconst colour = {\r\n    c1: \"#FFFFFF\",\r\n    c2: \"#7C818C\",\r\n    c3: \"#4B5162\",\r\n    c4: \"#F0FAFF\",\r\n    c5: \"#3B3B3B\",\r\n    c6: \"#0e406a\",\r\n    c7: \"#f8f8f8\",\r\n    c8: \"#cfcfcf\",\r\n    c9: \"#000000\",\r\n    error: \"#ff0000\"\r\n}\r\n\r\nexport default colour","export default __webpack_public_path__ + \"static/media/iso-2-1-logo-black-and-white.4fa6de61.png\";","//Reference:https://github.com/mohanramphp/auth-using-react\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles, Button } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Title from '../../Components/Title/Title'\r\nimport config from '../../Config.js';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { saveUserDataToLocalStore } from '../../Utils/Common.js';\r\nimport Cookies from 'universal-cookie';\r\nimport moment from 'moment'\r\n//import Components\r\nimport colour from '../../Components/Colours/Colours'\r\nimport styles from './Login.module.css';\r\nimport img from '../../Images/iso-2-1-logo-black-and-white.png';\r\n\r\nfunction Login() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const history = useHistory();\r\n  const cookies = new Cookies();\r\n\r\n  //states\r\n  const [errSpaceA, setErrSpaceA] = useState(54)\r\n  const [errSpaceB, setErrSpaceB] = useState(54)\r\n\r\n  //errSpace Change\r\n  useEffect(() => {\r\n    if (errors.email) {\r\n      setErrSpaceA(30)\r\n    } else {\r\n      setErrSpaceA(54)\r\n    }\r\n    if (errors.password) {\r\n      setErrSpaceB(30)\r\n    } else {\r\n      setErrSpaceB(54)\r\n    }\r\n  }, [errors.email, errors.password])\r\n\r\n  //Styles\r\n  const useStyles = makeStyles({\r\n    //local style\r\n    shadow: {\r\n      boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\"\r\n    },\r\n    formContainer: {\r\n      backgroundColor: colour.c3,\r\n      color: colour.c1,\r\n      borderRadius: \"5px\",\r\n      boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n    },\r\n    form: {\r\n      width: '95%',\r\n      margin: 'auto',\r\n      color: 'black',\r\n      padding: '20px'\r\n    },\r\n    errorMessage: {\r\n      color: colour.error,\r\n    },\r\n\r\n  })\r\n  const classes = useStyles()\r\n\r\n  //Submit\r\n  const onSubmit = (data) => {\r\n    console.log(data)\r\n    axios.post(`${config.baseUrl}/u/user/signin`,\r\n      { email: data.email, password: data.password }, { withCredentials: true })\r\n      .then(response => {\r\n        alert('Login success')\r\n        console.log(response.data)\r\n        console.log(response.data.token);\r\n        const token = response.data.token;\r\n        saveUserDataToLocalStore(token, response.data.displayName);\r\n        history.push('/dashboard');\r\n      }).catch(error => {\r\n        console.dir(error);\r\n        if ((error.response != null) && (error.response.request.status === 401)) {\r\n          alert('Email or password is wrong')\r\n        } else if ((error.response != null) && (error.response.request.status === 400)) {\r\n          alert('Account or Company has been terminated')\r\n        } else if (error.message != null) {\r\n          alert('Err')\r\n        } else {\r\n          alert('Something went wrong. Please try again later.');\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={styles.bg}>\r\n      <Title title=\"Login\"></Title>\r\n      <div className={`d-flex flex-column align-items-center justify-content-center h-100 w-100`}>\r\n        <div className={`my-auto d-inline-flex border rounded ${styles.shadow}`}>\r\n          <div className={`${styles.loginFormContainer} `}>\r\n            <div className=\"m-5 p-3\">\r\n              <legend style={{ textAlign: \"center\", fontSize: \"18\" }}>Login</legend>\r\n              <hr />\r\n              <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"email\" >Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder='Email'\r\n                    className='form-control'\r\n                    ref={register({ required: { value: true } })}\r\n                  />\r\n                  {errors.email && <p className={classes.errorMessage}>Please input email</p>}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"password\" >Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder='Password'\r\n                    className='form-control'\r\n                    ref={register({ required: { value: true } })}\r\n                  />\r\n                  {errors.password && <p className={classes.errorMessage}>Please input password</p>}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end \">\r\n                  <a href=\"/EmailRequest\" className=\"text-dark\">Forget Password?</a>\r\n                </div>\r\n                <Button\r\n                  className={`mt-3 ${styles.shadow}`}\r\n                  type='submit'\r\n                  style={{\r\n                    backgroundColor: colour.c5,\r\n                    color: colour.c1,\r\n                    width: '100%',\r\n                  }}\r\n                >Login</Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div className=\"p-3 d-inline-flex flex-wrap flex-column align-items-center text-white\" style={{ backgroundColor: \"#0c3658\", borderLeft: \"1px solid #fff\", height: \"500px\" }}>\r\n            <h3 className=\"p-3\">eISO Company Login</h3>\r\n            <img className=\"mt-5 p-3 \" src={img} style={{ width: \"auto\", maxWidth: \"300px\" }} alt=\"Logo\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    // <div className={styles.bg}>\r\n    //   <Title title=\"Login\"></Title>\r\n    //   <div className={classes.shadow} style={{\r\n    //     position: 'absolute',\r\n    //     top: '50%',\r\n    //     left: '50%',\r\n    //     transform: 'translate(-50%, -50%)',\r\n    //     width: '450px',\r\n    //     backgroundColor: colour.c3,\r\n    //     borderRadius: 15,\r\n    //     color: colour.c1\r\n    //   }}>\r\n    //     <div style={{ backgroundColor: colour.c6, borderRadius: \"15px 15px 0px 0px\", width: \"100%\" }}>\r\n    //       <h1 style={{ paddingTop: 10, paddingBottom: 10, textAlign: 'center' }}>eISO System</h1>\r\n    //     </div>\r\n    //     <div>\r\n    //       <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n    //         <div style={{ marginBottom: errSpaceA }}>\r\n    //           <label htmlFor=\"email\" className={classes.label}>Email</label>\r\n    //           <input\r\n    //             type=\"text\"\r\n    //             name=\"email\"\r\n    //             placeholder='Email'\r\n    //             className='form-control'\r\n    //             ref={register({ required: { value: true } })}\r\n    //           />\r\n    //           {errors.email && <p className={classes.errorMessage}>Please input email</p>}\r\n    //         </div>\r\n    //         <div style={{ marginBottom: errSpaceB }}>\r\n    //           <label htmlFor=\"password\" className={classes.label}>Password</label>\r\n    //           <input\r\n    //             type=\"password\"\r\n    //             name=\"password\"\r\n    //             placeholder='Password'\r\n    //             className='form-control'\r\n    //             ref={register({ required: { value: true } })}\r\n    //           />\r\n    //           {errors.password && <p className={classes.errorMessage}>Please input password</p>}\r\n    //           <a href=\"/ForgetPassword\" style={{ display: \"block\", marginTop: \"5px\", textDecoration: \"none\" }}>Forget Password</a>\r\n\r\n    //         </div>\r\n    //         <Button\r\n    //           className={classes.shadow}\r\n    //           type='submit'\r\n    //           style={{\r\n    //             backgroundColor: colour.c5,\r\n    //             color: colour.c1,\r\n    //             width: '100%',\r\n    //             fontSize: '1.2rem'\r\n    //           }}\r\n    //         >Login</Button>\r\n    //       </form>\r\n    //     </div>\r\n    //   </div>\r\n    // </div >\r\n  );\r\n}\r\nexport default Login;","// Return the user display name data from the local storage\r\nexport const getUserDisplayNameFromLocalStore = () => {\r\n    const userDisplayName = localStorage.getItem('displayName');\r\n    return userDisplayName\r\n  }\r\n  // Return the token from the local storage\r\n  export const getTokenFromLocalStore = () => {\r\n    return localStorage.getItem('token') || null;\r\n  }\r\n   \r\n  // Remove the token and user from the local storage\r\n  export const removeUserDataFromLocalStore = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('displayName');\r\n  }\r\n   \r\n  // set the token and user from the local storage\r\n  export const saveUserDataToLocalStore = (token, displayName) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('displayName', displayName);\r\n  }","import React, { } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport colour from '../Colours/Colours'\r\n\r\n\r\nconst StyledButton = (props) => {\r\n    return (\r\n        <Button\r\n            style={{\r\n                ...props.style,\r\n                backgroundColor: colour.c5,\r\n                color: colour.c1,\r\n            }}\r\n            onClick={() => props.event()}\r\n            type={props.type}\r\n        >\r\n            {props.text}\r\n        </Button>)\r\n}\r\n\r\nexport default StyledButton\r\n\r\n\r\n// template \r\n// <StyledButton text=\"btn text\" event={() => {}}} />","export default __webpack_public_path__ + \"static/media/visa.555920b8.png\";","export default __webpack_public_path__ + \"static/media/amex.227b23be.png\";","export default __webpack_public_path__ + \"static/media/mastercard.156c7dc3.png\";","import React, { useState, useEffect } from 'react';\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport axios from 'axios';\r\nimport config from '../../Config';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, makeStyles } from '@material-ui/core/';\r\nimport StyledButton from '../StyledButton/StyledButton';\r\nimport colour from '../Colours/Colours';\r\n\r\nconst SetupPaymentMethod = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [cardSetupError, setCardSetupError] = useState(null);\r\n    const [cardSetupProcessing, setCardSetupProcessing] = useState(false);\r\n    const [cardSetupDisabled, setCardSetupDisabled] = useState(true);\r\n    const [cardSetupSuccess, setCardSetupSuccess] = useState(false);\r\n    const [setupIntentID, setSetupIntentID] = useState(null);\r\n    const [clientSecret, setClientSecret] = useState(null);\r\n    const token = localStorage.getItem('token')\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const showHideClassName = open ? \"l-Setup-payment-method l-Setup-payment-method--show\" : \"l-Setup-payment-method l-Setup-payment-method--hidden\";\r\n\r\n    const CARD_ELEMENT_OPTIONS = {\r\n        hidePostalCode: true,\r\n        style: {\r\n            base: {\r\n                iconColor: '#F1EBEA',\r\n                color: \"#32325d\",\r\n                fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n                fontSmoothing: \"antialiased\",\r\n                fontSize: \"20px\",\r\n                \"::placeholder\": {\r\n                    color: \"#32325d\",\r\n                },\r\n                color: 'black'\r\n            },\r\n            invalid: {\r\n                color: \"#fa755a\",\r\n                iconColor: \"#fa755a\"\r\n            },\r\n\r\n        },\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        elements.getElement(CardElement).update({ disabled: true });\r\n        setCardSetupProcessing(() => true);\r\n        if (!stripe || !elements || !clientSecret || !setupIntentID) {\r\n            // Stripe.js has not yet loaded.\r\n            // Make sure to disable form submission until Stripe.js has loaded.\r\n            setCardSetupProcessing(() => false);\r\n            elements.getElement(CardElement).update({ disabled: false });\r\n            setCardSetupError(() => \"Error! Please try again later!\");\r\n        } else {\r\n            const result = await stripe.confirmCardSetup(clientSecret, {\r\n                payment_method: {\r\n                    card: elements.getElement(CardElement)\r\n                },\r\n            });\r\n\r\n            if (result.error) {\r\n                setCardSetupError(() => result.error.message);\r\n                setCardSetupProcessing(() => false);\r\n                // Display result.error.message in your UI.\r\n                elements.getElement(CardElement).update({ disabled: false });\r\n            } else {\r\n                // The setup has succeeded. Display a success message and send\r\n                // result.setupIntent.payment_method to your server to save the\r\n                // card to a Customer\r\n\r\n                // Obtain payment method id\r\n                const paymentMethodID = result.setupIntent.payment_method;\r\n\r\n                try {\r\n                    await axios.post(`${config.baseUrl}/u/stripe/paymentmethods`, {\r\n                        paymentMethodID }, { withCredentials: true });\r\n\r\n                    elements.getElement(CardElement).clear();\r\n                    setCardSetupSuccess(() => true);\r\n                    setCardSetupProcessing(() => false);\r\n                    setCardSetupError(() => null);\r\n\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    const duplicate = error.response?.data.duplicate;\r\n                    if (duplicate) {\r\n                        setCardSetupError(() => error.response.data.message);\r\n                    } else {\r\n                        setCardSetupError(() => \"Error! Please try again later!\");\r\n                    }\r\n                    setCardSetupProcessing(() => false);\r\n\r\n                    elements.getElement(CardElement).update({ disabled: false });\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleBtn = () => {\r\n        // Clear stripe element before closing\r\n        if (elements?.getElement(CardElement)) {\r\n            elements.getElement(CardElement).clear();\r\n        }\r\n        handleClose();\r\n        setCardSetupSuccess(() => false);\r\n        setCardSetupProcessing(() => false);\r\n    };\r\n\r\n    const handleCardInputChange = async (event) => {\r\n        // Listen for changes in the CardElement\r\n        // and display any errors as the customer types their card details\r\n\r\n        if (event.complete) {\r\n            setCardSetupDisabled(() => false);\r\n        } else {\r\n            setCardSetupDisabled(() => true);\r\n        }\r\n\r\n        setCardSetupError(event.error ? event.error.message : \"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        let componentMounted = true;\r\n\r\n        (async () => {\r\n            try {\r\n                if (componentMounted) {\r\n                    if (open) {\r\n                        // Retrieve client secret here\r\n                        const setupIntent = await axios.post(`${config.baseUrl}/u/stripe/setupintents`, {}, { withCredentials: true }, {\r\n                        });\r\n                        console.log(setupIntent);\r\n                        setClientSecret(() => setupIntent.data.clientSecret);\r\n                        setSetupIntentID(() => setupIntent.data.setupIntentID);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })()\r\n\r\n        return (() => {\r\n            componentMounted = false;\r\n        });\r\n    }, [open]);\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        titleContainer: {\r\n            backgroundColor: colour.c6,\r\n            color: 'white',\r\n        },\r\n        contentContainer: {\r\n            backgroundColor: colour.c4,\r\n            height: '100px',\r\n            width: '500px'\r\n        },\r\n        textField:{\r\n            marginTop: '10px',\r\n            border: '1px solid black',\r\n            borderRadius: '5px'\r\n        },\r\n        actionContainer:{\r\n            backgroundColor: colour.c3,\r\n        }\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div>\r\n            <StyledButton text=\"Add Payment Method\" event={() => handleClickOpen()} />\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" onBackdropClick=\"false\">\r\n                <DialogTitle className={classes.titleContainer} id=\"form-dialog-title\">Add Payment Method</DialogTitle>\r\n                <DialogContent className={classes.contentContainer}>\r\n                    <form className={showHideClassName} onSubmit={(event) => handleSubmit(event)}>\r\n                        {\r\n                            cardSetupSuccess ?\r\n                                // Card set up success component\r\n                                <div>\r\n                                    <span>\r\n                                        <svg viewBox=\"0 0 24 24\">\r\n                                            <path strokeWidth=\"2\" fill=\"none\" stroke=\"#ffffff\" d=\"M 3,12 l 6,6 l 12, -12\" />\r\n                                        </svg>\r\n                                    </span>\r\n                                    <h1>Card Added Successfully!</h1>\r\n                                </div>\r\n                                :\r\n                                <div>\r\n                                    <div>\r\n                                        <div className={classes.textField}>\r\n                                            {/* Card input is rendered here */}\r\n                                            <CardElement options={CARD_ELEMENT_OPTIONS} onChange={handleCardInputChange} />\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* Show any error that happens when setting up the payment method */}\r\n                                    {cardSetupError && (\r\n                                        <div className=\"card-error\" role=\"alert\">\r\n                                            {cardSetupError}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                </div>\r\n                        }\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions className={classes.actionContainer}>\r\n                    {\r\n                        cardSetupSuccess ?\r\n                            <button type=\"button\" onClick={() => handleBtn()}>Close</button>\r\n                            :\r\n                            <div className=\"c-Setup-payment-method__Btn\">\r\n                                <button disabled={cardSetupProcessing || cardSetupDisabled} type=\"button\" className={cardSetupProcessing || cardSetupDisabled ? \"c-Btn c-Btn--disabled\" : \"c-Btn\"} onClick={(event) => handleSubmit(event)}>\r\n                                    {cardSetupProcessing ? (\r\n                                        <>\r\n                                            <span> Processing </span>\r\n                                            <Spinner animation=\"border\" role=\"status\" />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            Save\r\n                                        </>\r\n                                    )}\r\n                                </button>\r\n                                <button disabled={cardSetupProcessing} type=\"button\" onClick={() => handleBtn()}>Cancel</button>\r\n                            </div>\r\n                    }\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SetupPaymentMethod","//Libraries\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, makeStyles } from '@material-ui/core/';\r\nimport Select from 'react-select';\r\nimport axios from 'axios'\r\n\r\n//Components\r\nimport StyledButton from '../StyledButton/StyledButton';\r\nimport colour from '../Colours/Colours';\r\nimport config from '../../Config';\r\nimport visa from '../../Images/visa.png';\r\nimport amex from '../../Images/amex.png';\r\nimport mastercard from '../../Images/mastercard.png';\r\nimport SetupPaymentMethod from '../SetupPaymentMethod/SetupPaymentMethod';\r\n\r\nconst ModalPopupPayment = ({ rowData }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [userData, setUserData] = useState([]);\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [paymentId, setPaymentId] = useState();\r\n    const [selectOptions, setSelectOptions] = useState([]);\r\n    const [rowDataState, setRowDataState] = useState(rowData)\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    console.log(rowData)\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/stripe/paymentmethods`, { withCredentials: true })\r\n            .then(response => {\r\n                console.log(response)\r\n                var data = response.data;\r\n                setUserData(data);\r\n\r\n                const options = data.map(x =>\r\n                    ({ value: x.stripe_payment_method_id, label: \"****\" + x.stripe_card_last_four_digit + \" Expires \" + x.stripe_card_exp_date }));\r\n                setSelectOptions(options)\r\n                console.log(options)\r\n\r\n            }).catch(error => {\r\n                console.log(error)\r\n            });\r\n    }, []);\r\n\r\n    const onSubmit = () => {\r\n        console.log(rowData.name);\r\n        console.log(paymentId);\r\n\r\n        axios.post(`${config.baseUrl}/u/stripe/subscriptions/${rowData.name}`, {\r\n            paymentMethodID: paymentId.value\r\n        }, { withCredentials: true })\r\n            .then(response => {\r\n                alert(\"worked\")\r\n            })\r\n            .catch(error => {\r\n                alert(error)\r\n            })\r\n            ;\r\n    }\r\n\r\n    const handleSelectChange = (value) => {\r\n        setPaymentId(value);\r\n        console.log(paymentId)\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        titleContainer: {\r\n            backgroundColor: colour.c6,\r\n            color: 'white',\r\n        },\r\n        contentContainer: {\r\n            backgroundColor: colour.c4,\r\n            width: \"100%\",\r\n            height: \"300px\"\r\n        },\r\n        actionContainer: {\r\n            backgroundColor: colour.c3,\r\n        },\r\n        text: {\r\n            color: 'white',\r\n        },\r\n        selectContainer: {\r\n            marginTop: 30\r\n        },\r\n        disabledReasonTextField: {\r\n            marginTop: 20,\r\n            width: 545,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n                color: 'white',\r\n                borderColor: 'black'\r\n            },\r\n            \"& .MuiFormLabel-root.Mui-disabled \": {\r\n                color: 'white'\r\n            },\r\n            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: \"black\"\r\n            },\r\n        },\r\n        reasonTextField: {\r\n            marginTop: 20,\r\n            width: 545,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n                color: 'white',\r\n                borderColor: 'black'\r\n            },\r\n            \"& .MuiFormLabel-root.Mui-disabled \": {\r\n                color: 'white'\r\n            },\r\n            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: \"white\"\r\n            },\r\n        },\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' }),\r\n        menu: provided => ({ ...provided, zIndex: 9999 }),\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledButton style={{ width: \"75%\", height: \"auto\" }} text=\"Subscribe\" event={() => handleClickOpen()} />\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle className={classes.titleContainer} id=\"form-dialog-title\">Payment Method</DialogTitle>\r\n                <DialogContent className={classes.contentContainer}>\r\n                    {userData &&\r\n                        <>\r\n                            <div className=\"d-flex justify-content-center text-center\">\r\n                                <div className=\"w-100\">\r\n                                    <h6 className=\"my-3\">Choose a payment method or add one</h6>\r\n\r\n                                    <div className=\"w-100 text-left\">\r\n                                        <Select\r\n                                            options={selectOptions}\r\n                                            style={selectStyle}\r\n                                            onChange={(value) => {\r\n                                                handleSelectChange(value)\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions className={classes.actionContainer}>\r\n                    <div className=\"mr-4\">\r\n                        <SetupPaymentMethod />\r\n                    </div>\r\n                    <StyledButton text=\"Cancel\" event={() => handleClose()} />\r\n                    <StyledButton text=\"Subscribe\" event={() => onSubmit()} />\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalPopupPayment","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport colour from '../Colours/Colours'\r\n\r\nconst TopBar = (pageInfo) => {\r\n    const page = pageInfo.pageName\r\n    const useStyles = makeStyles({\r\n        container: {\r\n            borderRadius: 5,\r\n            height: 55,\r\n            width: '100%',\r\n            backgroundColor: colour.c6,\r\n            paddingLeft: 10,\r\n            color: colour.c1,\r\n            marginBottom: 15,\r\n            boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n        }\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <h1>{page}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar","//Libraries\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles, Paper } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport axios from \"axios\";\r\nimport { decodeToken } from 'react-jwt';\r\nimport { Row } from \"react-bootstrap\";\r\n\r\n//Components\r\nimport config from \"../../Config\";\r\nimport ModalPopupPayment from \"../../Components/ModalPopupPayment/ModalPopupPayment\";\r\nimport colour from '../../Components/Colours/Colours'\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport Title from '../../Components/Title/Title'\r\n\r\nconst Dashboard = () => {\r\n  const [planData, setPlanData] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get(`${config.baseUrl}/u/stripe/plans/`, { withCredentials: true })\r\n      .then(response => {\r\n        console.log(response.data)\r\n        var data = response.data;\r\n        setPlanData(data);\r\n\r\n      }).catch(error => {\r\n        console.log(error)\r\n      });\r\n  }, []);\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      height: \"auto\",\r\n      backgroundColor: colour.c3,\r\n      boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n      padding: '15px 15px 1px 15px',\r\n      borderRadius: 5,\r\n      marginBottom: 15\r\n    }\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  console.log(planData)\r\n\r\n  return (\r\n    <>\r\n      <Title title=\"Dashboard\" />\r\n      <TopBar pageName='Dashboard' />\r\n      <div className=\"m-2 p-3\" style={{ backgroundColor: colour.c1, }}>\r\n        {planData.length !== 0 &&\r\n          <>\r\n            <h3 className=\"text-dark\">Subscription Plans</h3>\r\n            <hr />\r\n            <div className=\"d-flex\">\r\n              {planData.map(x => {\r\n                return (\r\n                  <>\r\n                    <div className=\"border w-100 d-flex justify-content-center mr-3\">\r\n                      <Row style={{ margin: 20 }} className=\"d-flex justify-content-center text-center\">\r\n                        <div className=\"my-3\">\r\n                          <h4 >\r\n                            {x.name}\r\n                          </h4>\r\n                          <h1>\r\n                            $ {x.price} / Month\r\n                          </h1>\r\n                          <div className=\"w-100 text-left my-4\">\r\n                            <ul>\r\n                              <li>Perk 1</li>\r\n                              <li>Perk 2</li>\r\n                              <li>Perk 3</li>\r\n                              <li>Perk 4</li>\r\n                              <li>Perk 5</li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                        <ModalPopupPayment rowData={x} />\r\n                      </Row>\r\n                    </div>\r\n                  </>\r\n                )\r\n              })}\r\n            </div>\r\n          </>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from 'react';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, makeStyles } from '@material-ui/core/';\r\nimport Select from 'react-select';\r\nimport StyledButton from '../StyledButton/StyledButton';\r\nimport colour from '../Colours/Colours';\r\nimport axios from 'axios'\r\nimport config from '../../Config';\r\n\r\n\r\nconst ModalPopup = ({ rowData, Data, setData }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [rowDataState, setRowDataState] = useState(rowData)\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        let status = rowDataState.user_status\r\n        let reason = rowDataState.reason\r\n        if (status == 1) {\r\n            reason = \"\"\r\n            setRowDataState(prevState => ({\r\n                ...prevState,\r\n                reason: \"\"\r\n            }))\r\n        }\r\n        axios.put(`${config.baseUrl}/u/user/updateuserstatus/${rowData.user_id}`,\r\n            {\r\n                data: {\r\n                    status: status,\r\n                    reason: reason\r\n                }\r\n            })\r\n            .then(response => {\r\n                const index = Data.findIndex(obj => obj.user_id === rowData.user_id);\r\n                const changedData = [...Data];\r\n                changedData[index].user_status = rowDataState.user_status\r\n                setData(changedData)\r\n\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        handleClose()\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        titleContainer: {\r\n            backgroundColor: colour.c4,\r\n            color: 'white',\r\n        },\r\n        contentContainer: {\r\n            backgroundColor: colour.c3,\r\n            height: \"275px\",\r\n        },\r\n        actionContainer: {\r\n            backgroundColor: colour.c3,\r\n        },\r\n        text: {\r\n            color: 'white',\r\n        },\r\n        selectContainer: {\r\n            marginTop: 30\r\n        },\r\n        disabledReasonTextField: {\r\n            marginTop: 20,\r\n            width: 545,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n                color: 'white',\r\n                borderColor: 'black'\r\n            },\r\n            \"& .MuiFormLabel-root.Mui-disabled \": {\r\n                color: 'white'\r\n            },\r\n            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: \"black\"\r\n            },\r\n        },\r\n        reasonTextField: {\r\n            marginTop: 20,\r\n            width: 545,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n                color: 'white',\r\n                borderColor: 'black'\r\n            },\r\n            \"& .MuiFormLabel-root.Mui-disabled \": {\r\n                color: 'white'\r\n            },\r\n            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: \"white\"\r\n            },\r\n        },\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' }),\r\n        menu: provided => ({ ...provided, zIndex: 9999 }),\r\n    }\r\n\r\n    const options = [\r\n        { value: 0, label: 'Terminated' },\r\n        { value: 1, label: 'Active' },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <StyledButton text=\"Terminate/Activate\" event={() => handleClickOpen()} />\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle className={classes.titleContainer} id=\"form-dialog-title\">Terminate/Activate User</DialogTitle>\r\n                <DialogContent className={classes.contentContainer}>\r\n                    <DialogContentText className={classes.text}>\r\n                        To terminate this user, means that this user will not be able to login to their accounts.\r\n                    </DialogContentText>\r\n                    <Select className={classes.selectContainer}\r\n                        options={options}\r\n                        value={options[rowDataState.user_status]}\r\n                        onChange={e => setRowDataState(prevState => ({\r\n                            ...prevState,\r\n                            user_status: e.value\r\n                        }))}\r\n                        styles={selectStyle}\r\n                    />\r\n                    {(rowDataState.user_status == 1 &&\r\n                        <TextField className={classes.disabledReasonTextField}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            disabled\r\n                            multiline\r\n                            rows={3}\r\n                            rowsMax={3}\r\n                            label=\"Reason\"\r\n                            value=\"\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    )}\r\n                    {(rowDataState.user_status == 0 &&\r\n                        <TextField className={classes.reasonTextField}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            multiline\r\n                            rows={3}\r\n                            rowsMax={3}\r\n                            autoFocus={true}\r\n                            label=\"Reason\"\r\n                            onChange={e => setRowDataState(prevState => ({\r\n                                ...prevState,\r\n                                reason: e.target.value\r\n                            }))}\r\n                            value={rowDataState.reason}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions className={classes.actionContainer}>\r\n                    <StyledButton text=\"Cancel\" event={() => handleClose()} />\r\n                    <StyledButton text=\"Save\" event={() => onSubmit()} />\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalPopup","import { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n  export default tableIcons;","import React, { useState, useEffect } from 'react';\r\nimport { Paper, makeStyles, Modal } from '@material-ui/core';\r\nimport colour from '../../Components/Colours/Colours'\r\nimport StyledButton from '../../Components/StyledButton/StyledButton'\r\nimport axios from 'axios';\r\nimport config from '../../Config.js';\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport { decodeToken } from \"react-jwt\";\r\nimport { useHistory } from 'react-router';\r\nimport ModalPopup from '../../Components/ModalPopup/ModalPopup';\r\nimport Title from '../../Components/Title/Title'\r\n\r\n//table\r\nimport MaterialTable from 'material-table'\r\nimport tableIcons from '../../Components/MUITableIcons/material.table.icons'\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    //local style\r\n    table: {\r\n        padding: 5,\r\n        backgroundColor: colour.c3,\r\n        boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n        \"& > *\": {\r\n            backgroundColor: colour.c3,\r\n            color: colour.c1 + '!important',\r\n            boxShadow: \" 0 0 0\"\r\n        },\r\n        \"& th > span\": { color: colour.c1 + '!important' },\r\n        // \"& svg\": { color: colour.c1 + '!important' },\r\n        \"& svg\": { fill: colour.c1 },\r\n        \"& div\": { color: colour.c1, borderBottom: colour.c1 + '!important' },\r\n        \"& td \": { color: colour.c1 }\r\n    },\r\n    boxContainer: {\r\n        \"& > button\": {\r\n            marginRight: 5,\r\n            marginBottom: 5,\r\n            marginTop: 5\r\n        }\r\n    }\r\n})\r\n\r\n\r\nconst ManageUsers = () => {\r\n    const history = useHistory()\r\n    const [userData, setUserData] = useState();\r\n    const token = localStorage.getItem('token')\r\n    const company_id = decodeToken(token).companyId\r\n    if (decodeToken(token).privId > 3) {\r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n    const eventHandler = (page, id) => {\r\n        history.push(`/${page}/${id}`)\r\n    }\r\n    //get user data\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/user/getalluserdata/${company_id}`,\r\n            {})\r\n            .then(response => {\r\n                setUserData(response.data.data)\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n    //table col\r\n    const columns = () => [\r\n        {\r\n            title: \"id\",\r\n            field: \"user_id\",\r\n            hidden: true,\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n            editable: 'never',\r\n        },\r\n        {\r\n            title: \"Email\",\r\n            field: \"email\",\r\n            defaultSort: 'asc',\r\n        },\r\n        {\r\n            title: \"Contact Number\",\r\n            field: \"contact_number\",\r\n        },\r\n        {\r\n            title: \"Status\",\r\n            field: \"user_status\",\r\n            lookup: { 0: \"Terminated\", 1: \"Active\" }\r\n\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            align: 'left',\r\n            width: '25%',\r\n            render: rowData =>\r\n                <div className={classes.boxContainer}>\r\n                    <ModalPopup rowData={rowData} Data={userData} setData={setUserData} />\r\n                    <StyledButton text=\"Assign Role\" event={() => eventHandler('assignrole', rowData.gu_id)} />\r\n                    <StyledButton text=\"Edit Details\" event={() => eventHandler('edituser', rowData.gu_id)} />\r\n                    <StyledButton text=\"Reset Password\" event={() => eventHandler('resetpassword', rowData.gu_id)} />\r\n                </div>\r\n        }]\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div>\r\n            <Title title=\"Manage Users\" />\r\n            <TopBar pageName='Manage Users' />\r\n            <Paper className={classes.table}>\r\n                <MaterialTable\r\n                    icons={tableIcons}\r\n                    columns={columns()}\r\n                    data={userData}\r\n                    title=\"\"\r\n                    options={{\r\n                        tableLayout: \"auto\",\r\n                        draggable: false,\r\n                        headerStyle: {\r\n                            backgroundColor: colour.c3,\r\n                            borderTop: 'solid',\r\n                            borderBottom: 'solid',\r\n                            borderWidth: 2,\r\n                            color: colour.c1\r\n                        },\r\n                        rowStyle: {\r\n                            borderColor: '#ff0000'\r\n                        },\r\n                    }}\r\n                />\r\n            </Paper >\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManageUsers;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, Paper, Button } from '@material-ui/core';\r\nimport colour from '../../Components/Colours/Colours'\r\nimport StyledButton from '../../Components/StyledButton/StyledButton'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport config from '../../Config.js';\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport { decodeToken } from \"react-jwt\";\r\nimport { useHistory } from 'react-router';\r\nimport Title from '../../Components/Title/Title'\r\n\r\n//table\r\nimport MaterialTable from 'material-table'\r\nimport tableIcons from '../../Components/MUITableIcons/material.table.icons'\r\n\r\n\r\nconst ManageInvites = () => {\r\n    const token = localStorage.getItem('token')\r\n    const company_id = decodeToken(token).companyId\r\n    const [userData, setUserData] = useState();\r\n    const history = useHistory();\r\n\r\n    if (decodeToken(token).privId > 3) {\r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        table: {\r\n            padding: 5,\r\n            backgroundColor: colour.c3,\r\n            boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n            \"& > *\": {\r\n                backgroundColor: colour.c3,\r\n                color: colour.c1 + '!important',\r\n                boxShadow: \" 0 0 0\"\r\n            },\r\n            \"& th > span\": { color: colour.c1 + '!important' },\r\n            // \"& svg\": { color: colour.c1 + '!important' },\r\n            \"& svg\": { fill: colour.c1 },\r\n            \"& div\": { color: colour.c1, borderBottom: colour.c1 + '!important' },\r\n            \"& table tbody tr td.MuiTableCell-body\": { colour: colour.c1 }\r\n        },\r\n        boxContainer: {\r\n            \"& > button\": {\r\n                marginRight: 10,\r\n                marginBottom: 5,\r\n                marginTop: 5\r\n            }\r\n        },\r\n    })\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/user/getuserinvitelist/${company_id}`,\r\n            {})\r\n            .then(response => {\r\n                setUserData(response.data)\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, []);//End of useEffect({function code,[]})\r\n\r\n    const resendInvite = (email, company_id, priv_id) => {\r\n        axios.post(`${config.baseUrl}/u/user/resendinvite/`,\r\n            {\r\n                data: {\r\n                    email: email,\r\n                    company_id: company_id,\r\n                    priv_id: priv_id\r\n                }\r\n            })\r\n            .then(response => {\r\n                alert('Invite has been resend.')\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const deleteInvite = (email) => {\r\n        axios.delete(`${config.baseUrl}/u/user/deleteinvite/${email}`,\r\n            {\r\n            })\r\n            .then(response => {\r\n                alert('Invite has been deleted')\r\n                setUserData(userData.filter((data) => { return data.email != email }))\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const columns = () => [\r\n        {\r\n            title: \"Email\",\r\n            field: \"email\",\r\n        },\r\n        {\r\n            title: \"company_id\",\r\n            field: \"company_id\",\r\n            hidden: true\r\n        },\r\n        {\r\n            title: \"priv_id\",\r\n            field: \"priv_id\",\r\n            hidden: true\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            align: 'center',\r\n            render: rowData =>\r\n                <div className={classes.boxContainer}>\r\n                    <StyledButton text=\"Resend Invite Link\" event={() => resendInvite(rowData.email, rowData.company_id, rowData.priv_id)} />\r\n                    <StyledButton text=\"Delete Invite Link\" event={() => deleteInvite(rowData.email)} />\r\n                </div>\r\n        },\r\n\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <div className='manageinvite'>\r\n            <Title title= \"Manage Invite Link\"/>\r\n            <TopBar pageName='Manage Invite Link' />\r\n            <Paper className={classes.table}>\r\n                <MaterialTable\r\n                    icons={tableIcons}\r\n                    columns={columns()}\r\n                    data={userData}\r\n                    title=\"\"\r\n                    options={{\r\n                        tableLayout: \"auto\",\r\n                        draggable: false,\r\n                        headerStyle: {\r\n                            backgroundColor: colour.c3,\r\n                            borderTop: 'solid',\r\n                            borderBottom: 'solid',\r\n                            borderWidth: 2,\r\n                            color: colour.c1\r\n                        },\r\n                        rowStyle: {\r\n                            borderColor: '#ff0000',\r\n                            color: colour.c1\r\n                        },\r\n                    }}\r\n\r\n                />\r\n                <Row style={{ margin: 'auto' }}>\r\n                    <Col>\r\n                        <div>\r\n                            <StyledButton style={{ marginTop: 10, marginBottom: 10 }} text=\"Send Invites\" event={() => history.push('/sendinvites')}></StyledButton>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Paper >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManageInvites;","import { React, useState, useEffect, useMemo } from 'react';\r\nimport Select from 'react-select-v2';\r\nimport countryList from 'react-select-country-list'\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport { isValidPhoneNumber } from \"react-phone-number-input\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport axios from 'axios';\r\nimport { decodeToken } from 'react-jwt';\r\nimport config from '../../Config.js';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { makeStyles, Paper, Button } from '@material-ui/core';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport TopBar from '../../Components/TopBar/TopBar.js';\r\nimport colour from '../../Components/Colours/Colours.js';\r\nimport Title from '../../Components/Title/Title'\r\n\r\nconst EditUser = ({ match }) => {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, control, formState: { errors } } = useForm();\r\n\r\n    const token = localStorage.getItem('token')\r\n    const userPrivilege = decodeToken(token).privId\r\n    const user_id = match.params.userId;\r\n    if (decodeToken(token).privId > 3) { \r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n    const countryOptions = useMemo(() => countryList().getData(), [])\r\n\r\n    const [firstName, setFirstName] = useState()\r\n    const [lastName, setLastName] = useState()\r\n    const [email, setEmail] = useState()\r\n    const [contact, setContact] = useState()\r\n    const [country, setCountry] = useState('')\r\n    const [state, setState] = useState()\r\n    const [street, setStreet] = useState()\r\n    const [postalcode, setPostalCode] = useState()\r\n    const [privilege, setPrivilege] = useState()\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/user/getuserdata/${user_id}`,\r\n            {})\r\n            .then(response => {\r\n                var data = response.data.data[0]\r\n                for (var i = 0; i < countryOptions.length; i++) {\r\n                    if (countryOptions[i].label === data.country) {\r\n                        setCountry(countryOptions[i])\r\n                    }\r\n                }\r\n                setFirstName(data.first_name)\r\n                setLastName(data.last_name)\r\n                setEmail(data.email)\r\n                setContact(data.contact_number.toString())\r\n                setState(data.state)\r\n                setStreet(data.street)\r\n                setPostalCode(data.postal_code)\r\n                setPrivilege(privOptions[data.priv_id - 2])\r\n            }).catch(error => {\r\n                if (error.response.status == 500) {\r\n                    alert(\"Error!\")\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    const privOptions = [\r\n        { value: 2, label: 'Super Admin' },\r\n        { value: 3, label: 'Admin' },\r\n        { value: 4, label: 'User' }\r\n    ]\r\n\r\n    const phoneValidation = (value) => {\r\n        if (value == \"\") {\r\n            return false\r\n        }\r\n        else {\r\n            return isValidPhoneNumber('+' + value.toString())\r\n\r\n        }\r\n    }\r\n    const onSubmit = (data, e) => {\r\n        if (data.country == undefined) {\r\n            data.country = country\r\n        }\r\n        data.contact = contact\r\n        data.privilege = privilege\r\n        axios.put(`${config.baseUrl}/u/user/updateuser/${user_id}`,\r\n            {\r\n                data: data\r\n            })\r\n            .then(response => {\r\n                alert('Successfuly Updated')\r\n                history.push(`/manageusers`);\r\n            }).catch(error => {\r\n\r\n                if (error.response.status == 500) {\r\n                    alert('Error!')\r\n                }\r\n\r\n                if (error.response.status == 401) {\r\n                    alert(\"This email has already been used.\")\r\n                }\r\n                // Reset the form state\r\n                e.target.reset();\r\n            });\r\n    }// End of onSubmit\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formField: {\r\n            backgroundColor: 'black'\r\n        },\r\n        btnContainer: {\r\n            marginTop: 20,\r\n            marginBottom: 50,\r\n            margin: 'auto'\r\n        }\r\n\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Title title=\"Edit User\"/>\r\n            <TopBar pageName='Edit User' />\r\n            <Paper className={classes.formContainer}>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"firstNameInput\">First Name</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"firstNameInput\"\r\n                            name=\"firstName\"\r\n                            defaultValue={firstName}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter first name\"\r\n                            placeholder=\"Enter first name\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter your first name.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"firstName\"] && (\r\n                            <p className=\"error-message\">Please enter first name</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastNameInput\">Last Name</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"lastNameInput\"\r\n                            name=\"lastName\"\r\n                            defaultValue={lastName}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter last name\"\r\n                            placeholder=\"Enter last name\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter your last name.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"lastName\"] && (\r\n                            <p className=\"error-message\">Please enter last name</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"emailInput\">Email</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"emailInput\"\r\n                            defaultValue={email}\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter email\"\r\n                            placeholder=\"Enter email\"\r\n                            ref={register({\r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                    message: \"Invalid email address\"\r\n                                },\r\n                                required: {\r\n                                    type: \"email\",\r\n                                    value: true,\r\n                                    message: 'Please enter your email.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"email\"] && (\r\n                            <p className=\"error-message\">Invalid Email</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"contactInput\">Contact Number</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <Controller\r\n                            name=\"contact\"\r\n                            control={control}\r\n                            rules={{\r\n                                validate: (value) => phoneValidation(contact)\r\n                            }}\r\n                            render={() => (\r\n                                <PhoneInput\r\n                                    dropdownStyle={{ 'color': \"black\" }}\r\n                                    enableSearch\r\n                                    value={contact}\r\n                                    onChange={setContact}\r\n                                    name=\"contact\"\r\n                                    country=\"sg\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        {errors[\"contact\"] && (\r\n                            <p className=\"error-message\">Invalid Phone Number</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"countryInput\">Select Country</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <Select options={countryOptions}\r\n                            styles={selectStyle}\r\n                            name=\"country\"\r\n                            register={register}\r\n                            value={country}\r\n                            onChange={setCountry}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"stateInput\">State</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"stateInput\"\r\n                            name=\"state\"\r\n                            defaultValue={state}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter state\"\r\n                            placeholder=\"Enter state\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter state.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"state\"] && (\r\n                            <p className=\"error-message\">Please enter your state</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"streetInput\">Street</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"streetInput\"\r\n                            name=\"street\"\r\n                            defaultValue={street}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter street\"\r\n                            placeholder=\"Enter street\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter street.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"street\"] && (\r\n                            <p className=\"error-message\">Please enter your street</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"postalcodeInput\">Postal Code</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"postalcodeInput\"\r\n                            name=\"postalcode\"\r\n                            defaultValue={postalcode}\r\n                            type=\"numbers\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter postal code\"\r\n                            placeholder=\"Enter postal code\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter postal code.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"postalcode\"] && (\r\n                            <p className=\"error-message\">Please enter your postal code</p>\r\n                        )}\r\n                    </div>\r\n                    {(userPrivilege == 2) && (\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"privInput\">Privilege</label>\r\n                            <Select\r\n                                options={privOptions}\r\n                                name=\"privilege\"\r\n                                ref={register()}\r\n                                value={privilege}\r\n                                onChange={setPrivilege}\r\n                                styles={selectStyle}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <Row >\r\n                        <div className={classes.btnContainer}>\r\n                            <Button type=\"submit\" style={{ backgroundColor: colour.c5, color: colour.c1, marginRight: 10, padding: 10 }}>Submit</Button>\r\n                            <Button onClick={() => history.push(`/manageusers`)} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginLeft: 10, padding: 10 }}>Cancel</Button>\r\n                        </div>\r\n                    </Row>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\nexport default EditUser\r\n","import React, { } from 'react';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\nimport colour from '../../Components/Colours/Colours'\r\nimport Title from '../../Components/Title/Title'\r\n\r\nconst useStyles = makeStyles({\r\n    missing: {\r\n        color: colour.c1\r\n    }\r\n})\r\n\r\n\r\nconst MissingPage = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <Title title=\"Missing Page\" />\r\n            <Typography className={classes.missing} variant=\"h1\">404 Page Not Found</Typography>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MissingPage;","import { React, useState, useEffect } from 'react';\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport axios from 'axios';\r\nimport config from '../../Config.js';\r\nimport { makeStyles, Paper, IconButton, Button } from '@material-ui/core';\r\nimport { decodeToken } from 'react-jwt';\r\nimport Select from 'react-select';\r\nimport { Row } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router';\r\nimport Title from '../../Components/Title/Title'\r\n\r\n//components\r\nimport TopBar from '../../Components/TopBar/TopBar.js';\r\nimport StyledButton from '../../Components/StyledButton/StyledButton'\r\nimport colour from '../../Components/Colours/Colours'\r\n\r\n\r\nconst AssignRole = ({ match }) => {\r\n    const token = localStorage.getItem('token')\r\n    const userId = match.params.userId;\r\n    const companyId = decodeToken(token).companyId\r\n    const history = useHistory()\r\n\r\n    //states\r\n    const [allRoles, setAllRoles] = useState([])\r\n    const [userRoles, setUserRoles] = useState([])\r\n    const onChange = userRoles => setUserRoles(userRoles);\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/user/checkuser/?userId=${userId}&companyId=${companyId}`, //check if accessed user belongs to the company\r\n            {})\r\n            .then(response => {\r\n                var data = response.data\r\n                if (data.length == 0) {\r\n                    history.push('/dashboard')\r\n                    alert('User does not exist.')\r\n                }\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        axios.get(`${config.baseUrl}/u/role/getallroles/${companyId}`, // get all roles from the company\r\n            {})\r\n            .then(response => {\r\n                const rolesData = response.data.data.map(oneData => ({ value: oneData.role_id, label: oneData.name }));\r\n                setAllRoles(allRoles.concat(rolesData));\r\n                axios.get(`${config.baseUrl}/u/role/getuserrole/${userId}`, // get user roles\r\n                    {})\r\n                    .then(response => {\r\n                        var data = response.data.data\r\n                        var userRole = []\r\n                        var roles = []\r\n                        for (var i = 0; i < rolesData.length; i++) { //push all the roles from the company into array to do indexOf function\r\n                            roles.push(rolesData[i].value)\r\n                        }\r\n                        for (var i = 0; i < data.length; i++) {\r\n                            if (roles.indexOf(data[i].role_id) != -1) { //check which roles collides and set them as selected to preselect these roles\r\n                                userRole.push(rolesData[roles.indexOf(data[i].role_id)])\r\n                            }\r\n                        }\r\n                        setUserRoles(userRole) //set user roles\r\n                    }).catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n\r\n    }, [])\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n            overflow: 'hidden',\r\n            minHeight: 250\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formField: {\r\n            backgroundColor: 'black'\r\n        },\r\n        removeOutline: {\r\n            \"&:focus\": {\r\n                border: \"none\",\r\n                outline: \"none\"\r\n            }\r\n        },\r\n        btnContainer: {\r\n            marginTop: 50,\r\n            marginBottom: 20,\r\n            margin: 'auto'\r\n        }\r\n    })\r\n    const classes = useStyles()\r\n\r\n    //style for select\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' }),\r\n        control: base => ({ ...base, minHeight: 100, alignContent: 'flex-start' }),\r\n        multiValueRemove: styles => ({ ...styles, color: 'white' }),\r\n        multiValue: styles => ({ ...styles, backgroundColor: colour.c5 }),\r\n        multiValueLabel: styles => ({ ...styles, color: 'white' }),\r\n    }\r\n\r\n    //submit\r\n    const onSubmit = () => {\r\n        axios.put(`${config.baseUrl}/u/role/updateuserrole/${userId}`,\r\n            {\r\n                data: userRoles\r\n            })\r\n            .then(response => {\r\n                alert('Roles has been assigned.')\r\n                history.push(`/manageusers`);\r\n            }).catch(error => {\r\n\r\n                if (error.response.status == 500) {\r\n                    alert('err in assigning role');\r\n                }\r\n                window.location.href = '/dashboard'\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Title title=\"Assign Role\"/>\r\n            <TopBar pageName='Assign Role' />\r\n            <Paper className={classes.formContainer}>\r\n                <form className={classes.form}>\r\n                    <Select\r\n                        closeMenuOnSelect={false}\r\n                        name=\"Roles\"\r\n                        id=\"Roles\"\r\n                        styles={selectStyle}\r\n                        value={userRoles}\r\n                        options={allRoles}\r\n                        onChange={onChange}\r\n                        isMulti\r\n                        maxMenuHeight={125}\r\n                        menuPlacement=\"auto\"\r\n                    />\r\n                </form>\r\n                <Row >\r\n                    <div className={classes.btnContainer}>\r\n                        <Button onClick={() => onSubmit()} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginRight: 10, padding: 10 }}>Submit</Button>\r\n                        <Button onClick={() => history.push(`/manageusers`)} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginLeft: 10, padding: 10 }}>Cancel</Button>\r\n                    </div>\r\n                </Row>\r\n            </Paper>\r\n        </div >\r\n    );\r\n};\r\nexport default AssignRole\r\n\r\n","import { React, useState } from 'react';\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport axios from 'axios';\r\nimport config from '../../Config.js';\r\nimport { makeStyles, Paper, IconButton, Button } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\r\nimport {Row} from \"react-bootstrap\"\r\nimport { decodeToken } from 'react-jwt';\r\nimport { useHistory } from 'react-router';\r\n//components\r\nimport TopBar from '../../Components/TopBar/TopBar.js';\r\nimport colour from '../../Components/Colours/Colours.js';\r\nimport Title from '../../Components/Title/Title';\r\n\r\nconst ResetPassword = ({ match }) => {\r\n    const token = localStorage.getItem('token')\r\n    const gu_id = match.params.guId;\r\n    const history = useHistory()\r\n    if (decodeToken(token).privId > 3) { \r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n            overflow: 'hidden'\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formField: {\r\n            backgroundColor: 'black'\r\n        },\r\n        removeOutline: {\r\n            \"&:focus\": {\r\n                border: \"none\",\r\n                outline: \"none\"\r\n            }\r\n        },\r\n        btnContainer: {\r\n            marginBottom: 20,\r\n            margin: 'auto'\r\n        }\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [pwType, setPwType] = useState('password')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [cmfPwType, setCmfPwType] = useState('password')\r\n\r\n    //submit\r\n    const onSubmit = () => {\r\n        if (password.length < 1) {\r\n            alert('Password should not be empty')\r\n        } else if (password != confirmPassword) {\r\n            alert('Password not matching')\r\n        } else {\r\n            axios.put(`${config.baseUrl}/u/user/resetpassword/${gu_id}`, { data: { password: password } })\r\n                .then(response => {\r\n                    alert('Password updated')\r\n                    history.push(`/manageusers`)\r\n                })\r\n                .catch(err => {\r\n                    alert('Update fail')\r\n                    console.log(err)\r\n                })\r\n        }\r\n    }\r\n\r\n    //show password\r\n    const togglePW = () => {\r\n        if (pwType == 'password') {\r\n            setPwType('text')\r\n        } else {\r\n            setPwType('password')\r\n        }\r\n    }\r\n\r\n    //show confirm password\r\n    const toggleCmfPW = () => {\r\n        if (cmfPwType == 'password') {\r\n            setCmfPwType('text')\r\n        } else {\r\n            setCmfPwType('password')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Title title=\"Reset Password\"/>\r\n            <TopBar pageName='Reset Password' />\r\n            <Paper className={classes.formContainer}>\r\n                <form className={classes.form} noValidate autoComplete=\"off\">\r\n                    {/* New Password */}\r\n                    <div className=\"form-group\" style={{ height: 'auto' }}>\r\n                        <label htmlFor=\"newPassword\">New Password</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <input\r\n                                style={{ margin: 'auto' }}\r\n                                id=\"newPassword\"\r\n                                type={pwType}\r\n                                className=\"form-control\" w\r\n                                placeholder=\"Enter new password\"\r\n                                value={password}\r\n                                onChange={(e) => { setPassword(e.target.value) }}\r\n                            />\r\n                            <IconButton onClick={() => togglePW()} className={classes.removeOutline}>\r\n                                {(pwType == 'password') && <VisibilityOff style={{ color: 'white' }} />}\r\n                                {(pwType != 'password') && <Visibility style={{ color: 'white' }} />}\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Confirm Password */}\r\n                    <div className=\"form-group\" style={{ height: 'auto' }}>\r\n                        <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <input\r\n                                style={{ margin: 'auto' }}\r\n                                id=\"confirmPassword\"\r\n                                type={cmfPwType}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Confirm Password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => { setConfirmPassword(e.target.value) }}\r\n                            />\r\n                            <IconButton onClick={() => toggleCmfPW()} className={classes.removeOutline}>\r\n                                {(cmfPwType == 'password') && <VisibilityOff style={{ color: 'white' }} />}\r\n                                {(cmfPwType != 'password') && <Visibility style={{ color: 'white' }} />}\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <Row >\r\n                    <div className={classes.btnContainer}>\r\n                        <Button onClick={() => onSubmit()} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginRight: 10 }}>Submit</Button>\r\n                        <Button onClick={() => history.push(`/manageusers`)} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginLeft: 10 }}>Cancel</Button>\r\n                    </div>\r\n                </Row>\r\n            </Paper>\r\n        </div >\r\n    );\r\n};\r\nexport default ResetPassword\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, Paper, Button } from '@material-ui/core';\r\nimport colour from '../../Components/Colours/Colours'\r\nimport StyledButton from '../../Components/StyledButton/StyledButton'\r\nimport Title from '../../Components/Title/Title'\r\nimport axios from 'axios';\r\nimport config from '../../Config.js';\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport { decodeToken } from \"react-jwt\";\r\nimport { useHistory } from 'react-router';\r\n//table\r\nimport MaterialTable from 'material-table'\r\nimport tableIcons from '../../Components/MUITableIcons/material.table.icons'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    //local style\r\n    table: {\r\n        padding: 5,\r\n        backgroundColor: colour.c3,\r\n        boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n        \"& > *\": {\r\n            backgroundColor: colour.c3,\r\n            color: colour.c1 + '!important',\r\n            boxShadow: \" 0 0 0\"\r\n        },\r\n        \"& th > span\": { color: colour.c1 + '!important' },\r\n        // \"& svg\": { color: colour.c1 + '!important' },\r\n        \"& svg\": { fill: colour.c1 },\r\n        \"& div\": { color: colour.c1, borderBottom: colour.c1 + '!important' }\r\n    },\r\n    boxContainer: {\r\n        \"& > button\": {\r\n            marginRight: 10,\r\n            marginBottom: 5,\r\n            marginTop: 5\r\n        }\r\n    },\r\n    btnContainer: {\r\n        backgroundColor: colour.c4,\r\n        paddingBottom: 10,\r\n        float: 'right'\r\n    },\r\n    btn: {\r\n        backgroundColor: colour.c5,\r\n        color: colour.c1,\r\n        '&:hover': {\r\n            backgroundColor: colour.c5,\r\n        }\r\n\r\n    }\r\n})\r\n\r\nconst ManageRoles = () => {\r\n    const token = localStorage.getItem('token')\r\n    const company_id = decodeToken(token).companyId\r\n    const [Data, setData] = useState();\r\n    const history = useHistory();\r\n    if (decodeToken(token).privId > 3) {\r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n    const eventHandler = (page, id) => {\r\n        history.push(`/${page}/${id}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/role/getallroles/${company_id}`,\r\n            {})\r\n            .then(response => {\r\n                setData(response.data.data)\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, []);//End of useEffect({function code,[]})\r\n\r\n    const columns = () => [\r\n        {\r\n            title: \"id\",\r\n            field: \"role_id\",\r\n            hidden: true,\r\n            defaultSort: 'asc',\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n            editable: 'never',\r\n        },\r\n        {\r\n            title: \"Description\",\r\n            field: \"description\",\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            align: 'center',\r\n            render: rowData => <StyledButton text=\"Edit Details\" event={() => eventHandler('editrole', rowData.role_id)} />\r\n        },\r\n\r\n    ];\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div>\r\n            <Title title= \"Manage Role Rights\"/>\r\n            <TopBar pageName='Manage Role Rights' />\r\n            <Paper className={classes.table}>\r\n                <MaterialTable\r\n\r\n                    icons={tableIcons}\r\n                    columns={columns()}\r\n                    data={Data}\r\n                    title=\"\"\r\n                    options={{\r\n                        tableLayout: \"auto\",\r\n                        draggable: false,\r\n                        headerStyle: {\r\n                            backgroundColor: colour.c3,\r\n                            borderTop: 'solid',\r\n                            borderBottom: 'solid',\r\n                            borderWidth: 2,\r\n                            color: colour.c1\r\n                        },\r\n                        rowStyle: {\r\n                            borderColor: '#ff0000'\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Paper >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManageRoles;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Select from 'react-select'\r\nimport { Paper, makeStyles, Button } from '@material-ui/core';\r\nimport { decodeToken } from \"react-jwt\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Row } from 'react-bootstrap';\r\nimport config from '../../Config';\r\nimport colour from '../../Components/Colours/Colours';\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport Title from '../../Components/Title/Title'\r\n\r\n\r\n\r\nconst EditRole = ({ match }) => {\r\n    const { register, handleSubmit, errors, watch, setValue } = useForm();\r\n    const history = useHistory();\r\n    const token = localStorage.getItem('token')\r\n    const company_id = decodeToken(token).companyId\r\n    const role_id = match.params.roleId;\r\n    if (decodeToken(token).privId > 3) {\r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n    const [Data, setData] = useState({\r\n        name: null,\r\n        description: null,\r\n        swot_rights: null,\r\n        ip_rights: null,\r\n        ror_rights: null,\r\n        qms_rights: null,\r\n        policy_rights: null,\r\n        oap_rights: null,\r\n        raa_rights: null,\r\n        scope_rights: null,\r\n        nr_rights: null,\r\n        td_rights: null,\r\n    })\r\n\r\n    const defaultValue = (data, roleData) => {\r\n        if (data == undefined) {\r\n            return roleData\r\n        }\r\n    }\r\n\r\n\r\n    const handlingOptions = [\r\n        { value: 0, label: 'No Permission' },\r\n        { value: 1, label: 'Can Edit' },\r\n        { value: 2, label: 'Can Handle' },\r\n        { value: 3, label: 'Can do both' },\r\n    ];\r\n\r\n    const options = [\r\n        { value: 0, label: 'No Permission' },\r\n        { value: 1, label: 'Can Edit' },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/role/checkrole/?roleId=${role_id}&companyId=${company_id}`,\r\n            {})\r\n            .then(response => {\r\n                var data = response.data\r\n                if (data.length == 0) {\r\n                    history.push('/dashboard')\r\n                    alert('Role does not exist.')\r\n                }\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n\r\n        axios.get(`${config.baseUrl}/u/role/getonerole/${role_id}`,\r\n            {})\r\n            .then(response => {\r\n                var data = response.data.data\r\n                setData({\r\n                    name: data[0].name,\r\n                    description: data[0].description,\r\n                    swot_rights: handlingOptions[data[0].swot_rights],\r\n                    ip_rights: handlingOptions[data[0].ip_rights],\r\n                    ror_rights: handlingOptions[data[0].ror_rights],\r\n                    qms_rights: handlingOptions[data[0].qms_rights],\r\n                    policy_rights: handlingOptions[data[0].policy_rights],\r\n                    oap_rights: handlingOptions[data[0].oap_rights],\r\n                    raa_rights: options[data[0].raa_rights],\r\n                    scope_rights: options[data[0].scope_rights],\r\n                    nr_rights: options[data[0].nr_rights],\r\n                    td_rights: options[data[0].td_rights],\r\n                })\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, []);//End of useEffect({function code,[]})\r\n\r\n    // Handle the form submit of role form\r\n    const onSubmit = (data, e) => {\r\n        axios.put(`${config.baseUrl}/u/role/updaterolerights/${role_id}`,\r\n            {\r\n                data: Data\r\n            }\r\n        )\r\n            .then(response => {\r\n                alert('Role has been updated.')\r\n                history.push(`/manageroles`);\r\n            }).catch(error => {\r\n                if (error.response.status == 500) {\r\n                    alert(\"Error!\")\r\n                }\r\n            });\r\n    } //End of onSubmit\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n            overflow: 'hidden'\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formGroup: {\r\n            margin: 25\r\n        },\r\n        btnContainer: {\r\n            marginTop: 75,\r\n            marginBottom: 20,\r\n            margin: 'auto'\r\n        }\r\n\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Title title= \"Edit Role Rights\"/>\r\n            <TopBar pageName='Edit Role Rights' />\r\n            <Paper className={classes.formContainer}>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\">\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"nameInput\">Name</label>\r\n                        <input\r\n                            id=\"nameInput\"\r\n                            name=\"name\"\r\n                            defaultValue={Data.name}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            ref={register()}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"descriptionInput\">Description</label>\r\n                        <input\r\n                            id=\"descriptionInput\"\r\n                            name=\"description\"\r\n                            defaultValue={Data.description}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            ref={register()}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"scopeInput\">Scope Rights</label>\r\n                        <Select\r\n                            id=\"scopeInput\"\r\n                            options={options}\r\n                            name=\"raa_rights\"\r\n                            ref={register()}\r\n                            value={Data.scope_rights}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    scope_rights: value\r\n                                }))\r\n                            }}\r\n                            styles={selectStyle}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"nrInput\">Normative References Rights</label>\r\n                        <Select\r\n                            id=\"nrInput\"\r\n                            options={options}\r\n                            name=\"nr_rights\"\r\n                            ref={register()}\r\n                            value={Data.nr_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    nr_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"tdInput\">Terms and Definitions</label>\r\n                        <Select\r\n                            id=\"tdInput\"\r\n                            options={options}\r\n                            name=\"td_rights\"\r\n                            ref={register()}\r\n                            value={Data.td_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    td_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"sowtInput\">SWOT Analysis Rights</label>\r\n                        <Select\r\n                            options={handlingOptions}\r\n                            id=\"swotInput\"\r\n                            name=\"swot_rights\"\r\n                            ref={register()}\r\n                            value={Data.swot_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    swot_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"ipInput\">Interested Parties Rights</label>\r\n                        <Select\r\n                            id=\"ipInput\"\r\n                            options={handlingOptions}\r\n                            name=\"ip_rights\"\r\n                            ref={register()}\r\n                            value={Data.ip_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    ip_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"qmsInput\">Scope of QMS Rights</label>\r\n                        <Select\r\n                            id=\"qmsInput\"\r\n                            options={handlingOptions}\r\n                            name=\"qms_rights\"\r\n                            ref={register()}\r\n                            value={Data.qms_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    qms_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"policyInput\">Policy Rights</label>\r\n                        <Select\r\n                            id=\"policyInput\"\r\n                            options={handlingOptions}\r\n                            name=\"policy_rights\"\r\n                            ref={register()}\r\n                            value={Data.policy_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    policy_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"raaInput\">Responsibility & Authority Rights</label>\r\n                        <Select\r\n                            id=\"raaInput\"\r\n                            options={options}\r\n                            name=\"raa_rights\"\r\n                            ref={register()}\r\n                            value={Data.raa_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    raa_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"rorInput\">Register of Risk and Opportunities Rights</label>\r\n                        <Select\r\n                            id=\"rorInput\"\r\n                            options={handlingOptions}\r\n                            name=\"ror_rights\"\r\n                            ref={register()}\r\n                            value={Data.ror_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    ror_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"oapInput\">Objective Achievement Rights</label>\r\n                        <Select\r\n                            id=\"oapInput\"\r\n                            options={handlingOptions}\r\n                            name=\"oap_rights\"\r\n                            ref={register()}\r\n                            value={Data.oap_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    oap_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <Row >\r\n                        <div className={classes.btnContainer}>\r\n                            <Button type=\"submit\" style={{ backgroundColor: colour.c5, color: colour.c1, marginRight: 10, padding: 10 }}>Submit</Button>\r\n                            <Button onClick={() => history.push(`/manageroles`)} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginLeft: 10, padding: 10 }}>Cancel</Button>\r\n                        </div>\r\n                    </Row>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditRole;","import StyledButton from \"../../Components/StyledButton/StyledButton\";\r\nimport { makeStyles, Paper } from '@material-ui/core';\r\nimport { useHistory } from \"react-router\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport Title from '../../Components/Title/Title'\r\nimport colour from \"../../Components/Colours/Colours\";\r\nimport { Row } from \"react-bootstrap\";\r\nconst Profile = () => {\r\n    const history = useHistory();\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            margin: 'auto',\r\n            height: \"auto\",\r\n            backgroundColor: colour.c1,\r\n            boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n            padding: '15px 15px 1px 15px',\r\n            borderRadius: 5,\r\n            marginBottom: 15\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n    return (\r\n        <>\r\n            <Title title=\"Profile\" />\r\n            <TopBar pageName='Profile' />\r\n            <div className={classes.root}>\r\n                <Row style={{ margin: 20 }}>\r\n                    <div style={{ margin: 'auto' }}>\r\n                        <StyledButton text=\"Edit Profile\" event={() => { history.push('/editprofile') }} />\r\n                        <StyledButton text=\"Change Password\" event={() => { history.push('/changepassword') }} style={{ marginLeft: 20 }} />\r\n                        <StyledButton text=\"Update Payment Method\" event={() => { history.push('/paymentmethod') }} style={{ marginLeft: 20 }} />\r\n                    </div>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import { React, useState, useEffect, useMemo } from 'react';\r\nimport Select from 'react-select-v2';\r\nimport countryList from 'react-select-country-list'\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { isValidPhoneNumber } from \"react-phone-number-input\";\r\nimport axios from 'axios';\r\nimport { decodeToken } from 'react-jwt';\r\nimport config from '../../Config.js';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { makeStyles, Paper, Button } from '@material-ui/core';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport TopBar from '../../Components/TopBar/TopBar.js';\r\nimport colour from '../../Components/Colours/Colours.js';\r\nimport Title from '../../Components/Title/Title';\r\n\r\nconst Profile = () => {\r\n    const { register, handleSubmit, errors, control } = useForm();\r\n    const history = useHistory();\r\n    const countryOptions = useMemo(() => countryList().getData(), [])\r\n    const token = localStorage.getItem('token')\r\n    const user_id = decodeToken(token).userId\r\n    const [firstName, setFirstName] = useState()\r\n    const [lastName, setLastName] = useState()\r\n    const [email, setEmail] = useState()\r\n    const [contact, setContact] = useState()\r\n    const [country, setCountry] = useState('')\r\n    const [state, setState] = useState()\r\n    const [street, setStreet] = useState()\r\n    const [postalcode, setPostalCode] = useState()\r\n    const [privilege, setPrivilege] = useState()\r\n\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/user/getuserdata/${user_id}`,\r\n            {})\r\n            .then(response => {\r\n                var data = response.data.data[0]\r\n                for (var i = 0; i < countryOptions.length; i++) {\r\n                    if (countryOptions[i].label === data.country) {\r\n                        setCountry(countryOptions[i])\r\n                    }\r\n                }\r\n                setFirstName(data.first_name)\r\n                setLastName(data.last_name)\r\n                setEmail(data.email)\r\n                setContact(data.contact_number.toString())\r\n                setState(data.state)\r\n                setStreet(data.street)\r\n                setPostalCode(data.postal_code)\r\n                setPrivilege(privOptions[data.priv_id - 2])\r\n            }).catch(error => {\r\n                if (error.response.status == 500) {\r\n                    alert(\"Error!\")\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    const privOptions = [\r\n        { value: 2, label: 'Super Admin' },\r\n        { value: 3, label: 'Admin' },\r\n        { value: 4, label: 'User' }\r\n    ]\r\n\r\n    \r\n    const phoneValidation = (value) => {\r\n        if (value == \"\") {\r\n            return false\r\n        }\r\n        else {\r\n            return isValidPhoneNumber('+' + value.toString())\r\n\r\n        }\r\n    }\r\n    const onSubmit = (data, e) => {\r\n        if (data.country == undefined) {\r\n            data.country = country\r\n        }\r\n        data.contact = contact\r\n        data.privilege = privilege\r\n        axios.put(`${config.baseUrl}/u/user/updateuser/${user_id}`,\r\n            {\r\n                data: data\r\n            })\r\n            .then(response => {\r\n                alert('Successfuly Updated')\r\n                history.push(`/dashboard`);\r\n            }).catch(error => {\r\n\r\n                if (error.response.status == 500) {\r\n                    alert('Error!')\r\n                }\r\n\r\n                if (error.response.status == 401) {\r\n                    alert(\"This email has already been used.\")\r\n                }\r\n                // Reset the form state\r\n                e.target.reset();\r\n            });\r\n    }// End of onSubmit\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n            overflow: 'hidden'\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formField: {\r\n            backgroundColor: 'black'\r\n        },\r\n        btnContainer: {\r\n            marginTop: 20,\r\n            marginBottom: 20,\r\n            margin: 'auto'\r\n        }\r\n\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Title title=\"Profile\"/>\r\n            <TopBar pageName='Profile' />\r\n            <Paper className={classes.formContainer}>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"firstNameInput\">First Name</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"firstNameInput\"\r\n                            name=\"firstName\"\r\n                            defaultValue={firstName}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter first name\"\r\n                            placeholder=\"Enter first name\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter your first name.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"firstName\"] && (\r\n                            <p className=\"error-message\">Please enter first name</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastNameInput\">Last Name</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"lastNameInput\"\r\n                            name=\"lastName\"\r\n                            defaultValue={lastName}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter last name\"\r\n                            placeholder=\"Enter last name\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter your last name.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"lastName\"] && (\r\n                            <p className=\"error-message\">Please enter last name</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"emailInput\">Email</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"emailInput\"\r\n                            defaultValue={email}\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter email\"\r\n                            placeholder=\"Enter email\"\r\n                            ref={register({\r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                    message: \"Invalid email address\"\r\n                                },\r\n                                required: {\r\n                                    type: \"email\",\r\n                                    value: true,\r\n                                    message: 'Please enter your email.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"email\"] && (\r\n                            <p className=\"error-message\">Invalid Email</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"contactInput\">Contact Number</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <Controller\r\n                            name=\"contact\"\r\n                            control={control}\r\n                            rules={{\r\n                                validate: (value) => phoneValidation(contact)\r\n                            }}\r\n                            render={() => (\r\n                                <PhoneInput\r\n                                    dropdownStyle={{ 'color': \"black\" }}\r\n                                    enableSearch\r\n                                    value={contact}\r\n                                    onChange={setContact}\r\n                                    name=\"contact\"\r\n                                    country=\"sg\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        {errors[\"contact\"] && (\r\n                            <p className=\"error-message\">Invalid Phone Number</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"countryInput\">Select Country</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <Select options={countryOptions}\r\n                            styles={selectStyle}\r\n                            name=\"country\"\r\n                            register={register}\r\n                            value={country}\r\n                            onChange={setCountry}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"stateInput\">State</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"stateInput\"\r\n                            name=\"state\"\r\n                            defaultValue={state}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter state\"\r\n                            placeholder=\"Enter state\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter state.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"state\"] && (\r\n                            <p className=\"error-message\">Please enter your state</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"streetInput\">Street</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"streetInput\"\r\n                            name=\"street\"\r\n                            defaultValue={street}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter street\"\r\n                            placeholder=\"Enter street\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter street.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"street\"] && (\r\n                            <p className=\"error-message\">Please enter your street</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"postalcodeInput\">Postal Code</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"postalcodeInput\"\r\n                            name=\"postalcode\"\r\n                            defaultValue={postalcode}\r\n                            type=\"numbers\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter postal code\"\r\n                            placeholder=\"Enter postal code\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter postal code.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"postalcode\"] && (\r\n                            <p className=\"error-message\">Please enter your postal code</p>\r\n                        )}\r\n                    </div>\r\n                    {false && (\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"privInput\">Privilege</label>\r\n                            <Select\r\n                                options={privOptions}\r\n                                name=\"privilege\"\r\n                                ref={register()}\r\n                                value={privilege}\r\n                                onChange={setPrivilege}\r\n                                styles={selectStyle}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <Row >\r\n                        <div className={classes.btnContainer}>\r\n                            <Button type=\"submit\" style={{ backgroundColor: colour.c5, color: colour.c1, marginRight: 10, padding: 10 }}>Submit</Button>\r\n                            <Button onClick={() => history.push(`/dashboard`)} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginLeft: 10, padding: 10 }}>Cancel</Button>\r\n                        </div>\r\n                    </Row>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport countryList from 'react-select-country-list'\r\nimport { isValidPhoneNumber } from \"react-phone-number-input\";\r\nimport colour from '../../Components/Colours/Colours';\r\nimport { makeStyles, Button, Paper } from '@material-ui/core';\r\nimport Select from 'react-select';\r\nimport axios from 'axios';\r\nimport config from '../../Config';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { decodeToken } from 'react-jwt';\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Title from '../../Components/Title/Title';\r\n\r\nconst Register = ({ match }) => {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, control, formState: { errors }, watch } = useForm();\r\n\r\n    const token = match.params.token;\r\n    const email = decodeToken(token).email\r\n    const company_id = decodeToken(token).company_id\r\n    const priv_id = decodeToken(token).priv_id\r\n    const key = decodeToken(token).key\r\n\r\n    const countryOptions = useMemo(() => countryList().getData(), [])\r\n\r\n    const [userData, setUserData] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: email,\r\n        contact: \"\",\r\n        country: \"\",\r\n        state: \"\",\r\n        street: \"\",\r\n        postalcode: \"\",\r\n        priv_id: priv_id,\r\n        company_id: company_id,\r\n        key: key,\r\n    })\r\n\r\n    useEffect(() => { \r\n        axios.post(`${config.baseUrl}/u/user/checkemailandkey/`, //Check with database to see if param is a valid\r\n          {\r\n            data: {\r\n              email: email,\r\n              key: key\r\n            }\r\n          })\r\n          .then(response => {\r\n            console.log(response.data)\r\n            if (response.data.length == 0) { \r\n              alert('This invitation link have expired or does not exist')\r\n              window.location.assign('/login')\r\n            }\r\n          }).catch(error => {\r\n            if (error.response.status == 500) {\r\n              console.log(error);\r\n            }\r\n          });\r\n      },[])\r\n\r\n    const privOptions = [\r\n        { value: 2, label: 'Super Admin' },\r\n        { value: 3, label: 'Admin' },\r\n        { value: 4, label: 'User' }\r\n    ]\r\n\r\n    const phoneValidation = (value) => {\r\n        if (value == \"\") {\r\n            return false\r\n        }\r\n        else {\r\n            return isValidPhoneNumber('+' + value.toString())\r\n\r\n        }\r\n    }\r\n    const onSubmit = (data, e) => {\r\n        data.country = userData.country\r\n        data.contact = userData.contact\r\n        data.email = userData.email\r\n        data.company_id = userData.company_id\r\n        data.priv_id = userData.priv_id\r\n        data.key = userData.key\r\n        axios.post(`${config.baseUrl}/u/user/createuser`, { data })\r\n            .then(response => {\r\n                window.location.assign('/login')\r\n                alert('Successfuly Created. You can now login.')\r\n            }).catch(error => {\r\n                if (error.response.status == 500) {\r\n                    alert('error')\r\n                }\r\n                if (error.response.status == 401) {\r\n                    alert('Invitation Link has expired.')\r\n                }\r\n            })\r\n    }// End of onSubmit\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formField: {\r\n            backgroundColor: 'black'\r\n        },\r\n        btnContainer: {\r\n            marginTop: 20,\r\n            marginBottom: 50,\r\n            margin: 'auto'\r\n        }\r\n\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Title title=\"Register\"/>\r\n            <TopBar pageName='Register' />\r\n            <Paper className={classes.formContainer}>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"emailInput\">Email</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"emailInput\"\r\n                            defaultValue={userData.email}\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter email\"\r\n                            disabled\r\n                            placeholder=\"Enter email\"\r\n                            ref={register({\r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                    message: \"Invalid email address\"\r\n                                },\r\n                                required: {\r\n                                    type: \"email\",\r\n                                    value: true,\r\n                                    message: 'Please enter your email.',\r\n                                },\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"firstNameInput\">First Name</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"firstNameInput\"\r\n                            name=\"firstName\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter first name\"\r\n                            placeholder=\"Enter first name\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter your first name.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"firstName\"] && (\r\n                            <p className=\"error-message\">Please enter first name</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastNameInput\">Last Name</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"lastNameInput\"\r\n                            name=\"lastName\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter last name\"\r\n                            placeholder=\"Enter last name\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter your last name.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"lastName\"] && (\r\n                            <p className=\"error-message\">Please enter last name</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"passwordInput\">Password</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"passwordInput\"\r\n                            placeholder=\"Enter password\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter password',\r\n                                },\r\n                                minLength: {\r\n                                    value: 6,\r\n                                    message: 'Minimum 5 characters are allowed',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"password\"] && (\r\n                            <p className=\"error-message\">Password length must be a minimum of 5 characters</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"confirmPasswordInput\">Confirm Password</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"confirmPassword\"\r\n                            className=\"form-control\"\r\n                            id=\"confirmPasswordInput\"\r\n                            placeholder=\"Enter confirm password\"\r\n                            ref={register({\r\n                                validate: (value) => value === watch('password') || \"Passwords don't match.\",\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter password',\r\n                                },\r\n                                minLength: {\r\n                                    value: 5,\r\n                                    message: 'Minimum 5 characters are allowed',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"confirmPassword\"] && (\r\n                            <p className=\"error-message\">Field is empty or password does not match</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"contactInput\">Contact Number</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <Controller\r\n                            name=\"contact\"\r\n                            control={control}\r\n                            rules={{\r\n                                validate: (value) => phoneValidation(userData.contact)\r\n                            }}\r\n                            render={() => (\r\n                                <PhoneInput\r\n                                    dropdownStyle={{ 'color': \"black\" }}\r\n                                    enableSearch\r\n                                    onChange={e => setUserData(prevState => ({\r\n                                        ...prevState,\r\n                                        contact: e\r\n                                    }))}\r\n                                    name=\"contact\"\r\n                                    country=\"sg\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        {errors[\"contact\"] && (\r\n                            <p className=\"error-message\">Invalid Phone Number</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"countryInput\">Select Country</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <Select options={countryOptions}\r\n                            styles={selectStyle}\r\n                            name=\"country\"\r\n                            register={register}\r\n                            onChange={e => setUserData(prevState => ({\r\n                                ...prevState,\r\n                                country: e\r\n                            }))}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"stateInput\">State</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"stateInput\"\r\n                            name=\"state\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter state\"\r\n                            placeholder=\"Enter state\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter state.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"state\"] && (\r\n                            <p className=\"error-message\">Please enter your state</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"streetInput\">Street</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"streetInput\"\r\n                            name=\"street\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter street\"\r\n                            placeholder=\"Enter street\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter street.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"street\"] && (\r\n                            <p className=\"error-message\">Please enter your street</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"postalcodeInput\">Postal Code</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"postalcodeInput\"\r\n                            name=\"postalcode\"\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter postal code\"\r\n                            placeholder=\"Enter postal code\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter postal code.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"postalcode\"] && (\r\n                            <p className=\"error-message\">Please enter your postal code</p>\r\n                        )}\r\n                    </div>\r\n                    <Row >\r\n                        <div className={classes.btnContainer}>\r\n                            <Button type=\"submit\" style={{ backgroundColor: colour.c5, color: colour.c1, marginRight: 10, padding: 10 }}>Submit</Button>\r\n                            <Button onClick={() => history.push(`/manageusers`)} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginLeft: 10, padding: 10 }}>Cancel</Button>\r\n                        </div>\r\n                    </Row>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\nexport default Register;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n//components \r\nimport colour from '../Colours/Colours'\r\n\r\n//regex\r\nconst regexEmail = new RegExp(/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i)\r\nconst isValid = (emailstate, setEmail, email) => {\r\n    let error = null;\r\n\r\n    if (isInList(emailstate, email)) {\r\n        error = `${email} has already been added.`;\r\n    }\r\n\r\n    if (!isEmail(email)) {\r\n        error = `${email} is not a valid email address.`;\r\n    }\r\n\r\n    if (error) {\r\n        setEmail({\r\n            items: [...emailstate.items],\r\n            error: error\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nconst isInList = (emailstate, email) => {\r\n    return emailstate.items.includes(email);\r\n}\r\n\r\nconst isEmail = (email) => {\r\n    return regexEmail.test(email);\r\n}\r\n\r\nconst EmailChip = ({ email, setEmail }) => {\r\n    const useStyles = makeStyles({\r\n        errorMessage: {\r\n            color: colour.error,\r\n            marginBottom: 0\r\n        },\r\n        chipBox: {\r\n            backgroundColor: colour.c2,\r\n            marginTop: 15,\r\n            borderRadius: 5\r\n        },\r\n        chip: {\r\n            margin: 5\r\n        }\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const handleKeyDown = evt => {\r\n        if ([\"Enter\", \"Tab\", \",\", \" \"].includes(evt.key)) {\r\n            evt.preventDefault();\r\n\r\n            var value = email.value.trim();\r\n\r\n            if (value && isValid(email, setEmail, value)) {\r\n                setEmail({\r\n                    items: [...email.items, email.value],\r\n                    value: \"\"\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleChange = evt => {\r\n        setEmail({\r\n            value: evt.target.value,\r\n            items: [...email.items],\r\n            error: null\r\n        });\r\n    };\r\n\r\n    const handleDelete = item => {\r\n        setEmail({\r\n            items: email.items.filter(i => i !== item),\r\n            value: [...email.value]\r\n        });\r\n    };\r\n\r\n    const handlePaste = evt => {\r\n        evt.preventDefault();\r\n\r\n        var paste = evt.clipboardData.getData(\"text\");\r\n\r\n        var emails = regexEmail.test(paste);\r\n\r\n        if (emails) {\r\n            if (!email.items.includes(paste)) {\r\n                setEmail({\r\n                    items: [...email.items, paste]\r\n                });\r\n            }\r\n            else {\r\n                setEmail(prevState => ({\r\n                    ...prevState,\r\n                    error: 'Email is already keyed in'\r\n                }))\r\n            }\r\n        }\r\n        else {\r\n            setEmail(prevState => ({\r\n                ...prevState,\r\n                error: 'Email pasted is not a valid email'\r\n            }))\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                className={\"input \" + (email.error && \" has-error\")}\r\n                value={email.value}\r\n                placeholder=\"Type or paste email addresses and press `Enter`...\"\r\n                className='form-control'\r\n                onKeyDown={e => handleKeyDown(e)}\r\n                onChange={e => handleChange(e)}\r\n                onPaste={e => handlePaste(e)}\r\n            />\r\n            <div className={classes.chipBox}>\r\n                {email.items.map(item => (\r\n                    <Chip className={classes.chip} label={item} onDelete={() => handleDelete(item)} />\r\n                ))}\r\n            </div>\r\n            {email.error && <p className={classes.errorMessage}>{email.error}</p>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmailChip\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport axios from 'axios';\r\nimport config from '../../Config';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { decodeToken } from 'react-jwt';\r\nimport { Row } from 'react-bootstrap'\r\n//import Components\r\nimport colour from '../../Components/Colours/Colours'\r\nimport TopBar from '../../Components/TopBar/TopBar'\r\nimport StyledButton from '../../Components/StyledButton/StyledButton'\r\nimport EmailChip from '../../Components/EmailChip/EmailChip';\r\nimport Title from '../../Components/Title/Title';\r\n\r\nconst SendInvites = () => {\r\n  const { register, handleSubmit, errors, control } = useForm();\r\n  const history = useHistory();\r\n  const token = localStorage.getItem('token')\r\n  if (decodeToken(token).privId > 3) {\r\n    alert('You do not have the privilege to view this page.')\r\n    history.push('/dashboard')\r\n  }\r\n  //states\r\n  const [emailValid, setEmailValid] = useState('')\r\n  const [email, setEmail] = useState({\r\n    items: [],\r\n    value: \"\",\r\n    error: null\r\n  })\r\n\r\n  const company_id = decodeToken(token).companyId\r\n  //Styles\r\n  const useStyles = makeStyles({\r\n    //local style\r\n    formContainer: {\r\n      backgroundColor: colour.c3,\r\n      color: colour.c1,\r\n      borderRadius: \"5px\",\r\n      boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n    },\r\n    form: {\r\n      width: '80%',\r\n      margin: 'auto',\r\n      color: 'white',\r\n      padding: '20px'\r\n    },\r\n    formField: {\r\n      marginBottom: 30,\r\n    },\r\n    btnContainer: {\r\n      marginTop: 20,\r\n      marginBottom: 20,\r\n      margin: 'auto'\r\n    },\r\n    errorMessage: {\r\n      color: colour.error\r\n    }\r\n  })\r\n  const classes = useStyles()\r\n\r\n  const selectStyle = {\r\n    option: styles => ({ ...styles, color: 'black' }),\r\n  }\r\n\r\n  // Handle the form submit of Registration form\r\n  const onSubmit = (data) => {\r\n\r\n\r\n    if (email.items.length == 0) {\r\n      setEmailValid('empty')\r\n      return\r\n    } else {\r\n      setEmailValid('valid')\r\n    }\r\n\r\n    data = { ...data, email: email.items }\r\n    data.company_id = company_id\r\n\r\n    axios.post(`${config.baseUrl}/u/user/senduserinvite`,\r\n      data)\r\n      .then(response => {\r\n        alert('Invite has been sent')\r\n        history.push(`/dashboard`);\r\n      }).catch(error => {\r\n        console.log(error)\r\n        if (error.response.status == 500) {\r\n        }\r\n        if (error.response.status == 401) {\r\n          let string = ''\r\n          for (let i = 0; i < error.response.data.length; i++) {\r\n            string += '\\n' + error.response.data[i]\r\n          }\r\n          alert(`These these email(s) ${string}\\nhas already been registered or already exist in the invite list.`)\r\n        }\r\n      });\r\n\r\n\r\n  }// End of onSubmit\r\n\r\n  return (\r\n    <div>\r\n      <TopBar pageName=\"Send Invites\" />\r\n      <Title title=\"Send Invites\"></Title>\r\n      <div className={classes.formContainer}>\r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"emailInput\">Emails</label>\r\n            <EmailChip email={email} setEmail={setEmail} />\r\n            {emailValid == 'empty' && <p className={classes.errorMessage}>Please insert at least one email.</p>}\r\n          </div>\r\n          <Row>\r\n            <div style={{ margin: 'auto' }}>\r\n              <StyledButton text=\"Submit\" type='submit' event={() => { }} />\r\n              <StyledButton text=\"Cancel\" event={() => { history.push('/manageinvites') }} style={{ marginLeft: 20 }} />\r\n            </div>\r\n          </Row>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SendInvites;","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport countryList from 'react-select-country-list'\r\nimport Select from 'react-select';\r\nimport axios from 'axios';\r\nimport config from '../../Config';\r\nimport Title from '../../Components/Title/Title'\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport { decodeToken } from \"react-jwt\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { Row } from 'react-bootstrap'\r\n\r\n//import Components\r\nimport colour from '../../Components/Colours/Colours'\r\nimport TopBar from '../../Components/TopBar/TopBar'\r\nimport StyledButton from '../../Components/StyledButton/StyledButton'\r\n\r\n\r\n\r\nconst Company = () => {\r\n    const token = localStorage.getItem('token')\r\n    const company_id = decodeToken(token).companyId\r\n    const { register, handleSubmit, control, errors } = useForm()\r\n    const history = useHistory();\r\n    if (decodeToken(token).privId != 2) {\r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n    const countryOptions = useMemo(() => countryList().getData(), [])\r\n    //States\r\n    const [contactValid, setContactValid] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const [Data, setData] = useState({\r\n        name: null,\r\n        description: null,\r\n        email: null,\r\n        contact_number: null,\r\n        postal_code: null,\r\n        state: null,\r\n        street: null,\r\n    })\r\n\r\n    //regex\r\n    const regex = new RegExp(/65[6|8|9]\\d{7}/g)\r\n\r\n    //Styles\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n            color: colour.c1,\r\n            borderRadius: \"5px\",\r\n            boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formField: {\r\n            marginBottom: 30,\r\n        },\r\n        btnContainer: {\r\n            marginTop: 20,\r\n            marginBottom: 20,\r\n            margin: 'auto'\r\n        },\r\n        errorMessage: {\r\n            color: colour.error\r\n        }\r\n\r\n    })\r\n    const classes = useStyles()\r\n\r\n    //Select Style\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/company/getcompanydata/${company_id}`,\r\n        )\r\n            .then(response => {\r\n                let data = response.data[0]\r\n                for (var i = 0; i < countryOptions.length; i++) {\r\n                    if (countryOptions[i].label === data.country) {\r\n                        setCountry(countryOptions[i])\r\n                    }\r\n                }\r\n                setData({\r\n                    name: data.name,\r\n                    description: data.description,\r\n                    email: data.email,\r\n                    contact_number: data.contact_number.toString(),\r\n                    state: data.state,\r\n                    street: data.street,\r\n                    postal_code: data.postal_code\r\n                })\r\n            }).catch(error => {\r\n                console.log(error)\r\n                alert('Error when submitting, please try again.')\r\n            });\r\n    }, []);\r\n\r\n    //Handle the form submit of Registration form\r\n    const onSubmit = (data) => {\r\n        //validate contact\r\n        if (Data.contact_number == '') {\r\n            console.log('empty')\r\n            setContactValid('empty')\r\n            return\r\n        } else if (regex.test(Data.contact_number) == true) {\r\n            console.log('pass')\r\n            setContactValid('pass')\r\n        } else {\r\n            console.log('fail')\r\n            setContactValid('fail')\r\n            return\r\n        }\r\n        data.contact_number = Data.contact_number\r\n        data.country = country\r\n        axios.put(`${config.baseUrl}/u/company/updatecompany/${company_id}`,\r\n            { data }\r\n        )\r\n            .then(response => {\r\n                alert('Submit Ok')\r\n                alert('Successfully Updated')\r\n                history.push(`/dashboard`);\r\n            }).catch(error => {\r\n                console.log(error)\r\n                alert('Error when submitting, please try again.')\r\n            });\r\n    }// End of onSubmit\r\n    https://stackoverflow.com/questions/62574713/react-form-hooks-how-to-validate-select-option\r\n    console.log(Data)\r\n    return (\r\n        <div>\r\n            <TopBar pageName=\"Company\" />\r\n            <Title title=\"Company\"></Title>\r\n            <div className={classes.formContainer} >\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={classes.formField}>\r\n                        <label htmlFor=\"name\">Company Name</label>\r\n                        <input\r\n                            name=\"name\"\r\n                            type='text'\r\n                            defaultValue={Data.name}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Name\"\r\n                            ref={register({ required: { value: true, message: \"Please input company name\" } })}\r\n                        />\r\n                        {errors.name && <p className={classes.errorMessage}>{errors.name.message}</p>}\r\n                    </div>\r\n\r\n                    <div className={classes.formField}>\r\n                        <label htmlFor=\"description\">Company Description</label>\r\n                        <input\r\n                            name=\"description\"\r\n                            className=\"form-control\"\r\n                            type='text'\r\n                            defaultValue={Data.description}\r\n                            placeholder=\"Enter Name\"\r\n                            ref={register({ required: { value: true, message: \"Please input company name\" } })}\r\n                        />\r\n                        {errors.description && <p className={classes.errorMessage}>{errors.description.message}</p>}\r\n                    </div>\r\n\r\n                    <div className={classes.formField}>\r\n                        <label htmlFor=\"email\">Company Email</label>\r\n                        <input\r\n                            name=\"email\"\r\n                            className=\"form-control\"\r\n                            type='email'\r\n                            defaultValue={Data.email}\r\n                            placeholder=\"Enter Email\"\r\n                            ref={register({ required: { value: true, message: \"Please input company name\" } })}\r\n                        />\r\n                        {errors.email && <p className={classes.errorMessage}>{errors.email.message}</p>}\r\n                    </div>\r\n\r\n                    <div className={classes.formField}>\r\n                        <label htmlFor=\"contact\">Company Contact Number</label>\r\n                        <Controller\r\n                            name=\"contact\"\r\n                            control={control}\r\n                            render={() => (\r\n                                <PhoneInput\r\n                                    dropdownStyle={{ 'color': \"black\" }}\r\n                                    enableSearch\r\n                                    value={Data.contact_number}\r\n                                    onChange={e => setData(prevState => ({\r\n                                        ...prevState,\r\n                                        contact_number: e\r\n                                    }))}\r\n                                    name=\"contact\"\r\n                                    country=\"sg\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        {contactValid == 'empty' && <p className={classes.errorMessage}>Please input company contact number</p>}\r\n                        {contactValid == 'fail' && <p className={classes.errorMessage}>Company contact number invalid</p>}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"countryInput\">Select Country</label>\r\n                        <Select options={countryOptions}\r\n                            styles={selectStyle}\r\n                            name=\"country\"\r\n                            register={register}\r\n                            value={country}\r\n                            onChange={setCountry}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={classes.formField}>\r\n                        <label htmlFor=\"state\">State</label>\r\n                        <input\r\n                            name=\"state\"\r\n                            type='text'\r\n                            className=\"form-control\"\r\n                            defaultValue={Data.state}\r\n                            placeholder=\"Enter Name\"\r\n                            ref={register({ required: { value: true, message: \"Please input company's state\" } })}\r\n                        />\r\n                        {errors.state && <p className={classes.errorMessage}>{errors.state.message}</p>}\r\n                    </div>\r\n\r\n                    <div className={classes.formField}>\r\n                        <label htmlFor=\"street\">Street</label>\r\n                        <input\r\n                            name=\"street\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            defaultValue={Data.street}\r\n                            placeholder=\"Enter Name\"\r\n                            ref={register({ required: { value: true, message: \"Please input company's street\" } })}\r\n                        />\r\n                        {errors.street && <p className={classes.errorMessage}>{errors.street.message}</p>}\r\n                    </div>\r\n\r\n                    <div className={classes.formField}>\r\n                        <label htmlFor=\"postalcode\">Postal Code</label>\r\n                        <input\r\n                            name=\"postalcode\"\r\n                            type=\"numbers\"\r\n                            defaultValue={Data.postal_code}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Name\"\r\n                            ref={register({ required: { value: true, message: \"Please input company's postal\" } })}\r\n                        />\r\n                        {errors.postalcode && <p className={classes.errorMessage}>{errors.postalcode.message}</p>}\r\n                    </div>\r\n                    <Row>\r\n                        <div style={{ margin: 'auto' }}>\r\n                            <StyledButton text=\"Submit\" type='submit' event={() => { }} />\r\n                            <StyledButton text=\"Cancel\" event={() => { history.push('/dashboard') }} style={{ marginLeft: 20 }} />\r\n                        </div>\r\n                    </Row>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Company;","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport axios from 'axios';\r\nimport { decodeToken } from 'react-jwt';\r\n\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport config from '../../Config';\r\nimport SetupPaymentMethod from '../../Components/SetupPaymentMethod/SetupPaymentMethod';\r\nimport visa from '../../Images/visa.png';\r\nimport amex from '../../Images/amex.png';\r\nimport mastercard from '../../Images/mastercard.png';\r\nimport StyledButton from '../../Components/StyledButton/StyledButton';\r\nimport colour from '../../Components/Colours/Colours';\r\nimport Title from '../../Components/Title/Title';\r\n\r\n\r\n// Make sure to call `loadStripe` outside of a component’s render to avoid\r\n// recreating the `Stripe` object on every render.\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY);\r\n\r\nfunction App() {\r\n  const [userData, setUserData] = useState([]);\r\n  const [userSubscription, setUserSubscription] = useState([]);\r\n  const token = localStorage.getItem('token');\r\n\r\n  const options = {\r\n    // passing the client secret obtained in step 2\r\n    clientSecret: '{{CLIENT_SECRET}}',\r\n    // Fully customizable with appearance API.\r\n    appearance: {/*...*/ },\r\n  };\r\n\r\n  const handleDeletePayment = (id) => {\r\n    console.log(id)\r\n    if (window.confirm(\"Are you sure you want to delete?\")) {\r\n      axios.delete(`${config.baseUrl}/u/stripe/paymentmethods/${id}`, { withCredentials: true })\r\n        .then(response => {\r\n          window.location.reload();\r\n        }).catch(error => {\r\n          alert(\"Something went wrong. Please try again later.\");\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  const handleDeleteSubscription = () => {\r\n    if (window.confirm(\"Are you sure you want to delete?\")) {\r\n      // /api/u/stripe/subscriptions/\r\n\r\n      axios.delete(`${config.baseUrl}/u/stripe/subscriptions`, { withCredentials: true })\r\n        .then(response => {\r\n          window.location.reload();\r\n        }).catch(error => {\r\n          alert(\"Something went wrong. Please try again later.\");\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(`${config.baseUrl}/u/stripe/paymentmethods`, { withCredentials: true })\r\n      .then(response => {\r\n        // console.log(response)\r\n        var data = response.data;\r\n        setUserData(data);\r\n      }).catch(error => {\r\n        console.log(error)\r\n      });\r\n\r\n    axios.get(`${config.baseUrl}/u/stripe/subscription`, { withCredentials: true })\r\n      .then(response => {\r\n        console.log(response.data)\r\n        var data = response.data;\r\n        setUserSubscription(data);\r\n      }).catch(error => {\r\n        console.log(error)\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Title title=\"Payment Methods\" />\r\n      <TopBar pageName=\"Payment Method\" />\r\n      <div className=\"m-2 p-3\" style={{ backgroundColor: colour.c1 }}>\r\n        <div>\r\n          <div className=\"my-3 d-flex justify-content-between\">\r\n            <h3>My Payment Methods</h3>\r\n            <SetupPaymentMethod />\r\n          </div>\r\n          <hr />\r\n          {!userData &&\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h6>\r\n                You have yet to add a payment method.\r\n              </h6>\r\n            </div>\r\n          }\r\n          {userData &&\r\n            <>\r\n              {userData.map(x => {\r\n                return (\r\n                  <>\r\n                    <div className=\"border d-flex justify-content-between mt-3\">\r\n                      <span className=\"d-flex\" >\r\n                        <div className=\"m-3\" style={{ backgroundColor: \"white\" }}>\r\n                          {x.stripe_card_type === \"visa\" && <img className=\"p-3\" src={visa} style={{ width: \"auto\", maxWidth: \"100px\" }} alt=\"Logo\"></img>}\r\n                          {x.stripe_card_type === \"amex\" && <img className=\"p-3\" src={amex} style={{ width: \"auto\", maxWidth: \"100px\" }} alt=\"Logo\"></img>}\r\n                          {x.stripe_card_type === \"mastercard\" && <img className=\"p-3\" src={mastercard} style={{ width: \"auto\", maxWidth: \"100px\" }} alt=\"Logo\"></img>}\r\n                        </div>\r\n                        <div className=\"m-3\">\r\n                          <p className=\"text-dark\"> **** **** **** {x.stripe_card_last_four_digit} </p>\r\n                          <p className=\"text-dark\">Expires {x.stripe_card_exp_date}</p>\r\n                        </div>\r\n                      </span>\r\n                      <div className=\"d-flex align-items-center m-4\">\r\n                        <StyledButton text=\"Remove\" event={() => handleDeletePayment(x.stripe_payment_method_id)} />\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )\r\n              })}\r\n            </>\r\n          }\r\n          <hr />\r\n        </div>\r\n\r\n        <div className=\"my-3\">\r\n          <h3>My Subscriptions</h3>\r\n          <hr style={{ border: \"1px solid dark\" }} />\r\n          {userSubscription.length === 0 &&\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h6>\r\n                You have no subscriptions.\r\n              </h6>\r\n            </div>\r\n          }\r\n          {userSubscription.map(x => {\r\n            return (\r\n              <>\r\n                <div className=\"border d-flex justify-content-between mt-3\">\r\n                  <span className=\" m-3\" >\r\n                    <h5>Plan: {x.name} </h5>\r\n                    <h5 >Status: {x.stripe_status}</h5>\r\n                  </span>\r\n                  <div className=\"d-flex align-items-center m-4\">\r\n                    <StyledButton text=\"Remove\" event={() => handleDeleteSubscription()} />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import { React, useState } from 'react';\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport axios from 'axios';\r\nimport config from '../../Config.js';\r\nimport { makeStyles, Paper, IconButton, Button } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\r\nimport { Row } from \"react-bootstrap\"\r\nimport { decodeToken } from 'react-jwt';\r\nimport { useHistory } from 'react-router';\r\n//components\r\nimport TopBar from '../../Components/TopBar/TopBar.js';\r\nimport colour from '../../Components/Colours/Colours.js';\r\nimport Title from '../../Components/Title/Title';\r\n\r\nconst ChangePassword = () => {\r\n    const token = localStorage.getItem('token')\r\n    const user_uuid = decodeToken(token).userUUID;\r\n    const history = useHistory()\r\n    if (decodeToken(token).privId > 3) {\r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n            overflow: 'hidden'\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formField: {\r\n            backgroundColor: 'black'\r\n        },\r\n        removeOutline: {\r\n            \"&:focus\": {\r\n                border: \"none\",\r\n                outline: \"none\"\r\n            }\r\n        },\r\n        btnContainer: {\r\n            marginBottom: 20,\r\n            margin: 'auto'\r\n        }\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const [currentPassword, setCurrentPassword] = useState('')\r\n    const [currentPwType, setCurrentPwType] = useState('password')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [newPwType, setNewPwType] = useState('password')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [cmfPwType, setCmfPwType] = useState('password')\r\n\r\n    //submit\r\n    const onSubmit = () => {\r\n        if (newPassword.length < 1 || currentPassword.length < 1) {\r\n            alert('Field should not be empty')\r\n        } else if (newPassword != confirmPassword) {\r\n            alert('Password not matching')\r\n        } else {\r\n            console.log(user_uuid);\r\n            axios.put(`${config.baseUrl}/u/user/changepassword/${user_uuid}`, { data: { currentPassword: currentPassword, newPassword: newPassword } })\r\n                .then(response => {\r\n                    alert('Password updated')\r\n                    history.push(`/Dashboard`)\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status == 406) {\r\n                        alert('Wrong Current Password')\r\n                    }\r\n                    else {\r\n                        alert('Update fail')\r\n                        console.log(error)\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    //show current password\r\n    const toggleCurrentPW = () => {\r\n        if (currentPwType == 'password') {\r\n            setCurrentPwType('text')\r\n        } else {\r\n            setCurrentPwType('password')\r\n        }\r\n    }\r\n\r\n    //show password\r\n    const toggleNewPW = () => {\r\n        if (newPwType == 'password') {\r\n            setNewPwType('text')\r\n        } else {\r\n            setNewPwType('password')\r\n        }\r\n    }\r\n\r\n    //show confirm password\r\n    const toggleCmfPW = () => {\r\n        if (cmfPwType == 'password') {\r\n            setCmfPwType('text')\r\n        } else {\r\n            setCmfPwType('password')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Title title=\"Change Password\" />\r\n            <TopBar pageName='Change Password' />\r\n            <Paper className={classes.formContainer}>\r\n                <form className={classes.form} noValidate autoComplete=\"off\">\r\n                    {/* Current Password */}\r\n                    <div className=\"form-group\" style={{ height: 'auto' }}>\r\n                        <label htmlFor=\"newPassword\">Current Password</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <input\r\n                                style={{ margin: 'auto' }}\r\n                                id=\"currentPassword\"\r\n                                type={currentPwType}\r\n                                className=\"form-control\" w\r\n                                placeholder=\"Enter current password\"\r\n                                onChange={(e) => { setCurrentPassword(e.target.value) }}\r\n                            />\r\n                            <IconButton onClick={() => toggleCurrentPW()} className={classes.removeOutline}>\r\n                                {(currentPwType == 'password') && <VisibilityOff style={{ color: 'white' }} />}\r\n                                {(currentPwType != 'password') && <Visibility style={{ color: 'white' }} />}\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* New Password */}\r\n                    <div className=\"form-group\" style={{ height: 'auto' }}>\r\n                        <label htmlFor=\"newPassword\">New Password</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <input\r\n                                style={{ margin: 'auto' }}\r\n                                id=\"newPassword\"\r\n                                type={newPwType}\r\n                                className=\"form-control\" w\r\n                                placeholder=\"Enter new password\"\r\n                                onChange={(e) => { setNewPassword(e.target.value) }}\r\n                            />\r\n                            <IconButton onClick={() => toggleNewPW()} className={classes.removeOutline}>\r\n                                {(newPwType == 'password') && <VisibilityOff style={{ color: 'white' }} />}\r\n                                {(newPwType != 'password') && <Visibility style={{ color: 'white' }} />}\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Confirm Password */}\r\n                    <div className=\"form-group\" style={{ height: 'auto' }}>\r\n                        <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <input\r\n                                style={{ margin: 'auto' }}\r\n                                id=\"confirmPassword\"\r\n                                type={cmfPwType}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Confirm Password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => { setConfirmPassword(e.target.value) }}\r\n                            />\r\n                            <IconButton onClick={() => toggleCmfPW()} className={classes.removeOutline}>\r\n                                {(cmfPwType == 'password') && <VisibilityOff style={{ color: 'white' }} />}\r\n                                {(cmfPwType != 'password') && <Visibility style={{ color: 'white' }} />}\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <Row >\r\n                    <div className={classes.btnContainer}>\r\n                        <Button onClick={() => onSubmit()} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginRight: 10 }}>Submit</Button>\r\n                        <Button onClick={() => history.push(`/manageusers`)} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginLeft: 10 }}>Cancel</Button>\r\n                    </div>\r\n                </Row>\r\n            </Paper>\r\n        </div >\r\n    );\r\n};\r\nexport default ChangePassword\r\n","import React, { } from 'react';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\nimport colour from '../../Components/Colours/Colours'\r\nimport Title from '../../Components/Title/Title'\r\n\r\nconst useStyles = makeStyles({\r\n    missing: {\r\n        color: colour.c1\r\n    }\r\n})\r\n\r\n\r\nconst MissingPage = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <Title title=\"Expired Session Page\" />\r\n            <Typography className={classes.missing} variant=\"h1\">Session has expired, please re-login.</Typography>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MissingPage;","import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport styles from './ResetPassword.module.css';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport colour from '../../Components/Colours/Colours'\r\nimport config from '../../Config.js';\r\n\r\n\r\nfunction EmailRequest() {\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm();\r\n  const [userCredential, setUserCredential] = useState({ email: \"sohwk@gmail.com\" });\r\n  const [message, setMessage] = useState({ data: '', type: '' });\r\n  const [isDisplay, setIsDisplay] = useState(false);\r\n  // handle input change\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setUserCredential({\r\n      ...userCredential,\r\n      [name]: value\r\n    })\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    console.log(userCredential.email);\r\n    axios.post(`${config.baseUrl}/auth/resetPasswordEmail`, { email: userCredential.email })\r\n      .then(response => {\r\n        setMessage({\r\n          data: 'Your email has been sent. Please check your email for link to reset your password.',\r\n          type: 'alert-success'\r\n        });\r\n        setIsDisplay(true);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        setMessage({\r\n          data: 'Something went wrong. Please try again later.',\r\n          type: 'alert-danger'\r\n        });\r\n        setIsDisplay(true);\r\n      })\r\n    // history.push(`/TokenInput`)\r\n  }\r\n\r\n  return (\r\n    <div className={`${styles.bg}`}>\r\n      <div className={`container-fluid d-flex align-items-center justify-content-center h-100`}>\r\n        <div className={`${styles.loginFormContainer} my-auto`}>\r\n\r\n          <fieldset className=\"border p-3 rounded\">\r\n\r\n            {isDisplay && message && (\r\n              <div\r\n                className={`alert fade show d-flex ${message.type}`}\r\n                role=\"alert\" >\r\n                {message.data}\r\n                <span\r\n                  aria-hidden=\"true\"\r\n                  className=\"ml-auto cursor-pointer\"\r\n                  onClick={() => setMessage(null)} >\r\n                  &times;\r\n                </span>\r\n              </div>\r\n            )}\r\n\r\n            <legend className={`border rounded p-1 text-center`} >\r\n             Request Email\r\n            </legend>\r\n            <hr />\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              <Form.Group className=\"my-4\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  defaultValue={userCredential.email}\r\n                  onChange={e => handleInputChange(e)}\r\n                  {...register(\"email\", { required: true })} />\r\n              </Form.Group>\r\n              <hr />\r\n\r\n              <Button\r\n                onClick={() => onSubmit()}\r\n                style={{\r\n                  backgroundColor: colour.c5,\r\n                  color: colour.c1,\r\n                  width: '100%',\r\n                }}\r\n                className=\"mt-4 w-100\">\r\n                Reset\r\n              </Button>\r\n\r\n            </Form>\r\n          </fieldset>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmailRequest;","import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport styles from './ResetPassword.module.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useParams } from \"react-router\";\r\n\r\nimport colour from '../../Components/Colours/Colours'\r\nimport config from '../../Config.js';\r\n\r\nfunction ResetPasswordV2() {\r\n    let { token } = useParams();\r\n    const history = useHistory();\r\n    const [userCredential, setUserCredential] = useState({ password: \"\", confirmPassword: \"\" });\r\n    const [message, setMessage] = useState({ data: '', type: '' });\r\n    const { register, handleSubmit } = useForm();\r\n    const [isDisplay, setIsDisplay] = useState(false);\r\n\r\n    console.log(token);\r\n\r\n    // handle input change\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        setUserCredential({\r\n            ...userCredential,\r\n            [name]: value\r\n        })\r\n\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        if (userCredential.password == \"\" && userCredential.confirmPassword == \"\") {\r\n            setMessage({\r\n                data: 'Please fill in your password.',\r\n                type: 'alert-danger'\r\n            });\r\n            setIsDisplay(true)\r\n            alert(\"Please fill in your password\");\r\n        }\r\n        else if (userCredential.password != userCredential.confirmPassword) {\r\n            setMessage({\r\n                data: 'Password does not match. Please try again',\r\n                type: 'alert-danger'\r\n            });\r\n            setIsDisplay(true)\r\n            alert(\"Password does not match\");\r\n        }\r\n        else {\r\n            axios.put(`${config.baseUrl}/auth/resetPassword`, {\r\n                password: userCredential.password\r\n            }, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n                .then(response => {\r\n                    let records = response.data.message\r\n                    console.log(response)\r\n                    console.log(records);\r\n                    setMessage({\r\n                        data: 'Your password reset is successful.',\r\n                        type: 'alert-success'\r\n                    });\r\n                    setIsDisplay(true);\r\n                    alert(\"Reset successful\");\r\n                    history.push(\"/Login\");\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    setMessage({\r\n                        data: 'Something went wrong. Please try again.',\r\n                        type: 'alert-danger'\r\n                    });\r\n                    setIsDisplay(true);\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`${styles.bg}`}>\r\n            <div className={`container-fluid d-flex align-items-center justify-content-center h-100`}>\r\n                <div className={`${styles.loginFormContainer} my-auto`}>\r\n                    <fieldset className=\"border p-3 rounded\">\r\n\r\n                        {isDisplay && message && (\r\n                            <div\r\n                                className={`alert fade show d-flex ${message.type}`}\r\n                                role=\"alert\" >\r\n                                {message.data}\r\n                                <span\r\n                                    aria-hidden=\"true\"\r\n                                    className=\"ml-auto cursor-pointer\"\r\n                                    onClick={() => setMessage(null)} >\r\n                                    &times;\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n\r\n                        <legend className={` border rounded p-1 text-center`} >\r\n                            Reset Password\r\n                        </legend>\r\n                        <hr />\r\n                        <Form onSubmit={handleSubmit(onSubmit)}>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    onChange={e => handleInputChange(e)}\r\n                                    {...register(\"password\", { required: true })} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicConfirmPassword\">\r\n                                <Form.Label>Confirm Password</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"confirmPassword\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    onChange={e => handleInputChange(e)}\r\n                                    {...register(\"confirmPassword\", { required: true })}\r\n                                />\r\n                            </Form.Group>\r\n                            <hr />\r\n                            <Button onClick={() => onSubmit()}\r\n                                style={{\r\n                                    backgroundColor: colour.c5,\r\n                                    color: colour.c1,\r\n                                    width: '100%',\r\n                                }}\r\n                                className=\"w-100\">\r\n                                Reset Password\r\n                            </Button>\r\n\r\n                        </Form>\r\n                    </fieldset>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ResetPasswordV2;","import React, { useState } from 'react';\r\nimport { Drawer, makeStyles, IconButton, Typography, Collapse, List, ClickAwayListener } from '@material-ui/core';\r\nimport { Email, Ballot, Dashboard, People, Person, ExpandLess, ExpandMore, Assessment, SupervisorAccount, Menu, ExitToApp, EmojiPeople, Policy, ViewList, AssignmentTurnedIn, Assignment, Equalizer, Business } from '@material-ui/icons'\r\nimport colour from '../Colours/Colours'\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { decodeToken } from \"react-jwt\";\r\nimport axios from 'axios';\r\nimport config from \"../../Config\";\r\n\r\n\r\nconst SideNav = () => {\r\n    //set drawer size and toggle \r\n    const history = useHistory();\r\n    const closeWidth = 60\r\n    const openWidth = 240\r\n    const [drawerWidth, setDrawerWidth] = useState(closeWidth)\r\n    const [drawerOpen, setDrawerOpen] = useState(false)\r\n    const [open, setOpen] = useState(false);\r\n    const token = localStorage.getItem('token')\r\n    let priv_id = ''\r\n    if (token != null) {\r\n        priv_id = decodeToken(token).privId\r\n    }\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        drawer: {\r\n            width: drawerWidth,\r\n        },\r\n        drawerPaper: {\r\n            //some MUI thing i dont really know how it works\r\n            width: drawerWidth,\r\n            backgroundColor: colour.c5,\r\n            borderRight: 0,\r\n            '&::-webkit-scrollbar': {\r\n                display: 'none'\r\n            },\r\n            // for some reason anchor left gives a 1px border to the right. why does this exist i dont know but it is there\r\n        },\r\n        menuRow: {\r\n            //each row of naviagtion\r\n            color: colour.c1,\r\n            display: 'flex',\r\n            \"&:hover\": {\r\n                backgroundColor: colour.c2,\r\n                textDecoration: 'underline'\r\n            }\r\n        },\r\n        logoutRow: {\r\n            //each row of naviagtion\r\n            color: colour.c1,\r\n            display: 'flex',\r\n            \"&:hover\": {\r\n                backgroundColor: colour.c2,\r\n                textDecoration: 'underline'\r\n            },\r\n        },\r\n        iconStyle: {\r\n            //icon\r\n            color: colour.c1,\r\n            fontSize: 40,\r\n        },\r\n        textStyle: {\r\n            //text\r\n            marginTop: 'auto',\r\n            marginBottom: 'auto',\r\n            paddingLeft: 5,\r\n            color: 'white',\r\n            fontSize: '1.5rem',\r\n            fontWeight: 400,\r\n            \"&:hover\": {\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                color: 'white'\r\n            }\r\n        },\r\n        iconBtnStyle: {\r\n            width: closeWidth,\r\n            height: closeWidth,\r\n            \"&:focus\": {\r\n                border: \"none\",\r\n                outline: \"none\"\r\n            }\r\n        },\r\n        expandBtnStyle: {\r\n            margin: 'auto',\r\n        },\r\n        expandStyle: {\r\n            paddingLeft: 20,\r\n        }\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const toggleDrawer = () => {\r\n        //toggle from icon to icon with text for drawer or somethihng\r\n        if (drawerOpen) {\r\n            setDrawerOpen(false)\r\n            setOpen(false)\r\n            setDrawerWidth(closeWidth)\r\n        }\r\n        else {\r\n            setDrawerOpen(true)\r\n            setDrawerWidth(openWidth)\r\n        }\r\n    }\r\n\r\n    const toggleNested = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const toggleDrawerAndNested = () => {\r\n        if (drawerOpen) {\r\n            setDrawerOpen(false)\r\n            setOpen(false);\r\n            setDrawerWidth(closeWidth)\r\n        }\r\n        else {\r\n            setDrawerOpen(true)\r\n            setOpen(true);\r\n            setDrawerWidth(openWidth)\r\n        }\r\n    }\r\n\r\n    const closeDrawer = () => {\r\n        setDrawerOpen(false)\r\n        setOpen(false);\r\n        setDrawerWidth(closeWidth)\r\n    }\r\n\r\n    const logout = () => {\r\n        var confirm = window.confirm(\"Logout?\")\r\n        if (confirm) {\r\n            axios.post(`${config.baseUrl}/u/user/clearcookies/`,\r\n            {}, {withCredentials:true})\r\n            .then(response => {\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n            localStorage.clear();\r\n            alert('You have been logged out <3')\r\n            history.push(\"/login\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={closeDrawer}>\r\n            <Drawer open\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor='left'\r\n                classes={{ paper: classes.drawerPaper }}\r\n            >\r\n                <List>\r\n                    <div className={classes.menuRow}>\r\n                        <IconButton onClick={() => toggleDrawer()} className={classes.iconBtnStyle}>\r\n                            <Menu className={classes.iconStyle} />\r\n                        </IconButton>\r\n                        {drawerOpen && <Typography variant=\"h5\" className={classes.textStyle}>Menu</Typography>}\r\n                    </div>\r\n                    <div className={classes.menuRow}>\r\n                        <IconButton onClick={() => history.push('/dashboard')} className={classes.iconBtnStyle}>\r\n                            <Dashboard className={classes.iconStyle} />\r\n                        </IconButton>\r\n                        {drawerOpen && <Link to=\"/dashboard\" className={classes.textStyle}><h5>Dashboard</h5></Link>}\r\n                    </div>\r\n                    <div className={classes.menuRow}>\r\n                        <IconButton onClick={() => history.push('/profile')} className={classes.iconBtnStyle}>\r\n                            <Person className={classes.iconStyle} />\r\n                        </IconButton>\r\n                        {drawerOpen && <Link to=\"/profile\" className={classes.textStyle}><h5>Profile</h5></Link>}\r\n                    </div>\r\n                    {(priv_id == 2 &&\r\n                        <div className={classes.menuRow}>\r\n                            <IconButton onClick={() => history.push('/company')} className={classes.iconBtnStyle}>\r\n                                <Business className={classes.iconStyle} />\r\n                            </IconButton>\r\n                            {drawerOpen && <Link to=\"/company\" className={classes.textStyle}><h5>Company</h5></Link>}\r\n                        </div>\r\n                    )}\r\n                    {(priv_id <= 3 &&\r\n                        <>\r\n                            <div className={classes.menuRow}>\r\n                                <IconButton onClick={() => history.push('/manageusers')} className={classes.iconBtnStyle}>\r\n                                    <People className={classes.iconStyle} />\r\n                                </IconButton>\r\n                                {drawerOpen && <Link to=\"/manageusers\" className={classes.textStyle}><h5>Manage Users</h5></Link>}\r\n                            </div>\r\n                            <div className={classes.menuRow}>\r\n                                <IconButton onClick={() => history.push('/manageinvites')} className={classes.iconBtnStyle}>\r\n                                    <Email className={classes.iconStyle} />\r\n                                </IconButton>\r\n                                {drawerOpen && <Link to=\"/manageinvites\" className={classes.textStyle}><h5>Manage Invites</h5></Link>}\r\n                            </div>\r\n                            <div className={classes.menuRow}>\r\n                                <IconButton onClick={() => history.push('/manageroles')} className={classes.iconBtnStyle}>\r\n                                    <Ballot className={classes.iconStyle} />\r\n                                </IconButton>\r\n                                {drawerOpen && <Link to=\"/manageroles\" className={classes.textStyle}><h5>Manage Roles</h5></Link>}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n\r\n                    <div className={classes.logoutRow}>\r\n                        <IconButton onClick={() => logout()} className={classes.iconBtnStyle}>\r\n                            <ExitToApp className={classes.iconStyle} />\r\n                        </IconButton>\r\n                        {drawerOpen && <Link to=\"\" onClick={() => logout()} className={classes.textStyle}><h5>Logout</h5></Link>}\r\n                    </div>\r\n                </List>\r\n            </Drawer >\r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nexport default SideNav","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport colour from \"../Colours/Colours\";\r\n\r\nconst Header = ({CompanyName}) => {\r\n    const history = useHistory();\r\n    const [isLogin, setIsLogin] = useState(false);\r\n    const [displayName, setDisplayName] = useState(null);\r\n    var defaultName = \"eISO System\"\r\n\r\n    useEffect(() => {\r\n        let getDisplayName = window.sessionStorage.getItem(\"displayName\")\r\n        if (getDisplayName !== null) {\r\n            setIsLogin(true)\r\n            setDisplayName(getDisplayName);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark\" style={{ backgroundColor: colour.c6 }}>  \r\n                    <h2 style={{ color: \"#ffffff\" }}>{CompanyName ? CompanyName : defaultName}</h2>\r\n            </nav>\r\n    )\r\n};\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\n//https://ui.dev/react-router-v4-pass-props-to-link/\r\nimport {\r\n    Route,\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from 'react-router-dom';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport './Style.css'\r\nimport moment from 'moment'\r\nimport { decodeToken, isExpired } from 'react-jwt';\r\nimport Cookies from 'universal-cookie';\r\nimport axios from \"axios\";\r\nimport config from \"./Config\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n//pages\r\nimport Login from './Pages/Login/Login';\r\nimport Dashboard from './Pages/Dashboard/Dashboard';\r\nimport ManageUsers from './Pages/ManageUsers/ManageUsers';\r\nimport ManageInvites from './Pages/ManageInvites/ManageInvites';\r\nimport EditUser from \"./Pages/EditUser/EditUser\";\r\nimport MissingPage from './Pages/MissingPage/MissingPage';\r\nimport AssignRole from './Pages/AssignRole/AssignRole';\r\nimport ResetPassword from './Pages/ResetPassword/ResetPassword';\r\nimport ManageRoles from './Pages/ManageRoles/MangeRoles'\r\nimport EditRole from './Pages/EditRole/EditRole';\r\nimport Profile from './Pages/Profile/Profile';\r\nimport EditProfile from './Pages/EditProfile/EditProfile';\r\nimport Register from './Pages/Register/Register';\r\nimport SendInvites from \"./Pages/SendInvites/SendInvites\";\r\nimport Company from \"./Pages/Company/Company\";\r\nimport PaymentMethod from \"./Pages/PaymentMethod/PaymentMethod\";\r\nimport Expired from \"./Pages/Expired/Expired\";\r\nimport ChangePassword from \"./Pages/ChangePassword/ChangePassword\";\r\nimport EmailRequest from \"./Pages/ResetPassword/EmailRequest\";\r\nimport ResetPasswordV2 from \"./Pages/ResetPassword/ResetPasswordV2\";\r\n\r\n//components\r\nimport SideNav from './Components/SideNav/SideNav';\r\nimport Header from \"./Components/Header/Header\";\r\n\r\nconst token = localStorage.getItem('token')\r\nconst authGuard = (Component) => (props) => {\r\n    const cookies = new Cookies();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        axios.post(`${config.baseUrl}/u/user/refreshtoken`,\r\n            { jwt: token }, { withCredentials: true })\r\n            .then(response => {\r\n                localStorage.setItem('token', response.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n    return localStorage.getItem('token') ? (\r\n        <Component {...props} />\r\n    ) : (\r\n        <Redirect to=\"/login\" />\r\n    );\r\n};\r\nconst authGuardNotLogin = (Component) => (props) => {\r\n    console.log(props);\r\n    return <Component {...props} />\r\n};\r\n\r\n//set MUI theme\r\nconst themeMUI = createMuiTheme({\r\n    typography: {\r\n        fontFamily: [\r\n            'Segoe UI', 'Frutiger', 'Frutiger Linotype', 'Dejavu Sans', 'Helvetica Neue', 'Arial', 'sans-serif'\r\n        ]\r\n    }\r\n})\r\n\r\nconsole.log()\r\nconst Routes = (props) => (\r\n    <ThemeProvider theme={themeMUI}>\r\n        <Router {...props} >\r\n            <Switch>\r\n                <Route path=\"/register/:token\" component={authGuardNotLogin(Register)}></Route>\r\n                <Route exact strict path=\"/login\" component={Login} />\r\n\r\n                <Route path=\"/resetPasswordV2/token=:token\" component={authGuardNotLogin(ResetPasswordV2)}></Route>\r\n                <Route path=\"/emailRequest\" component={authGuardNotLogin(EmailRequest)}></Route>\r\n\r\n                <Route path=''>\r\n                    <div style={{ display: 'flex', height: '100vh', }}>\r\n                        <SideNav />\r\n\r\n                        <div style={{ width: '100%' }}>\r\n                            <Header CompanyName=\"eISO\"></Header>\r\n                            {/* <TopBar pageName='' /> */}\r\n                            <div style={{ margin: 10 }}>\r\n                                <Switch>\r\n                                    {/* add pages as shown bellow\r\n                                <Route path=\"/pathname\" component={authGuard(page)}></Route> */}\r\n                                    <Route path=\"/dashboard\" component={authGuard(Dashboard)} />\r\n                                    <Route path=\"/manageusers\" component={authGuard(ManageUsers)} />\r\n                                    <Route path=\"/edituser/:guId\" component={authGuard(EditUser)} />\r\n                                    <Route path=\"/manageinvites\" component={authGuard(ManageInvites)} />\r\n                                    <Route path=\"/assignrole/:guId\" component={authGuard(AssignRole)} />\r\n                                    <Route path=\"/sendinvites/\" component={authGuard(SendInvites)} />\r\n                                    <Route path=\"/resetpassword/:guId\" component={authGuard(ResetPassword)} />\r\n                                    <Route path=\"/manageroles\" component={authGuard(ManageRoles)} />\r\n                                    <Route path=\"/editrole/:roleId\" component={authGuard(EditRole)} />\r\n                                    <Route path=\"/profile\" component={authGuard(Profile)} />\r\n                                    <Route path=\"/editprofile\" component={authGuard(EditProfile)} />\r\n                                    <Route path=\"/company\" component={authGuard(Company)} />\r\n                                    <Route path=\"/changepassword\" component={authGuard(ChangePassword)} />\r\n                                    <Route path=\"/paymentmethod\" component={authGuard(PaymentMethod)} />\r\n                                    <Route exact path=\"/\">\r\n                                        <Redirect to=\"/dashboard\" />\r\n                                    </Route>\r\n                                    <Route path=\"\" component={MissingPage} />\r\n                                </Switch>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Route>\r\n\r\n            </Switch>\r\n        </Router >\r\n    </ThemeProvider >\r\n);\r\n\r\n\r\nexport default Routes;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';// I left this default code alone.\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Routes from './Routes.js';\r\nimport colour from \"./Components/Colours/Colours\"\r\nimport config from \"./Config\"\r\n// Importing the Bootstrap CSS\r\n// Referred to https://codesandbox.io/s/github/react-bootstrap/code-sandbox-examples/tree/master/basic?file=/src/index.js:87-164\r\n\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Main tutorial only asked me to do this\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ndocument.body.style.backgroundColor = colour.c4;\r\nconst promise = loadStripe(config.stripeKey);\r\n\r\nReactDOM.render(\r\n  <Elements stripe={promise}>\r\n    <Routes />\r\n  </Elements>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}