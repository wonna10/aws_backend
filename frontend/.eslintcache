[{"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\index.js":"1","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Routes.js":"2","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Config.js":"4","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\Colours\\Colours.js":"5","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\SideNav\\SideNav.js":"6","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\Login\\Login.js":"7","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\Dashboard\\Dashboard.js":"8","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\ManageUsers\\ManageUsers.js":"9","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\ManageInvites\\ManageInvites.js":"10","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\EditUser\\EditUser.js":"11","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\AssignRole\\AssignRole.js":"12","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\MissingPage\\MissingPage.js":"13","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\ResetPassword\\ResetPassword.js":"14","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\Profile\\Profile.js":"15","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\ManageRoles\\MangeRoles.js":"16","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\PaymentMethod\\PaymentMethod.js":"17","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\EditRole\\EditRole.js":"18","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\Register\\Register.js":"19","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\Company\\Company.js":"20","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\EditProfile\\EditProfile.js":"21","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\Expired\\Expired.js":"22","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\SendInvites\\SendInvites.js":"23","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\ChangePassword\\ChangePassword.js":"24","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Utils\\Common.js":"25","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\TopBar\\TopBar.js":"26","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\Title\\Title.js":"27","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\StyledButton\\StyledButton.js":"28","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\ModalPopup\\ModalPopup.js":"29","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\EmailChip\\EmailChip.js":"30","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\MUITableIcons\\material.table.icons.jsx":"31","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\SetupPaymentMethod\\SetupPaymentMethod.js":"32","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\ResetPassword\\EmailRequest.js":"33","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\ResetPassword\\ResetPasswordV2.js":"34","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\Header\\Header.js":"35","C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\ModalPopupPayment\\ModalPopupPayment.js":"36","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\index.js":"37","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Routes.js":"38","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\reportWebVitals.js":"39","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Config.js":"40","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\Colours\\Colours.js":"41","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\Header\\Header.js":"42","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\SideNav\\SideNav.js":"43","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\Login\\Login.js":"44","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\Dashboard\\Dashboard.js":"45","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\ManageInvites\\ManageInvites.js":"46","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\EditUser\\EditUser.js":"47","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\ManageUsers\\ManageUsers.js":"48","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\AssignRole\\AssignRole.js":"49","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\MissingPage\\MissingPage.js":"50","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\ResetPassword\\ResetPassword.js":"51","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\ResetPassword\\EmailRequest.js":"52","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\ManageRoles\\MangeRoles.js":"53","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\ResetPassword\\ResetPasswordV2.js":"54","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\Profile\\Profile.js":"55","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\EditRole\\EditRole.js":"56","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\Register\\Register.js":"57","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\Company\\Company.js":"58","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\SendInvites\\SendInvites.js":"59","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\ChangePassword\\ChangePassword.js":"60","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\EditProfile\\EditProfile.js":"61","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\Expired\\Expired.js":"62","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\PaymentMethod\\PaymentMethod.js":"63","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Utils\\Common.js":"64","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\TopBar\\TopBar.js":"65","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\ModalPopupPayment\\ModalPopupPayment.js":"66","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\Title\\Title.js":"67","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\StyledButton\\StyledButton.js":"68","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\SetupPaymentMethod\\SetupPaymentMethod.js":"69","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\EmailChip\\EmailChip.js":"70","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\MUITableIcons\\material.table.icons.jsx":"71","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\ModalPopup\\ModalPopup.js":"72","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\index.js":"73","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Routes.js":"74","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Config.js":"75","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\reportWebVitals.js":"76","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\Colours\\Colours.js":"77","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\Header\\Header.js":"78","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\SideNav\\SideNav.js":"79","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\Dashboard\\Dashboard.js":"80","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\ManageUsers\\ManageUsers.js":"81","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\Login\\Login.js":"82","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\EditUser\\EditUser.js":"83","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\ResetPassword\\EmailRequest.js":"84","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\MissingPage\\MissingPage.js":"85","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\ManageInvites\\ManageInvites.js":"86","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\ResetPassword\\ResetPassword.js":"87","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\ResetPassword\\ResetPasswordV2.js":"88","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\ManageRoles\\MangeRoles.js":"89","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\EditRole\\EditRole.js":"90","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\Profile\\Profile.js":"91","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\AssignRole\\AssignRole.js":"92","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\EditProfile\\EditProfile.js":"93","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\SendInvites\\SendInvites.js":"94","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\Register\\Register.js":"95","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\PaymentMethod\\PaymentMethod.js":"96","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\Expired\\Expired.js":"97","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\Company\\Company.js":"98","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\ChangePassword\\ChangePassword.js":"99","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\TopBar\\TopBar.js":"100","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Utils\\Common.js":"101","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\StyledButton\\StyledButton.js":"102","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\ModalPopupPayment\\ModalPopupPayment.js":"103","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\Title\\Title.js":"104","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\ModalPopup\\ModalPopup.js":"105","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\SetupPaymentMethod\\SetupPaymentMethod.js":"106","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\EmailChip\\EmailChip.js":"107","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\MUITableIcons\\material.table.icons.jsx":"108"},{"size":1200,"mtime":1634870253572,"results":"109","hashOfConfig":"110"},{"size":5923,"mtime":1635727809863,"results":"111","hashOfConfig":"110"},{"size":375,"mtime":1634870253573,"results":"112","hashOfConfig":"110"},{"size":267,"mtime":1634870253552,"results":"113","hashOfConfig":"110"},{"size":264,"mtime":1635727809434,"results":"114","hashOfConfig":"110"},{"size":8553,"mtime":1634870253545,"results":"115","hashOfConfig":"110"},{"size":7649,"mtime":1635947612408,"results":"116","hashOfConfig":"110"},{"size":2866,"mtime":1635727809652,"results":"117","hashOfConfig":"110"},{"size":4594,"mtime":1634870253563,"results":"118","hashOfConfig":"110"},{"size":5501,"mtime":1634870253561,"results":"119","hashOfConfig":"110"},{"size":14596,"mtime":1634870253558,"results":"120","hashOfConfig":"110"},{"size":6108,"mtime":1634870253553,"results":"121","hashOfConfig":"110"},{"size":576,"mtime":1634870253564,"results":"122","hashOfConfig":"110"},{"size":6227,"mtime":1634870253568,"results":"123","hashOfConfig":"110"},{"size":1627,"mtime":1635727809769,"results":"124","hashOfConfig":"110"},{"size":4089,"mtime":1634870253562,"results":"125","hashOfConfig":"110"},{"size":5922,"mtime":1635727809739,"results":"126","hashOfConfig":"110"},{"size":14675,"mtime":1634870253557,"results":"127","hashOfConfig":"110"},{"size":15864,"mtime":1634870253567,"results":"128","hashOfConfig":"110"},{"size":11231,"mtime":1634870253555,"results":"129","hashOfConfig":"110"},{"size":14383,"mtime":1634870253557,"results":"130","hashOfConfig":"110"},{"size":603,"mtime":1634870253559,"results":"131","hashOfConfig":"110"},{"size":3766,"mtime":1634870253569,"results":"132","hashOfConfig":"110"},{"size":8119,"mtime":1635947612396,"results":"133","hashOfConfig":"110"},{"size":799,"mtime":1634870253571,"results":"134","hashOfConfig":"110"},{"size":711,"mtime":1634870253552,"results":"135","hashOfConfig":"110"},{"size":317,"mtime":1634870253551,"results":"136","hashOfConfig":"110"},{"size":576,"mtime":1634870253545,"results":"137","hashOfConfig":"110"},{"size":6091,"mtime":1634870253532,"results":"138","hashOfConfig":"110"},{"size":3659,"mtime":1634870253525,"results":"139","hashOfConfig":"110"},{"size":2233,"mtime":1634870253531,"results":"140","hashOfConfig":"110"},{"size":10242,"mtime":1635727809525,"results":"141","hashOfConfig":"110"},{"size":3413,"mtime":1635727809798,"results":"142","hashOfConfig":"110"},{"size":5924,"mtime":1635727809825,"results":"143","hashOfConfig":"110"},{"size":886,"mtime":1635727809462,"results":"144","hashOfConfig":"110"},{"size":5924,"mtime":1635727809492,"results":"145","hashOfConfig":"110"},{"size":1200,"mtime":1634870253572,"results":"146","hashOfConfig":"147"},{"size":5923,"mtime":1635727809863,"results":"148","hashOfConfig":"147"},{"size":375,"mtime":1634870253573,"results":"149","hashOfConfig":"147"},{"size":270,"mtime":1638514395770,"results":"150","hashOfConfig":"147"},{"size":264,"mtime":1635727809434,"results":"151","hashOfConfig":"147"},{"size":886,"mtime":1635727809462,"results":"152","hashOfConfig":"147"},{"size":8553,"mtime":1634870253545,"results":"153","hashOfConfig":"147"},{"size":7649,"mtime":1635947612408,"results":"154","hashOfConfig":"147"},{"size":2866,"mtime":1635727809652,"results":"155","hashOfConfig":"147"},{"size":5501,"mtime":1634870253561,"results":"156","hashOfConfig":"147"},{"size":14596,"mtime":1634870253558,"results":"157","hashOfConfig":"147"},{"size":4594,"mtime":1634870253563,"results":"158","hashOfConfig":"147"},{"size":6108,"mtime":1634870253553,"results":"159","hashOfConfig":"147"},{"size":576,"mtime":1634870253564,"results":"160","hashOfConfig":"147"},{"size":6227,"mtime":1634870253568,"results":"161","hashOfConfig":"147"},{"size":3413,"mtime":1635727809798,"results":"162","hashOfConfig":"147"},{"size":4089,"mtime":1634870253562,"results":"163","hashOfConfig":"147"},{"size":5924,"mtime":1635727809825,"results":"164","hashOfConfig":"147"},{"size":1627,"mtime":1635727809769,"results":"165","hashOfConfig":"147"},{"size":14675,"mtime":1634870253557,"results":"166","hashOfConfig":"147"},{"size":15864,"mtime":1634870253567,"results":"167","hashOfConfig":"147"},{"size":11231,"mtime":1634870253555,"results":"168","hashOfConfig":"147"},{"size":3766,"mtime":1634870253569,"results":"169","hashOfConfig":"147"},{"size":8119,"mtime":1635947612396,"results":"170","hashOfConfig":"147"},{"size":14383,"mtime":1634870253557,"results":"171","hashOfConfig":"147"},{"size":603,"mtime":1634870253559,"results":"172","hashOfConfig":"147"},{"size":5922,"mtime":1635727809739,"results":"173","hashOfConfig":"147"},{"size":799,"mtime":1634870253571,"results":"174","hashOfConfig":"147"},{"size":711,"mtime":1634870253552,"results":"175","hashOfConfig":"147"},{"size":5924,"mtime":1635727809492,"results":"176","hashOfConfig":"147"},{"size":317,"mtime":1634870253551,"results":"177","hashOfConfig":"147"},{"size":576,"mtime":1634870253545,"results":"178","hashOfConfig":"147"},{"size":10242,"mtime":1635727809525,"results":"179","hashOfConfig":"147"},{"size":3659,"mtime":1634870253525,"results":"180","hashOfConfig":"147"},{"size":2233,"mtime":1634870253531,"results":"181","hashOfConfig":"147"},{"size":6091,"mtime":1634870253532,"results":"182","hashOfConfig":"147"},{"size":1200,"mtime":1639030590152,"results":"183","hashOfConfig":"184"},{"size":5923,"mtime":1639030590151,"results":"185","hashOfConfig":"184"},{"size":269,"mtime":1639030719031,"results":"186","hashOfConfig":"184"},{"size":375,"mtime":1639030590153,"results":"187","hashOfConfig":"184"},{"size":264,"mtime":1639030590123,"results":"188","hashOfConfig":"184"},{"size":886,"mtime":1639030590126,"results":"189","hashOfConfig":"184"},{"size":8553,"mtime":1639030590134,"results":"190","hashOfConfig":"184"},{"size":2866,"mtime":1639030590145,"results":"191","hashOfConfig":"184"},{"size":4594,"mtime":1639030590148,"results":"192","hashOfConfig":"184"},{"size":7649,"mtime":1639030590146,"results":"193","hashOfConfig":"184"},{"size":14596,"mtime":1639030590146,"results":"194","hashOfConfig":"184"},{"size":3413,"mtime":1639030590149,"results":"195","hashOfConfig":"184"},{"size":576,"mtime":1639030590148,"results":"196","hashOfConfig":"184"},{"size":5501,"mtime":1639030590147,"results":"197","hashOfConfig":"184"},{"size":6227,"mtime":1639030590150,"results":"198","hashOfConfig":"184"},{"size":5924,"mtime":1639030590150,"results":"199","hashOfConfig":"184"},{"size":4089,"mtime":1639030590147,"results":"200","hashOfConfig":"184"},{"size":14675,"mtime":1639030590145,"results":"201","hashOfConfig":"184"},{"size":1627,"mtime":1639030590148,"results":"202","hashOfConfig":"184"},{"size":6108,"mtime":1639030590144,"results":"203","hashOfConfig":"184"},{"size":14383,"mtime":1639030590145,"results":"204","hashOfConfig":"184"},{"size":3766,"mtime":1639030590151,"results":"205","hashOfConfig":"184"},{"size":15864,"mtime":1639030590149,"results":"206","hashOfConfig":"184"},{"size":5922,"mtime":1639030590148,"results":"207","hashOfConfig":"184"},{"size":603,"mtime":1639030590146,"results":"208","hashOfConfig":"184"},{"size":11231,"mtime":1639030590144,"results":"209","hashOfConfig":"184"},{"size":8119,"mtime":1639030590144,"results":"210","hashOfConfig":"184"},{"size":711,"mtime":1639030590139,"results":"211","hashOfConfig":"184"},{"size":799,"mtime":1639030590152,"results":"212","hashOfConfig":"184"},{"size":576,"mtime":1639030590135,"results":"213","hashOfConfig":"184"},{"size":5924,"mtime":1639030590128,"results":"214","hashOfConfig":"184"},{"size":317,"mtime":1639030590138,"results":"215","hashOfConfig":"184"},{"size":6091,"mtime":1639030590127,"results":"216","hashOfConfig":"184"},{"size":10242,"mtime":1639030590134,"results":"217","hashOfConfig":"184"},{"size":3659,"mtime":1639030590123,"results":"218","hashOfConfig":"184"},{"size":2233,"mtime":1639030590127,"results":"219","hashOfConfig":"184"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y8f8z9",{"filePath":"222","messages":"223","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},"7wzp1t",{"filePath":"295","messages":"296","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"294"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"294"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"294"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"294"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"294"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"294"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"294"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"294"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"294"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"294"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"294"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"294"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"294"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"294"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"294"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"294"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"294"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"294"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"294"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"294"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"294"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"294"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"294"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"294"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"294"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b4t44s",{"filePath":"392","messages":"393","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"406","messages":"407","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"408","messages":"409","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"420","messages":"421","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"426","messages":"427","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"428","messages":"429","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"430","messages":"431","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"432","messages":"433","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"456","messages":"457","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"458","messages":"459","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\index.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Routes.js",["462","463","464","465","466","467","468"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Config.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\Colours\\Colours.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\SideNav\\SideNav.js",["469","470","471","472","473","474","475","476","477","478","479","480","481","482"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\Login\\Login.js",["483","484","485","486"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\Dashboard\\Dashboard.js",["487","488","489","490"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\ManageUsers\\ManageUsers.js",["491","492"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\ManageInvites\\ManageInvites.js",["493","494","495"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\EditUser\\EditUser.js",["496","497","498","499","500","501","502","503","504"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\AssignRole\\AssignRole.js",["505","506","507","508","509","510","511"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\MissingPage\\MissingPage.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\ResetPassword\\ResetPassword.js",["512","513","514","515","516","517","518"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\Profile\\Profile.js",["519","520","521"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\ManageRoles\\MangeRoles.js",["522","523"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\PaymentMethod\\PaymentMethod.js",["524","525","526","527","528"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\EditRole\\EditRole.js",["529","530","531","532","533","534","535","536"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\Register\\Register.js",["537","538","539","540","541","542","543","544","545"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\Company\\Company.js",["546","547","548","549","550","551","552","553"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\EditProfile\\EditProfile.js",["554","555","556","557","558","559","560","561"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\Expired\\Expired.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\SendInvites\\SendInvites.js",["562","563","564","565","566","567","568","569","570","571","572"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\ChangePassword\\ChangePassword.js",["573","574","575","576","577","578","579","580","581","582","583"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Utils\\Common.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\TopBar\\TopBar.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\Title\\Title.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\StyledButton\\StyledButton.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\ModalPopup\\ModalPopup.js",["584","585","586"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\EmailChip\\EmailChip.js",["587","588","589","590","591","592","593","594","595","596","597"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\MUITableIcons\\material.table.icons.jsx",[],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\SetupPaymentMethod\\SetupPaymentMethod.js",["598","599","600","601"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\ResetPassword\\EmailRequest.js",["602","603"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Pages\\ResetPassword\\ResetPasswordV2.js",["604","605","606","607","608"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\Header\\Header.js",["609","610","611"],"C:\\Users\\wonna\\Documents\\GitHub\\ESDE-Pet-Project\\frontend\\src\\Components\\ModalPopupPayment\\ModalPopupPayment.js",["612","613","614","615","616","617","618","619","620"],"C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\index.js",[],["621","622"],"C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Routes.js",["623","624","625","626","627","628","629"],"import React, { useEffect, useState } from \"react\";\r\n//https://ui.dev/react-router-v4-pass-props-to-link/\r\nimport {\r\n    Route,\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from 'react-router-dom';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport './Style.css'\r\nimport moment from 'moment'\r\nimport { decodeToken, isExpired } from 'react-jwt';\r\nimport Cookies from 'universal-cookie';\r\nimport axios from \"axios\";\r\nimport config from \"./Config\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n//pages\r\nimport Login from './Pages/Login/Login';\r\nimport Dashboard from './Pages/Dashboard/Dashboard';\r\nimport ManageUsers from './Pages/ManageUsers/ManageUsers';\r\nimport ManageInvites from './Pages/ManageInvites/ManageInvites';\r\nimport EditUser from \"./Pages/EditUser/EditUser\";\r\nimport MissingPage from './Pages/MissingPage/MissingPage';\r\nimport AssignRole from './Pages/AssignRole/AssignRole';\r\nimport ResetPassword from './Pages/ResetPassword/ResetPassword';\r\nimport ManageRoles from './Pages/ManageRoles/MangeRoles'\r\nimport EditRole from './Pages/EditRole/EditRole';\r\nimport Profile from './Pages/Profile/Profile';\r\nimport EditProfile from './Pages/EditProfile/EditProfile';\r\nimport Register from './Pages/Register/Register';\r\nimport SendInvites from \"./Pages/SendInvites/SendInvites\";\r\nimport Company from \"./Pages/Company/Company\";\r\nimport PaymentMethod from \"./Pages/PaymentMethod/PaymentMethod\";\r\nimport Expired from \"./Pages/Expired/Expired\";\r\nimport ChangePassword from \"./Pages/ChangePassword/ChangePassword\";\r\nimport EmailRequest from \"./Pages/ResetPassword/EmailRequest\";\r\nimport ResetPasswordV2 from \"./Pages/ResetPassword/ResetPasswordV2\";\r\n\r\n//components\r\nimport SideNav from './Components/SideNav/SideNav';\r\nimport Header from \"./Components/Header/Header\";\r\n\r\nconst token = localStorage.getItem('token')\r\nconst authGuard = (Component) => (props) => {\r\n    const cookies = new Cookies();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        axios.post(`${config.baseUrl}/u/user/refreshtoken`,\r\n            { jwt: token }, { withCredentials: true })\r\n            .then(response => {\r\n                localStorage.setItem('token', response.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n    return localStorage.getItem('token') ? (\r\n        <Component {...props} />\r\n    ) : (\r\n        <Redirect to=\"/login\" />\r\n    );\r\n};\r\nconst authGuardNotLogin = (Component) => (props) => {\r\n    console.log(props);\r\n    return <Component {...props} />\r\n};\r\n\r\n//set MUI theme\r\nconst themeMUI = createMuiTheme({\r\n    typography: {\r\n        fontFamily: [\r\n            'Segoe UI', 'Frutiger', 'Frutiger Linotype', 'Dejavu Sans', 'Helvetica Neue', 'Arial', 'sans-serif'\r\n        ]\r\n    }\r\n})\r\n\r\nconsole.log()\r\nconst Routes = (props) => (\r\n    <ThemeProvider theme={themeMUI}>\r\n        <Router {...props} >\r\n            <Switch>\r\n                <Route path=\"/register/:token\" component={authGuardNotLogin(Register)}></Route>\r\n                <Route exact strict path=\"/login\" component={Login} />\r\n\r\n                <Route path=\"/resetPasswordV2/token=:token\" component={authGuardNotLogin(ResetPasswordV2)}></Route>\r\n                <Route path=\"/emailRequest\" component={authGuardNotLogin(EmailRequest)}></Route>\r\n\r\n                <Route path=''>\r\n                    <div style={{ display: 'flex', height: '100vh', }}>\r\n                        <SideNav />\r\n\r\n                        <div style={{ width: '100%' }}>\r\n                            <Header CompanyName=\"eISO\"></Header>\r\n                            {/* <TopBar pageName='' /> */}\r\n                            <div style={{ margin: 10 }}>\r\n                                <Switch>\r\n                                    {/* add pages as shown bellow\r\n                                <Route path=\"/pathname\" component={authGuard(page)}></Route> */}\r\n                                    <Route path=\"/dashboard\" component={authGuard(Dashboard)} />\r\n                                    <Route path=\"/manageusers\" component={authGuard(ManageUsers)} />\r\n                                    <Route path=\"/edituser/:guId\" component={authGuard(EditUser)} />\r\n                                    <Route path=\"/manageinvites\" component={authGuard(ManageInvites)} />\r\n                                    <Route path=\"/assignrole/:guId\" component={authGuard(AssignRole)} />\r\n                                    <Route path=\"/sendinvites/\" component={authGuard(SendInvites)} />\r\n                                    <Route path=\"/resetpassword/:guId\" component={authGuard(ResetPassword)} />\r\n                                    <Route path=\"/manageroles\" component={authGuard(ManageRoles)} />\r\n                                    <Route path=\"/editrole/:roleId\" component={authGuard(EditRole)} />\r\n                                    <Route path=\"/profile\" component={authGuard(Profile)} />\r\n                                    <Route path=\"/editprofile\" component={authGuard(EditProfile)} />\r\n                                    <Route path=\"/company\" component={authGuard(Company)} />\r\n                                    <Route path=\"/changepassword\" component={authGuard(ChangePassword)} />\r\n                                    <Route path=\"/paymentmethod\" component={authGuard(PaymentMethod)} />\r\n                                    <Route exact path=\"/\">\r\n                                        <Redirect to=\"/dashboard\" />\r\n                                    </Route>\r\n                                    <Route path=\"\" component={MissingPage} />\r\n                                </Switch>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Route>\r\n\r\n            </Switch>\r\n        </Router >\r\n    </ThemeProvider >\r\n);\r\n\r\n\r\nexport default Routes;","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Config.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\Colours\\Colours.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\Header\\Header.js",["630","631","632"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport colour from \"../Colours/Colours\";\r\n\r\nconst Header = ({CompanyName}) => {\r\n    const history = useHistory();\r\n    const [isLogin, setIsLogin] = useState(false);\r\n    const [displayName, setDisplayName] = useState(null);\r\n    var defaultName = \"eISO System\"\r\n\r\n    useEffect(() => {\r\n        let getDisplayName = window.sessionStorage.getItem(\"displayName\")\r\n        if (getDisplayName !== null) {\r\n            setIsLogin(true)\r\n            setDisplayName(getDisplayName);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark\" style={{ backgroundColor: colour.c6 }}>  \r\n                    <h2 style={{ color: \"#ffffff\" }}>{CompanyName ? CompanyName : defaultName}</h2>\r\n            </nav>\r\n    )\r\n};\r\nexport default Header;\r\n","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\SideNav\\SideNav.js",["633","634","635","636","637","638","639","640","641","642","643","644","645","646"],"import React, { useState } from 'react';\r\nimport { Drawer, makeStyles, IconButton, Typography, Collapse, List, ClickAwayListener } from '@material-ui/core';\r\nimport { Email, Ballot, Dashboard, People, Person, ExpandLess, ExpandMore, Assessment, SupervisorAccount, Menu, ExitToApp, EmojiPeople, Policy, ViewList, AssignmentTurnedIn, Assignment, Equalizer, Business } from '@material-ui/icons'\r\nimport colour from '../Colours/Colours'\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { decodeToken } from \"react-jwt\";\r\nimport axios from 'axios';\r\nimport config from \"../../Config\";\r\n\r\n\r\nconst SideNav = () => {\r\n    //set drawer size and toggle \r\n    const history = useHistory();\r\n    const closeWidth = 60\r\n    const openWidth = 240\r\n    const [drawerWidth, setDrawerWidth] = useState(closeWidth)\r\n    const [drawerOpen, setDrawerOpen] = useState(false)\r\n    const [open, setOpen] = useState(false);\r\n    const token = localStorage.getItem('token')\r\n    let priv_id = ''\r\n    if (token != null) {\r\n        priv_id = decodeToken(token).privId\r\n    }\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        drawer: {\r\n            width: drawerWidth,\r\n        },\r\n        drawerPaper: {\r\n            //some MUI thing i dont really know how it works\r\n            width: drawerWidth,\r\n            backgroundColor: colour.c5,\r\n            borderRight: 0,\r\n            '&::-webkit-scrollbar': {\r\n                display: 'none'\r\n            },\r\n            // for some reason anchor left gives a 1px border to the right. why does this exist i dont know but it is there\r\n        },\r\n        menuRow: {\r\n            //each row of naviagtion\r\n            color: colour.c1,\r\n            display: 'flex',\r\n            \"&:hover\": {\r\n                backgroundColor: colour.c2,\r\n                textDecoration: 'underline'\r\n            }\r\n        },\r\n        logoutRow: {\r\n            //each row of naviagtion\r\n            color: colour.c1,\r\n            display: 'flex',\r\n            \"&:hover\": {\r\n                backgroundColor: colour.c2,\r\n                textDecoration: 'underline'\r\n            },\r\n        },\r\n        iconStyle: {\r\n            //icon\r\n            color: colour.c1,\r\n            fontSize: 40,\r\n        },\r\n        textStyle: {\r\n            //text\r\n            marginTop: 'auto',\r\n            marginBottom: 'auto',\r\n            paddingLeft: 5,\r\n            color: 'white',\r\n            fontSize: '1.5rem',\r\n            fontWeight: 400,\r\n            \"&:hover\": {\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                color: 'white'\r\n            }\r\n        },\r\n        iconBtnStyle: {\r\n            width: closeWidth,\r\n            height: closeWidth,\r\n            \"&:focus\": {\r\n                border: \"none\",\r\n                outline: \"none\"\r\n            }\r\n        },\r\n        expandBtnStyle: {\r\n            margin: 'auto',\r\n        },\r\n        expandStyle: {\r\n            paddingLeft: 20,\r\n        }\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const toggleDrawer = () => {\r\n        //toggle from icon to icon with text for drawer or somethihng\r\n        if (drawerOpen) {\r\n            setDrawerOpen(false)\r\n            setOpen(false)\r\n            setDrawerWidth(closeWidth)\r\n        }\r\n        else {\r\n            setDrawerOpen(true)\r\n            setDrawerWidth(openWidth)\r\n        }\r\n    }\r\n\r\n    const toggleNested = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const toggleDrawerAndNested = () => {\r\n        if (drawerOpen) {\r\n            setDrawerOpen(false)\r\n            setOpen(false);\r\n            setDrawerWidth(closeWidth)\r\n        }\r\n        else {\r\n            setDrawerOpen(true)\r\n            setOpen(true);\r\n            setDrawerWidth(openWidth)\r\n        }\r\n    }\r\n\r\n    const closeDrawer = () => {\r\n        setDrawerOpen(false)\r\n        setOpen(false);\r\n        setDrawerWidth(closeWidth)\r\n    }\r\n\r\n    const logout = () => {\r\n        var confirm = window.confirm(\"Logout?\")\r\n        if (confirm) {\r\n            axios.post(`${config.baseUrl}/u/user/clearcookies/`,\r\n            {}, {withCredentials:true})\r\n            .then(response => {\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n            localStorage.clear();\r\n            alert('You have been logged out <3')\r\n            history.push(\"/login\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={closeDrawer}>\r\n            <Drawer open\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor='left'\r\n                classes={{ paper: classes.drawerPaper }}\r\n            >\r\n                <List>\r\n                    <div className={classes.menuRow}>\r\n                        <IconButton onClick={() => toggleDrawer()} className={classes.iconBtnStyle}>\r\n                            <Menu className={classes.iconStyle} />\r\n                        </IconButton>\r\n                        {drawerOpen && <Typography variant=\"h5\" className={classes.textStyle}>Menu</Typography>}\r\n                    </div>\r\n                    <div className={classes.menuRow}>\r\n                        <IconButton onClick={() => history.push('/dashboard')} className={classes.iconBtnStyle}>\r\n                            <Dashboard className={classes.iconStyle} />\r\n                        </IconButton>\r\n                        {drawerOpen && <Link to=\"/dashboard\" className={classes.textStyle}><h5>Dashboard</h5></Link>}\r\n                    </div>\r\n                    <div className={classes.menuRow}>\r\n                        <IconButton onClick={() => history.push('/profile')} className={classes.iconBtnStyle}>\r\n                            <Person className={classes.iconStyle} />\r\n                        </IconButton>\r\n                        {drawerOpen && <Link to=\"/profile\" className={classes.textStyle}><h5>Profile</h5></Link>}\r\n                    </div>\r\n                    {(priv_id == 2 &&\r\n                        <div className={classes.menuRow}>\r\n                            <IconButton onClick={() => history.push('/company')} className={classes.iconBtnStyle}>\r\n                                <Business className={classes.iconStyle} />\r\n                            </IconButton>\r\n                            {drawerOpen && <Link to=\"/company\" className={classes.textStyle}><h5>Company</h5></Link>}\r\n                        </div>\r\n                    )}\r\n                    {(priv_id <= 3 &&\r\n                        <>\r\n                            <div className={classes.menuRow}>\r\n                                <IconButton onClick={() => history.push('/manageusers')} className={classes.iconBtnStyle}>\r\n                                    <People className={classes.iconStyle} />\r\n                                </IconButton>\r\n                                {drawerOpen && <Link to=\"/manageusers\" className={classes.textStyle}><h5>Manage Users</h5></Link>}\r\n                            </div>\r\n                            <div className={classes.menuRow}>\r\n                                <IconButton onClick={() => history.push('/manageinvites')} className={classes.iconBtnStyle}>\r\n                                    <Email className={classes.iconStyle} />\r\n                                </IconButton>\r\n                                {drawerOpen && <Link to=\"/manageinvites\" className={classes.textStyle}><h5>Manage Invites</h5></Link>}\r\n                            </div>\r\n                            <div className={classes.menuRow}>\r\n                                <IconButton onClick={() => history.push('/manageroles')} className={classes.iconBtnStyle}>\r\n                                    <Ballot className={classes.iconStyle} />\r\n                                </IconButton>\r\n                                {drawerOpen && <Link to=\"/manageroles\" className={classes.textStyle}><h5>Manage Roles</h5></Link>}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n\r\n                    <div className={classes.logoutRow}>\r\n                        <IconButton onClick={() => logout()} className={classes.iconBtnStyle}>\r\n                            <ExitToApp className={classes.iconStyle} />\r\n                        </IconButton>\r\n                        {drawerOpen && <Link to=\"\" onClick={() => logout()} className={classes.textStyle}><h5>Logout</h5></Link>}\r\n                    </div>\r\n                </List>\r\n            </Drawer >\r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nexport default SideNav","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\Login\\Login.js",["647","648","649","650"],"//Reference:https://github.com/mohanramphp/auth-using-react\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles, Button } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Title from '../../Components/Title/Title'\r\nimport config from '../../Config.js';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { saveUserDataToLocalStore } from '../../Utils/Common.js';\r\nimport Cookies from 'universal-cookie';\r\nimport moment from 'moment'\r\n//import Components\r\nimport colour from '../../Components/Colours/Colours'\r\nimport styles from './Login.module.css';\r\nimport img from '../../Images/iso-2-1-logo-black-and-white.png';\r\n\r\nfunction Login() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const history = useHistory();\r\n  const cookies = new Cookies();\r\n\r\n  //states\r\n  const [errSpaceA, setErrSpaceA] = useState(54)\r\n  const [errSpaceB, setErrSpaceB] = useState(54)\r\n\r\n  //errSpace Change\r\n  useEffect(() => {\r\n    if (errors.email) {\r\n      setErrSpaceA(30)\r\n    } else {\r\n      setErrSpaceA(54)\r\n    }\r\n    if (errors.password) {\r\n      setErrSpaceB(30)\r\n    } else {\r\n      setErrSpaceB(54)\r\n    }\r\n  }, [errors.email, errors.password])\r\n\r\n  //Styles\r\n  const useStyles = makeStyles({\r\n    //local style\r\n    shadow: {\r\n      boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\"\r\n    },\r\n    formContainer: {\r\n      backgroundColor: colour.c3,\r\n      color: colour.c1,\r\n      borderRadius: \"5px\",\r\n      boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n    },\r\n    form: {\r\n      width: '95%',\r\n      margin: 'auto',\r\n      color: 'black',\r\n      padding: '20px'\r\n    },\r\n    errorMessage: {\r\n      color: colour.error,\r\n    },\r\n\r\n  })\r\n  const classes = useStyles()\r\n\r\n  //Submit\r\n  const onSubmit = (data) => {\r\n    console.log(data)\r\n    axios.post(`${config.baseUrl}/u/user/signin`,\r\n      { email: data.email, password: data.password }, { withCredentials: true })\r\n      .then(response => {\r\n        alert('Login success')\r\n        console.log(response.data)\r\n        console.log(response.data.token);\r\n        const token = response.data.token;\r\n        saveUserDataToLocalStore(token, response.data.displayName);\r\n        history.push('/dashboard');\r\n      }).catch(error => {\r\n        console.dir(error);\r\n        if ((error.response != null) && (error.response.request.status === 401)) {\r\n          alert('Email or password is wrong')\r\n        } else if ((error.response != null) && (error.response.request.status === 400)) {\r\n          alert('Account or Company has been terminated')\r\n        } else if (error.message != null) {\r\n          alert('Err')\r\n        } else {\r\n          alert('Something went wrong. Please try again later.');\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={styles.bg}>\r\n      <Title title=\"Login\"></Title>\r\n      <div className={`d-flex flex-column align-items-center justify-content-center h-100 w-100`}>\r\n        <div className={`my-auto d-inline-flex border rounded ${styles.shadow}`}>\r\n          <div className={`${styles.loginFormContainer} `}>\r\n            <div className=\"m-5 p-3\">\r\n              <legend style={{ textAlign: \"center\", fontSize: \"18\" }}>Login</legend>\r\n              <hr />\r\n              <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"email\" >Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder='Email'\r\n                    className='form-control'\r\n                    ref={register({ required: { value: true } })}\r\n                  />\r\n                  {errors.email && <p className={classes.errorMessage}>Please input email</p>}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"password\" >Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder='Password'\r\n                    className='form-control'\r\n                    ref={register({ required: { value: true } })}\r\n                  />\r\n                  {errors.password && <p className={classes.errorMessage}>Please input password</p>}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end \">\r\n                  <a href=\"/EmailRequest\" className=\"text-dark\">Forget Password?</a>\r\n                </div>\r\n                <Button\r\n                  className={`mt-3 ${styles.shadow}`}\r\n                  type='submit'\r\n                  style={{\r\n                    backgroundColor: colour.c5,\r\n                    color: colour.c1,\r\n                    width: '100%',\r\n                  }}\r\n                >Login</Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div className=\"p-3 d-inline-flex flex-wrap flex-column align-items-center text-white\" style={{ backgroundColor: \"#0c3658\", borderLeft: \"1px solid #fff\", height: \"500px\" }}>\r\n            <h3 className=\"p-3\">eISO Company Login</h3>\r\n            <img className=\"mt-5 p-3 \" src={img} style={{ width: \"auto\", maxWidth: \"300px\" }} alt=\"Logo\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    // <div className={styles.bg}>\r\n    //   <Title title=\"Login\"></Title>\r\n    //   <div className={classes.shadow} style={{\r\n    //     position: 'absolute',\r\n    //     top: '50%',\r\n    //     left: '50%',\r\n    //     transform: 'translate(-50%, -50%)',\r\n    //     width: '450px',\r\n    //     backgroundColor: colour.c3,\r\n    //     borderRadius: 15,\r\n    //     color: colour.c1\r\n    //   }}>\r\n    //     <div style={{ backgroundColor: colour.c6, borderRadius: \"15px 15px 0px 0px\", width: \"100%\" }}>\r\n    //       <h1 style={{ paddingTop: 10, paddingBottom: 10, textAlign: 'center' }}>eISO System</h1>\r\n    //     </div>\r\n    //     <div>\r\n    //       <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n    //         <div style={{ marginBottom: errSpaceA }}>\r\n    //           <label htmlFor=\"email\" className={classes.label}>Email</label>\r\n    //           <input\r\n    //             type=\"text\"\r\n    //             name=\"email\"\r\n    //             placeholder='Email'\r\n    //             className='form-control'\r\n    //             ref={register({ required: { value: true } })}\r\n    //           />\r\n    //           {errors.email && <p className={classes.errorMessage}>Please input email</p>}\r\n    //         </div>\r\n    //         <div style={{ marginBottom: errSpaceB }}>\r\n    //           <label htmlFor=\"password\" className={classes.label}>Password</label>\r\n    //           <input\r\n    //             type=\"password\"\r\n    //             name=\"password\"\r\n    //             placeholder='Password'\r\n    //             className='form-control'\r\n    //             ref={register({ required: { value: true } })}\r\n    //           />\r\n    //           {errors.password && <p className={classes.errorMessage}>Please input password</p>}\r\n    //           <a href=\"/ForgetPassword\" style={{ display: \"block\", marginTop: \"5px\", textDecoration: \"none\" }}>Forget Password</a>\r\n\r\n    //         </div>\r\n    //         <Button\r\n    //           className={classes.shadow}\r\n    //           type='submit'\r\n    //           style={{\r\n    //             backgroundColor: colour.c5,\r\n    //             color: colour.c1,\r\n    //             width: '100%',\r\n    //             fontSize: '1.2rem'\r\n    //           }}\r\n    //         >Login</Button>\r\n    //       </form>\r\n    //     </div>\r\n    //   </div>\r\n    // </div >\r\n  );\r\n}\r\nexport default Login;","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\Dashboard\\Dashboard.js",["651","652","653","654"],"//Libraries\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles, Paper } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport axios from \"axios\";\r\nimport { decodeToken } from 'react-jwt';\r\nimport { Row } from \"react-bootstrap\";\r\n\r\n//Components\r\nimport config from \"../../Config\";\r\nimport ModalPopupPayment from \"../../Components/ModalPopupPayment/ModalPopupPayment\";\r\nimport colour from '../../Components/Colours/Colours'\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport Title from '../../Components/Title/Title'\r\n\r\nconst Dashboard = () => {\r\n  const [planData, setPlanData] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get(`${config.baseUrl}/u/stripe/plans/`, { withCredentials: true })\r\n      .then(response => {\r\n        console.log(response.data)\r\n        var data = response.data;\r\n        setPlanData(data);\r\n\r\n      }).catch(error => {\r\n        console.log(error)\r\n      });\r\n  }, []);\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      height: \"auto\",\r\n      backgroundColor: colour.c3,\r\n      boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n      padding: '15px 15px 1px 15px',\r\n      borderRadius: 5,\r\n      marginBottom: 15\r\n    }\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  console.log(planData)\r\n\r\n  return (\r\n    <>\r\n      <Title title=\"Dashboard\" />\r\n      <TopBar pageName='Dashboard' />\r\n      <div className=\"m-2 p-3\" style={{ backgroundColor: colour.c1, }}>\r\n        {planData.length !== 0 &&\r\n          <>\r\n            <h3 className=\"text-dark\">Subscription Plans</h3>\r\n            <hr />\r\n            <div className=\"d-flex\">\r\n              {planData.map(x => {\r\n                return (\r\n                  <>\r\n                    <div className=\"border w-100 d-flex justify-content-center mr-3\">\r\n                      <Row style={{ margin: 20 }} className=\"d-flex justify-content-center text-center\">\r\n                        <div className=\"my-3\">\r\n                          <h4 >\r\n                            {x.name}\r\n                          </h4>\r\n                          <h1>\r\n                            $ {x.price} / Month\r\n                          </h1>\r\n                          <div className=\"w-100 text-left my-4\">\r\n                            <ul>\r\n                              <li>Perk 1</li>\r\n                              <li>Perk 2</li>\r\n                              <li>Perk 3</li>\r\n                              <li>Perk 4</li>\r\n                              <li>Perk 5</li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                        <ModalPopupPayment rowData={x} />\r\n                      </Row>\r\n                    </div>\r\n                  </>\r\n                )\r\n              })}\r\n            </div>\r\n          </>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\ManageInvites\\ManageInvites.js",["655","656","657"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, Paper, Button } from '@material-ui/core';\r\nimport colour from '../../Components/Colours/Colours'\r\nimport StyledButton from '../../Components/StyledButton/StyledButton'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport config from '../../Config.js';\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport { decodeToken } from \"react-jwt\";\r\nimport { useHistory } from 'react-router';\r\nimport Title from '../../Components/Title/Title'\r\n\r\n//table\r\nimport MaterialTable from 'material-table'\r\nimport tableIcons from '../../Components/MUITableIcons/material.table.icons'\r\n\r\n\r\nconst ManageInvites = () => {\r\n    const token = localStorage.getItem('token')\r\n    const company_id = decodeToken(token).companyId\r\n    const [userData, setUserData] = useState();\r\n    const history = useHistory();\r\n\r\n    if (decodeToken(token).privId > 3) {\r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        table: {\r\n            padding: 5,\r\n            backgroundColor: colour.c3,\r\n            boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n            \"& > *\": {\r\n                backgroundColor: colour.c3,\r\n                color: colour.c1 + '!important',\r\n                boxShadow: \" 0 0 0\"\r\n            },\r\n            \"& th > span\": { color: colour.c1 + '!important' },\r\n            // \"& svg\": { color: colour.c1 + '!important' },\r\n            \"& svg\": { fill: colour.c1 },\r\n            \"& div\": { color: colour.c1, borderBottom: colour.c1 + '!important' },\r\n            \"& table tbody tr td.MuiTableCell-body\": { colour: colour.c1 }\r\n        },\r\n        boxContainer: {\r\n            \"& > button\": {\r\n                marginRight: 10,\r\n                marginBottom: 5,\r\n                marginTop: 5\r\n            }\r\n        },\r\n    })\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/user/getuserinvitelist/${company_id}`,\r\n            {})\r\n            .then(response => {\r\n                setUserData(response.data)\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, []);//End of useEffect({function code,[]})\r\n\r\n    const resendInvite = (email, company_id, priv_id) => {\r\n        axios.post(`${config.baseUrl}/u/user/resendinvite/`,\r\n            {\r\n                data: {\r\n                    email: email,\r\n                    company_id: company_id,\r\n                    priv_id: priv_id\r\n                }\r\n            })\r\n            .then(response => {\r\n                alert('Invite has been resend.')\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const deleteInvite = (email) => {\r\n        axios.delete(`${config.baseUrl}/u/user/deleteinvite/${email}`,\r\n            {\r\n            })\r\n            .then(response => {\r\n                alert('Invite has been deleted')\r\n                setUserData(userData.filter((data) => { return data.email != email }))\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const columns = () => [\r\n        {\r\n            title: \"Email\",\r\n            field: \"email\",\r\n        },\r\n        {\r\n            title: \"company_id\",\r\n            field: \"company_id\",\r\n            hidden: true\r\n        },\r\n        {\r\n            title: \"priv_id\",\r\n            field: \"priv_id\",\r\n            hidden: true\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            align: 'center',\r\n            render: rowData =>\r\n                <div className={classes.boxContainer}>\r\n                    <StyledButton text=\"Resend Invite Link\" event={() => resendInvite(rowData.email, rowData.company_id, rowData.priv_id)} />\r\n                    <StyledButton text=\"Delete Invite Link\" event={() => deleteInvite(rowData.email)} />\r\n                </div>\r\n        },\r\n\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <div className='manageinvite'>\r\n            <Title title= \"Manage Invite Link\"/>\r\n            <TopBar pageName='Manage Invite Link' />\r\n            <Paper className={classes.table}>\r\n                <MaterialTable\r\n                    icons={tableIcons}\r\n                    columns={columns()}\r\n                    data={userData}\r\n                    title=\"\"\r\n                    options={{\r\n                        tableLayout: \"auto\",\r\n                        draggable: false,\r\n                        headerStyle: {\r\n                            backgroundColor: colour.c3,\r\n                            borderTop: 'solid',\r\n                            borderBottom: 'solid',\r\n                            borderWidth: 2,\r\n                            color: colour.c1\r\n                        },\r\n                        rowStyle: {\r\n                            borderColor: '#ff0000',\r\n                            color: colour.c1\r\n                        },\r\n                    }}\r\n\r\n                />\r\n                <Row style={{ margin: 'auto' }}>\r\n                    <Col>\r\n                        <div>\r\n                            <StyledButton style={{ marginTop: 10, marginBottom: 10 }} text=\"Send Invites\" event={() => history.push('/sendinvites')}></StyledButton>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Paper >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManageInvites;","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\EditUser\\EditUser.js",["658","659","660","661","662","663","664","665","666"],"import { React, useState, useEffect, useMemo } from 'react';\r\nimport Select from 'react-select-v2';\r\nimport countryList from 'react-select-country-list'\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport { isValidPhoneNumber } from \"react-phone-number-input\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport axios from 'axios';\r\nimport { decodeToken } from 'react-jwt';\r\nimport config from '../../Config.js';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { makeStyles, Paper, Button } from '@material-ui/core';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport TopBar from '../../Components/TopBar/TopBar.js';\r\nimport colour from '../../Components/Colours/Colours.js';\r\nimport Title from '../../Components/Title/Title'\r\n\r\nconst EditUser = ({ match }) => {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, control, formState: { errors } } = useForm();\r\n\r\n    const token = localStorage.getItem('token')\r\n    const userPrivilege = decodeToken(token).privId\r\n    const user_id = match.params.userId;\r\n    if (decodeToken(token).privId > 3) { \r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n    const countryOptions = useMemo(() => countryList().getData(), [])\r\n\r\n    const [firstName, setFirstName] = useState()\r\n    const [lastName, setLastName] = useState()\r\n    const [email, setEmail] = useState()\r\n    const [contact, setContact] = useState()\r\n    const [country, setCountry] = useState('')\r\n    const [state, setState] = useState()\r\n    const [street, setStreet] = useState()\r\n    const [postalcode, setPostalCode] = useState()\r\n    const [privilege, setPrivilege] = useState()\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/user/getuserdata/${user_id}`,\r\n            {})\r\n            .then(response => {\r\n                var data = response.data.data[0]\r\n                for (var i = 0; i < countryOptions.length; i++) {\r\n                    if (countryOptions[i].label === data.country) {\r\n                        setCountry(countryOptions[i])\r\n                    }\r\n                }\r\n                setFirstName(data.first_name)\r\n                setLastName(data.last_name)\r\n                setEmail(data.email)\r\n                setContact(data.contact_number.toString())\r\n                setState(data.state)\r\n                setStreet(data.street)\r\n                setPostalCode(data.postal_code)\r\n                setPrivilege(privOptions[data.priv_id - 2])\r\n            }).catch(error => {\r\n                if (error.response.status == 500) {\r\n                    alert(\"Error!\")\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    const privOptions = [\r\n        { value: 2, label: 'Super Admin' },\r\n        { value: 3, label: 'Admin' },\r\n        { value: 4, label: 'User' }\r\n    ]\r\n\r\n    const phoneValidation = (value) => {\r\n        if (value == \"\") {\r\n            return false\r\n        }\r\n        else {\r\n            return isValidPhoneNumber('+' + value.toString())\r\n\r\n        }\r\n    }\r\n    const onSubmit = (data, e) => {\r\n        if (data.country == undefined) {\r\n            data.country = country\r\n        }\r\n        data.contact = contact\r\n        data.privilege = privilege\r\n        axios.put(`${config.baseUrl}/u/user/updateuser/${user_id}`,\r\n            {\r\n                data: data\r\n            })\r\n            .then(response => {\r\n                alert('Successfuly Updated')\r\n                history.push(`/manageusers`);\r\n            }).catch(error => {\r\n\r\n                if (error.response.status == 500) {\r\n                    alert('Error!')\r\n                }\r\n\r\n                if (error.response.status == 401) {\r\n                    alert(\"This email has already been used.\")\r\n                }\r\n                // Reset the form state\r\n                e.target.reset();\r\n            });\r\n    }// End of onSubmit\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formField: {\r\n            backgroundColor: 'black'\r\n        },\r\n        btnContainer: {\r\n            marginTop: 20,\r\n            marginBottom: 50,\r\n            margin: 'auto'\r\n        }\r\n\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Title title=\"Edit User\"/>\r\n            <TopBar pageName='Edit User' />\r\n            <Paper className={classes.formContainer}>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"firstNameInput\">First Name</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"firstNameInput\"\r\n                            name=\"firstName\"\r\n                            defaultValue={firstName}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter first name\"\r\n                            placeholder=\"Enter first name\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter your first name.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"firstName\"] && (\r\n                            <p className=\"error-message\">Please enter first name</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastNameInput\">Last Name</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"lastNameInput\"\r\n                            name=\"lastName\"\r\n                            defaultValue={lastName}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter last name\"\r\n                            placeholder=\"Enter last name\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter your last name.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"lastName\"] && (\r\n                            <p className=\"error-message\">Please enter last name</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"emailInput\">Email</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"emailInput\"\r\n                            defaultValue={email}\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter email\"\r\n                            placeholder=\"Enter email\"\r\n                            ref={register({\r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                    message: \"Invalid email address\"\r\n                                },\r\n                                required: {\r\n                                    type: \"email\",\r\n                                    value: true,\r\n                                    message: 'Please enter your email.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"email\"] && (\r\n                            <p className=\"error-message\">Invalid Email</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"contactInput\">Contact Number</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <Controller\r\n                            name=\"contact\"\r\n                            control={control}\r\n                            rules={{\r\n                                validate: (value) => phoneValidation(contact)\r\n                            }}\r\n                            render={() => (\r\n                                <PhoneInput\r\n                                    dropdownStyle={{ 'color': \"black\" }}\r\n                                    enableSearch\r\n                                    value={contact}\r\n                                    onChange={setContact}\r\n                                    name=\"contact\"\r\n                                    country=\"sg\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        {errors[\"contact\"] && (\r\n                            <p className=\"error-message\">Invalid Phone Number</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"countryInput\">Select Country</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <Select options={countryOptions}\r\n                            styles={selectStyle}\r\n                            name=\"country\"\r\n                            register={register}\r\n                            value={country}\r\n                            onChange={setCountry}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"stateInput\">State</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"stateInput\"\r\n                            name=\"state\"\r\n                            defaultValue={state}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter state\"\r\n                            placeholder=\"Enter state\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter state.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"state\"] && (\r\n                            <p className=\"error-message\">Please enter your state</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"streetInput\">Street</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"streetInput\"\r\n                            name=\"street\"\r\n                            defaultValue={street}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter street\"\r\n                            placeholder=\"Enter street\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter street.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"street\"] && (\r\n                            <p className=\"error-message\">Please enter your street</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"postalcodeInput\">Postal Code</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"postalcodeInput\"\r\n                            name=\"postalcode\"\r\n                            defaultValue={postalcode}\r\n                            type=\"numbers\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter postal code\"\r\n                            placeholder=\"Enter postal code\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter postal code.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"postalcode\"] && (\r\n                            <p className=\"error-message\">Please enter your postal code</p>\r\n                        )}\r\n                    </div>\r\n                    {(userPrivilege == 2) && (\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"privInput\">Privilege</label>\r\n                            <Select\r\n                                options={privOptions}\r\n                                name=\"privilege\"\r\n                                ref={register()}\r\n                                value={privilege}\r\n                                onChange={setPrivilege}\r\n                                styles={selectStyle}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <Row >\r\n                        <div className={classes.btnContainer}>\r\n                            <Button type=\"submit\" style={{ backgroundColor: colour.c5, color: colour.c1, marginRight: 10, padding: 10 }}>Submit</Button>\r\n                            <Button onClick={() => history.push(`/manageusers`)} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginLeft: 10, padding: 10 }}>Cancel</Button>\r\n                        </div>\r\n                    </Row>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\nexport default EditUser\r\n","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\ManageUsers\\ManageUsers.js",["667","668"],"import React, { useState, useEffect } from 'react';\r\nimport { Paper, makeStyles, Modal } from '@material-ui/core';\r\nimport colour from '../../Components/Colours/Colours'\r\nimport StyledButton from '../../Components/StyledButton/StyledButton'\r\nimport axios from 'axios';\r\nimport config from '../../Config.js';\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport { decodeToken } from \"react-jwt\";\r\nimport { useHistory } from 'react-router';\r\nimport ModalPopup from '../../Components/ModalPopup/ModalPopup';\r\nimport Title from '../../Components/Title/Title'\r\n\r\n//table\r\nimport MaterialTable from 'material-table'\r\nimport tableIcons from '../../Components/MUITableIcons/material.table.icons'\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    //local style\r\n    table: {\r\n        padding: 5,\r\n        backgroundColor: colour.c3,\r\n        boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n        \"& > *\": {\r\n            backgroundColor: colour.c3,\r\n            color: colour.c1 + '!important',\r\n            boxShadow: \" 0 0 0\"\r\n        },\r\n        \"& th > span\": { color: colour.c1 + '!important' },\r\n        // \"& svg\": { color: colour.c1 + '!important' },\r\n        \"& svg\": { fill: colour.c1 },\r\n        \"& div\": { color: colour.c1, borderBottom: colour.c1 + '!important' },\r\n        \"& td \": { color: colour.c1 }\r\n    },\r\n    boxContainer: {\r\n        \"& > button\": {\r\n            marginRight: 5,\r\n            marginBottom: 5,\r\n            marginTop: 5\r\n        }\r\n    }\r\n})\r\n\r\n\r\nconst ManageUsers = () => {\r\n    const history = useHistory()\r\n    const [userData, setUserData] = useState();\r\n    const token = localStorage.getItem('token')\r\n    const company_id = decodeToken(token).companyId\r\n    if (decodeToken(token).privId > 3) {\r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n    const eventHandler = (page, id) => {\r\n        history.push(`/${page}/${id}`)\r\n    }\r\n    //get user data\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/user/getalluserdata/${company_id}`,\r\n            {})\r\n            .then(response => {\r\n                setUserData(response.data.data)\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n    //table col\r\n    const columns = () => [\r\n        {\r\n            title: \"id\",\r\n            field: \"user_id\",\r\n            hidden: true,\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n            editable: 'never',\r\n        },\r\n        {\r\n            title: \"Email\",\r\n            field: \"email\",\r\n            defaultSort: 'asc',\r\n        },\r\n        {\r\n            title: \"Contact Number\",\r\n            field: \"contact_number\",\r\n        },\r\n        {\r\n            title: \"Status\",\r\n            field: \"user_status\",\r\n            lookup: { 0: \"Terminated\", 1: \"Active\" }\r\n\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            align: 'left',\r\n            width: '25%',\r\n            render: rowData =>\r\n                <div className={classes.boxContainer}>\r\n                    <ModalPopup rowData={rowData} Data={userData} setData={setUserData} />\r\n                    <StyledButton text=\"Assign Role\" event={() => eventHandler('assignrole', rowData.gu_id)} />\r\n                    <StyledButton text=\"Edit Details\" event={() => eventHandler('edituser', rowData.gu_id)} />\r\n                    <StyledButton text=\"Reset Password\" event={() => eventHandler('resetpassword', rowData.gu_id)} />\r\n                </div>\r\n        }]\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div>\r\n            <Title title=\"Manage Users\" />\r\n            <TopBar pageName='Manage Users' />\r\n            <Paper className={classes.table}>\r\n                <MaterialTable\r\n                    icons={tableIcons}\r\n                    columns={columns()}\r\n                    data={userData}\r\n                    title=\"\"\r\n                    options={{\r\n                        tableLayout: \"auto\",\r\n                        draggable: false,\r\n                        headerStyle: {\r\n                            backgroundColor: colour.c3,\r\n                            borderTop: 'solid',\r\n                            borderBottom: 'solid',\r\n                            borderWidth: 2,\r\n                            color: colour.c1\r\n                        },\r\n                        rowStyle: {\r\n                            borderColor: '#ff0000'\r\n                        },\r\n                    }}\r\n                />\r\n            </Paper >\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManageUsers;\r\n","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\AssignRole\\AssignRole.js",["669","670","671","672","673","674","675"],"import { React, useState, useEffect } from 'react';\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport axios from 'axios';\r\nimport config from '../../Config.js';\r\nimport { makeStyles, Paper, IconButton, Button } from '@material-ui/core';\r\nimport { decodeToken } from 'react-jwt';\r\nimport Select from 'react-select';\r\nimport { Row } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router';\r\nimport Title from '../../Components/Title/Title'\r\n\r\n//components\r\nimport TopBar from '../../Components/TopBar/TopBar.js';\r\nimport StyledButton from '../../Components/StyledButton/StyledButton'\r\nimport colour from '../../Components/Colours/Colours'\r\n\r\n\r\nconst AssignRole = ({ match }) => {\r\n    const token = localStorage.getItem('token')\r\n    const userId = match.params.userId;\r\n    const companyId = decodeToken(token).companyId\r\n    const history = useHistory()\r\n\r\n    //states\r\n    const [allRoles, setAllRoles] = useState([])\r\n    const [userRoles, setUserRoles] = useState([])\r\n    const onChange = userRoles => setUserRoles(userRoles);\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/user/checkuser/?userId=${userId}&companyId=${companyId}`, //check if accessed user belongs to the company\r\n            {})\r\n            .then(response => {\r\n                var data = response.data\r\n                if (data.length == 0) {\r\n                    history.push('/dashboard')\r\n                    alert('User does not exist.')\r\n                }\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        axios.get(`${config.baseUrl}/u/role/getallroles/${companyId}`, // get all roles from the company\r\n            {})\r\n            .then(response => {\r\n                const rolesData = response.data.data.map(oneData => ({ value: oneData.role_id, label: oneData.name }));\r\n                setAllRoles(allRoles.concat(rolesData));\r\n                axios.get(`${config.baseUrl}/u/role/getuserrole/${userId}`, // get user roles\r\n                    {})\r\n                    .then(response => {\r\n                        var data = response.data.data\r\n                        var userRole = []\r\n                        var roles = []\r\n                        for (var i = 0; i < rolesData.length; i++) { //push all the roles from the company into array to do indexOf function\r\n                            roles.push(rolesData[i].value)\r\n                        }\r\n                        for (var i = 0; i < data.length; i++) {\r\n                            if (roles.indexOf(data[i].role_id) != -1) { //check which roles collides and set them as selected to preselect these roles\r\n                                userRole.push(rolesData[roles.indexOf(data[i].role_id)])\r\n                            }\r\n                        }\r\n                        setUserRoles(userRole) //set user roles\r\n                    }).catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n\r\n    }, [])\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n            overflow: 'hidden',\r\n            minHeight: 250\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formField: {\r\n            backgroundColor: 'black'\r\n        },\r\n        removeOutline: {\r\n            \"&:focus\": {\r\n                border: \"none\",\r\n                outline: \"none\"\r\n            }\r\n        },\r\n        btnContainer: {\r\n            marginTop: 50,\r\n            marginBottom: 20,\r\n            margin: 'auto'\r\n        }\r\n    })\r\n    const classes = useStyles()\r\n\r\n    //style for select\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' }),\r\n        control: base => ({ ...base, minHeight: 100, alignContent: 'flex-start' }),\r\n        multiValueRemove: styles => ({ ...styles, color: 'white' }),\r\n        multiValue: styles => ({ ...styles, backgroundColor: colour.c5 }),\r\n        multiValueLabel: styles => ({ ...styles, color: 'white' }),\r\n    }\r\n\r\n    //submit\r\n    const onSubmit = () => {\r\n        axios.put(`${config.baseUrl}/u/role/updateuserrole/${userId}`,\r\n            {\r\n                data: userRoles\r\n            })\r\n            .then(response => {\r\n                alert('Roles has been assigned.')\r\n                history.push(`/manageusers`);\r\n            }).catch(error => {\r\n\r\n                if (error.response.status == 500) {\r\n                    alert('err in assigning role');\r\n                }\r\n                window.location.href = '/dashboard'\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Title title=\"Assign Role\"/>\r\n            <TopBar pageName='Assign Role' />\r\n            <Paper className={classes.formContainer}>\r\n                <form className={classes.form}>\r\n                    <Select\r\n                        closeMenuOnSelect={false}\r\n                        name=\"Roles\"\r\n                        id=\"Roles\"\r\n                        styles={selectStyle}\r\n                        value={userRoles}\r\n                        options={allRoles}\r\n                        onChange={onChange}\r\n                        isMulti\r\n                        maxMenuHeight={125}\r\n                        menuPlacement=\"auto\"\r\n                    />\r\n                </form>\r\n                <Row >\r\n                    <div className={classes.btnContainer}>\r\n                        <Button onClick={() => onSubmit()} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginRight: 10, padding: 10 }}>Submit</Button>\r\n                        <Button onClick={() => history.push(`/manageusers`)} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginLeft: 10, padding: 10 }}>Cancel</Button>\r\n                    </div>\r\n                </Row>\r\n            </Paper>\r\n        </div >\r\n    );\r\n};\r\nexport default AssignRole\r\n\r\n","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\MissingPage\\MissingPage.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\ResetPassword\\ResetPassword.js",["676","677","678","679","680","681","682"],"import { React, useState } from 'react';\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport axios from 'axios';\r\nimport config from '../../Config.js';\r\nimport { makeStyles, Paper, IconButton, Button } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\r\nimport {Row} from \"react-bootstrap\"\r\nimport { decodeToken } from 'react-jwt';\r\nimport { useHistory } from 'react-router';\r\n//components\r\nimport TopBar from '../../Components/TopBar/TopBar.js';\r\nimport colour from '../../Components/Colours/Colours.js';\r\nimport Title from '../../Components/Title/Title';\r\n\r\nconst ResetPassword = ({ match }) => {\r\n    const token = localStorage.getItem('token')\r\n    const gu_id = match.params.guId;\r\n    const history = useHistory()\r\n    if (decodeToken(token).privId > 3) { \r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n            overflow: 'hidden'\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formField: {\r\n            backgroundColor: 'black'\r\n        },\r\n        removeOutline: {\r\n            \"&:focus\": {\r\n                border: \"none\",\r\n                outline: \"none\"\r\n            }\r\n        },\r\n        btnContainer: {\r\n            marginBottom: 20,\r\n            margin: 'auto'\r\n        }\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [pwType, setPwType] = useState('password')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [cmfPwType, setCmfPwType] = useState('password')\r\n\r\n    //submit\r\n    const onSubmit = () => {\r\n        if (password.length < 1) {\r\n            alert('Password should not be empty')\r\n        } else if (password != confirmPassword) {\r\n            alert('Password not matching')\r\n        } else {\r\n            axios.put(`${config.baseUrl}/u/user/resetpassword/${gu_id}`, { data: { password: password } })\r\n                .then(response => {\r\n                    alert('Password updated')\r\n                    history.push(`/manageusers`)\r\n                })\r\n                .catch(err => {\r\n                    alert('Update fail')\r\n                    console.log(err)\r\n                })\r\n        }\r\n    }\r\n\r\n    //show password\r\n    const togglePW = () => {\r\n        if (pwType == 'password') {\r\n            setPwType('text')\r\n        } else {\r\n            setPwType('password')\r\n        }\r\n    }\r\n\r\n    //show confirm password\r\n    const toggleCmfPW = () => {\r\n        if (cmfPwType == 'password') {\r\n            setCmfPwType('text')\r\n        } else {\r\n            setCmfPwType('password')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Title title=\"Reset Password\"/>\r\n            <TopBar pageName='Reset Password' />\r\n            <Paper className={classes.formContainer}>\r\n                <form className={classes.form} noValidate autoComplete=\"off\">\r\n                    {/* New Password */}\r\n                    <div className=\"form-group\" style={{ height: 'auto' }}>\r\n                        <label htmlFor=\"newPassword\">New Password</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <input\r\n                                style={{ margin: 'auto' }}\r\n                                id=\"newPassword\"\r\n                                type={pwType}\r\n                                className=\"form-control\" w\r\n                                placeholder=\"Enter new password\"\r\n                                value={password}\r\n                                onChange={(e) => { setPassword(e.target.value) }}\r\n                            />\r\n                            <IconButton onClick={() => togglePW()} className={classes.removeOutline}>\r\n                                {(pwType == 'password') && <VisibilityOff style={{ color: 'white' }} />}\r\n                                {(pwType != 'password') && <Visibility style={{ color: 'white' }} />}\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Confirm Password */}\r\n                    <div className=\"form-group\" style={{ height: 'auto' }}>\r\n                        <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <input\r\n                                style={{ margin: 'auto' }}\r\n                                id=\"confirmPassword\"\r\n                                type={cmfPwType}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Confirm Password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => { setConfirmPassword(e.target.value) }}\r\n                            />\r\n                            <IconButton onClick={() => toggleCmfPW()} className={classes.removeOutline}>\r\n                                {(cmfPwType == 'password') && <VisibilityOff style={{ color: 'white' }} />}\r\n                                {(cmfPwType != 'password') && <Visibility style={{ color: 'white' }} />}\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <Row >\r\n                    <div className={classes.btnContainer}>\r\n                        <Button onClick={() => onSubmit()} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginRight: 10 }}>Submit</Button>\r\n                        <Button onClick={() => history.push(`/manageusers`)} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginLeft: 10 }}>Cancel</Button>\r\n                    </div>\r\n                </Row>\r\n            </Paper>\r\n        </div >\r\n    );\r\n};\r\nexport default ResetPassword\r\n","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\ResetPassword\\EmailRequest.js",["683","684"],"import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport styles from './ResetPassword.module.css';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport colour from '../../Components/Colours/Colours'\r\nimport config from '../../Config.js';\r\n\r\n\r\nfunction EmailRequest() {\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm();\r\n  const [userCredential, setUserCredential] = useState({ email: \"sohwk@gmail.com\" });\r\n  const [message, setMessage] = useState({ data: '', type: '' });\r\n  const [isDisplay, setIsDisplay] = useState(false);\r\n  // handle input change\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setUserCredential({\r\n      ...userCredential,\r\n      [name]: value\r\n    })\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    console.log(userCredential.email);\r\n    axios.post(`${config.baseUrl}/auth/resetPasswordEmail`, { email: userCredential.email })\r\n      .then(response => {\r\n        setMessage({\r\n          data: 'Your email has been sent. Please check your email for link to reset your password.',\r\n          type: 'alert-success'\r\n        });\r\n        setIsDisplay(true);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        setMessage({\r\n          data: 'Something went wrong. Please try again later.',\r\n          type: 'alert-danger'\r\n        });\r\n        setIsDisplay(true);\r\n      })\r\n    // history.push(`/TokenInput`)\r\n  }\r\n\r\n  return (\r\n    <div className={`${styles.bg}`}>\r\n      <div className={`container-fluid d-flex align-items-center justify-content-center h-100`}>\r\n        <div className={`${styles.loginFormContainer} my-auto`}>\r\n\r\n          <fieldset className=\"border p-3 rounded\">\r\n\r\n            {isDisplay && message && (\r\n              <div\r\n                className={`alert fade show d-flex ${message.type}`}\r\n                role=\"alert\" >\r\n                {message.data}\r\n                <span\r\n                  aria-hidden=\"true\"\r\n                  className=\"ml-auto cursor-pointer\"\r\n                  onClick={() => setMessage(null)} >\r\n                  &times;\r\n                </span>\r\n              </div>\r\n            )}\r\n\r\n            <legend className={`border rounded p-1 text-center`} >\r\n             Request Email\r\n            </legend>\r\n            <hr />\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              <Form.Group className=\"my-4\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  defaultValue={userCredential.email}\r\n                  onChange={e => handleInputChange(e)}\r\n                  {...register(\"email\", { required: true })} />\r\n              </Form.Group>\r\n              <hr />\r\n\r\n              <Button\r\n                onClick={() => onSubmit()}\r\n                style={{\r\n                  backgroundColor: colour.c5,\r\n                  color: colour.c1,\r\n                  width: '100%',\r\n                }}\r\n                className=\"mt-4 w-100\">\r\n                Reset\r\n              </Button>\r\n\r\n            </Form>\r\n          </fieldset>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmailRequest;","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\ManageRoles\\MangeRoles.js",["685","686"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, Paper, Button } from '@material-ui/core';\r\nimport colour from '../../Components/Colours/Colours'\r\nimport StyledButton from '../../Components/StyledButton/StyledButton'\r\nimport Title from '../../Components/Title/Title'\r\nimport axios from 'axios';\r\nimport config from '../../Config.js';\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport { decodeToken } from \"react-jwt\";\r\nimport { useHistory } from 'react-router';\r\n//table\r\nimport MaterialTable from 'material-table'\r\nimport tableIcons from '../../Components/MUITableIcons/material.table.icons'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    //local style\r\n    table: {\r\n        padding: 5,\r\n        backgroundColor: colour.c3,\r\n        boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n        \"& > *\": {\r\n            backgroundColor: colour.c3,\r\n            color: colour.c1 + '!important',\r\n            boxShadow: \" 0 0 0\"\r\n        },\r\n        \"& th > span\": { color: colour.c1 + '!important' },\r\n        // \"& svg\": { color: colour.c1 + '!important' },\r\n        \"& svg\": { fill: colour.c1 },\r\n        \"& div\": { color: colour.c1, borderBottom: colour.c1 + '!important' }\r\n    },\r\n    boxContainer: {\r\n        \"& > button\": {\r\n            marginRight: 10,\r\n            marginBottom: 5,\r\n            marginTop: 5\r\n        }\r\n    },\r\n    btnContainer: {\r\n        backgroundColor: colour.c4,\r\n        paddingBottom: 10,\r\n        float: 'right'\r\n    },\r\n    btn: {\r\n        backgroundColor: colour.c5,\r\n        color: colour.c1,\r\n        '&:hover': {\r\n            backgroundColor: colour.c5,\r\n        }\r\n\r\n    }\r\n})\r\n\r\nconst ManageRoles = () => {\r\n    const token = localStorage.getItem('token')\r\n    const company_id = decodeToken(token).companyId\r\n    const [Data, setData] = useState();\r\n    const history = useHistory();\r\n    if (decodeToken(token).privId > 3) {\r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n    const eventHandler = (page, id) => {\r\n        history.push(`/${page}/${id}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/role/getallroles/${company_id}`,\r\n            {})\r\n            .then(response => {\r\n                setData(response.data.data)\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, []);//End of useEffect({function code,[]})\r\n\r\n    const columns = () => [\r\n        {\r\n            title: \"id\",\r\n            field: \"role_id\",\r\n            hidden: true,\r\n            defaultSort: 'asc',\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            field: \"name\",\r\n            editable: 'never',\r\n        },\r\n        {\r\n            title: \"Description\",\r\n            field: \"description\",\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            align: 'center',\r\n            render: rowData => <StyledButton text=\"Edit Details\" event={() => eventHandler('editrole', rowData.role_id)} />\r\n        },\r\n\r\n    ];\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div>\r\n            <Title title= \"Manage Role Rights\"/>\r\n            <TopBar pageName='Manage Role Rights' />\r\n            <Paper className={classes.table}>\r\n                <MaterialTable\r\n\r\n                    icons={tableIcons}\r\n                    columns={columns()}\r\n                    data={Data}\r\n                    title=\"\"\r\n                    options={{\r\n                        tableLayout: \"auto\",\r\n                        draggable: false,\r\n                        headerStyle: {\r\n                            backgroundColor: colour.c3,\r\n                            borderTop: 'solid',\r\n                            borderBottom: 'solid',\r\n                            borderWidth: 2,\r\n                            color: colour.c1\r\n                        },\r\n                        rowStyle: {\r\n                            borderColor: '#ff0000'\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Paper >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManageRoles;","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\ResetPassword\\ResetPasswordV2.js",["687","688","689","690","691"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport styles from './ResetPassword.module.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useParams } from \"react-router\";\r\n\r\nimport colour from '../../Components/Colours/Colours'\r\nimport config from '../../Config.js';\r\n\r\nfunction ResetPasswordV2() {\r\n    let { token } = useParams();\r\n    const history = useHistory();\r\n    const [userCredential, setUserCredential] = useState({ password: \"\", confirmPassword: \"\" });\r\n    const [message, setMessage] = useState({ data: '', type: '' });\r\n    const { register, handleSubmit } = useForm();\r\n    const [isDisplay, setIsDisplay] = useState(false);\r\n\r\n    console.log(token);\r\n\r\n    // handle input change\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        setUserCredential({\r\n            ...userCredential,\r\n            [name]: value\r\n        })\r\n\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        if (userCredential.password == \"\" && userCredential.confirmPassword == \"\") {\r\n            setMessage({\r\n                data: 'Please fill in your password.',\r\n                type: 'alert-danger'\r\n            });\r\n            setIsDisplay(true)\r\n            alert(\"Please fill in your password\");\r\n        }\r\n        else if (userCredential.password != userCredential.confirmPassword) {\r\n            setMessage({\r\n                data: 'Password does not match. Please try again',\r\n                type: 'alert-danger'\r\n            });\r\n            setIsDisplay(true)\r\n            alert(\"Password does not match\");\r\n        }\r\n        else {\r\n            axios.put(`${config.baseUrl}/auth/resetPassword`, {\r\n                password: userCredential.password\r\n            }, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n                .then(response => {\r\n                    let records = response.data.message\r\n                    console.log(response)\r\n                    console.log(records);\r\n                    setMessage({\r\n                        data: 'Your password reset is successful.',\r\n                        type: 'alert-success'\r\n                    });\r\n                    setIsDisplay(true);\r\n                    alert(\"Reset successful\");\r\n                    history.push(\"/Login\");\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    setMessage({\r\n                        data: 'Something went wrong. Please try again.',\r\n                        type: 'alert-danger'\r\n                    });\r\n                    setIsDisplay(true);\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`${styles.bg}`}>\r\n            <div className={`container-fluid d-flex align-items-center justify-content-center h-100`}>\r\n                <div className={`${styles.loginFormContainer} my-auto`}>\r\n                    <fieldset className=\"border p-3 rounded\">\r\n\r\n                        {isDisplay && message && (\r\n                            <div\r\n                                className={`alert fade show d-flex ${message.type}`}\r\n                                role=\"alert\" >\r\n                                {message.data}\r\n                                <span\r\n                                    aria-hidden=\"true\"\r\n                                    className=\"ml-auto cursor-pointer\"\r\n                                    onClick={() => setMessage(null)} >\r\n                                    &times;\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n\r\n                        <legend className={` border rounded p-1 text-center`} >\r\n                            Reset Password\r\n                        </legend>\r\n                        <hr />\r\n                        <Form onSubmit={handleSubmit(onSubmit)}>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    onChange={e => handleInputChange(e)}\r\n                                    {...register(\"password\", { required: true })} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicConfirmPassword\">\r\n                                <Form.Label>Confirm Password</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"confirmPassword\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    onChange={e => handleInputChange(e)}\r\n                                    {...register(\"confirmPassword\", { required: true })}\r\n                                />\r\n                            </Form.Group>\r\n                            <hr />\r\n                            <Button onClick={() => onSubmit()}\r\n                                style={{\r\n                                    backgroundColor: colour.c5,\r\n                                    color: colour.c1,\r\n                                    width: '100%',\r\n                                }}\r\n                                className=\"w-100\">\r\n                                Reset Password\r\n                            </Button>\r\n\r\n                        </Form>\r\n                    </fieldset>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ResetPasswordV2;","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\Profile\\Profile.js",["692","693","694"],"import StyledButton from \"../../Components/StyledButton/StyledButton\";\r\nimport { makeStyles, Paper } from '@material-ui/core';\r\nimport { useHistory } from \"react-router\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport Title from '../../Components/Title/Title'\r\nimport colour from \"../../Components/Colours/Colours\";\r\nimport { Row } from \"react-bootstrap\";\r\nconst Profile = () => {\r\n    const history = useHistory();\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            margin: 'auto',\r\n            height: \"auto\",\r\n            backgroundColor: colour.c1,\r\n            boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n            padding: '15px 15px 1px 15px',\r\n            borderRadius: 5,\r\n            marginBottom: 15\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n    return (\r\n        <>\r\n            <Title title=\"Profile\" />\r\n            <TopBar pageName='Profile' />\r\n            <div className={classes.root}>\r\n                <Row style={{ margin: 20 }}>\r\n                    <div style={{ margin: 'auto' }}>\r\n                        <StyledButton text=\"Edit Profile\" event={() => { history.push('/editprofile') }} />\r\n                        <StyledButton text=\"Change Password\" event={() => { history.push('/changepassword') }} style={{ marginLeft: 20 }} />\r\n                        <StyledButton text=\"Update Payment Method\" event={() => { history.push('/paymentmethod') }} style={{ marginLeft: 20 }} />\r\n                    </div>\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\EditRole\\EditRole.js",["695","696","697","698","699","700","701","702"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Select from 'react-select'\r\nimport { Paper, makeStyles, Button } from '@material-ui/core';\r\nimport { decodeToken } from \"react-jwt\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Row } from 'react-bootstrap';\r\nimport config from '../../Config';\r\nimport colour from '../../Components/Colours/Colours';\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport Title from '../../Components/Title/Title'\r\n\r\n\r\n\r\nconst EditRole = ({ match }) => {\r\n    const { register, handleSubmit, errors, watch, setValue } = useForm();\r\n    const history = useHistory();\r\n    const token = localStorage.getItem('token')\r\n    const company_id = decodeToken(token).companyId\r\n    const role_id = match.params.roleId;\r\n    if (decodeToken(token).privId > 3) {\r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n    const [Data, setData] = useState({\r\n        name: null,\r\n        description: null,\r\n        swot_rights: null,\r\n        ip_rights: null,\r\n        ror_rights: null,\r\n        qms_rights: null,\r\n        policy_rights: null,\r\n        oap_rights: null,\r\n        raa_rights: null,\r\n        scope_rights: null,\r\n        nr_rights: null,\r\n        td_rights: null,\r\n    })\r\n\r\n    const defaultValue = (data, roleData) => {\r\n        if (data == undefined) {\r\n            return roleData\r\n        }\r\n    }\r\n\r\n\r\n    const handlingOptions = [\r\n        { value: 0, label: 'No Permission' },\r\n        { value: 1, label: 'Can Edit' },\r\n        { value: 2, label: 'Can Handle' },\r\n        { value: 3, label: 'Can do both' },\r\n    ];\r\n\r\n    const options = [\r\n        { value: 0, label: 'No Permission' },\r\n        { value: 1, label: 'Can Edit' },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/role/checkrole/?roleId=${role_id}&companyId=${company_id}`,\r\n            {})\r\n            .then(response => {\r\n                var data = response.data\r\n                if (data.length == 0) {\r\n                    history.push('/dashboard')\r\n                    alert('Role does not exist.')\r\n                }\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n\r\n        axios.get(`${config.baseUrl}/u/role/getonerole/${role_id}`,\r\n            {})\r\n            .then(response => {\r\n                var data = response.data.data\r\n                setData({\r\n                    name: data[0].name,\r\n                    description: data[0].description,\r\n                    swot_rights: handlingOptions[data[0].swot_rights],\r\n                    ip_rights: handlingOptions[data[0].ip_rights],\r\n                    ror_rights: handlingOptions[data[0].ror_rights],\r\n                    qms_rights: handlingOptions[data[0].qms_rights],\r\n                    policy_rights: handlingOptions[data[0].policy_rights],\r\n                    oap_rights: handlingOptions[data[0].oap_rights],\r\n                    raa_rights: options[data[0].raa_rights],\r\n                    scope_rights: options[data[0].scope_rights],\r\n                    nr_rights: options[data[0].nr_rights],\r\n                    td_rights: options[data[0].td_rights],\r\n                })\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }, []);//End of useEffect({function code,[]})\r\n\r\n    // Handle the form submit of role form\r\n    const onSubmit = (data, e) => {\r\n        axios.put(`${config.baseUrl}/u/role/updaterolerights/${role_id}`,\r\n            {\r\n                data: Data\r\n            }\r\n        )\r\n            .then(response => {\r\n                alert('Role has been updated.')\r\n                history.push(`/manageroles`);\r\n            }).catch(error => {\r\n                if (error.response.status == 500) {\r\n                    alert(\"Error!\")\r\n                }\r\n            });\r\n    } //End of onSubmit\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n            overflow: 'hidden'\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formGroup: {\r\n            margin: 25\r\n        },\r\n        btnContainer: {\r\n            marginTop: 75,\r\n            marginBottom: 20,\r\n            margin: 'auto'\r\n        }\r\n\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Title title= \"Edit Role Rights\"/>\r\n            <TopBar pageName='Edit Role Rights' />\r\n            <Paper className={classes.formContainer}>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\">\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"nameInput\">Name</label>\r\n                        <input\r\n                            id=\"nameInput\"\r\n                            name=\"name\"\r\n                            defaultValue={Data.name}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            ref={register()}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"descriptionInput\">Description</label>\r\n                        <input\r\n                            id=\"descriptionInput\"\r\n                            name=\"description\"\r\n                            defaultValue={Data.description}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            ref={register()}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"scopeInput\">Scope Rights</label>\r\n                        <Select\r\n                            id=\"scopeInput\"\r\n                            options={options}\r\n                            name=\"raa_rights\"\r\n                            ref={register()}\r\n                            value={Data.scope_rights}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    scope_rights: value\r\n                                }))\r\n                            }}\r\n                            styles={selectStyle}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"nrInput\">Normative References Rights</label>\r\n                        <Select\r\n                            id=\"nrInput\"\r\n                            options={options}\r\n                            name=\"nr_rights\"\r\n                            ref={register()}\r\n                            value={Data.nr_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    nr_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"tdInput\">Terms and Definitions</label>\r\n                        <Select\r\n                            id=\"tdInput\"\r\n                            options={options}\r\n                            name=\"td_rights\"\r\n                            ref={register()}\r\n                            value={Data.td_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    td_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"sowtInput\">SWOT Analysis Rights</label>\r\n                        <Select\r\n                            options={handlingOptions}\r\n                            id=\"swotInput\"\r\n                            name=\"swot_rights\"\r\n                            ref={register()}\r\n                            value={Data.swot_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    swot_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"ipInput\">Interested Parties Rights</label>\r\n                        <Select\r\n                            id=\"ipInput\"\r\n                            options={handlingOptions}\r\n                            name=\"ip_rights\"\r\n                            ref={register()}\r\n                            value={Data.ip_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    ip_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"qmsInput\">Scope of QMS Rights</label>\r\n                        <Select\r\n                            id=\"qmsInput\"\r\n                            options={handlingOptions}\r\n                            name=\"qms_rights\"\r\n                            ref={register()}\r\n                            value={Data.qms_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    qms_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"policyInput\">Policy Rights</label>\r\n                        <Select\r\n                            id=\"policyInput\"\r\n                            options={handlingOptions}\r\n                            name=\"policy_rights\"\r\n                            ref={register()}\r\n                            value={Data.policy_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    policy_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"raaInput\">Responsibility & Authority Rights</label>\r\n                        <Select\r\n                            id=\"raaInput\"\r\n                            options={options}\r\n                            name=\"raa_rights\"\r\n                            ref={register()}\r\n                            value={Data.raa_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    raa_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"rorInput\">Register of Risk and Opportunities Rights</label>\r\n                        <Select\r\n                            id=\"rorInput\"\r\n                            options={handlingOptions}\r\n                            name=\"ror_rights\"\r\n                            ref={register()}\r\n                            value={Data.ror_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    ror_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <label htmlFor=\"oapInput\">Objective Achievement Rights</label>\r\n                        <Select\r\n                            id=\"oapInput\"\r\n                            options={handlingOptions}\r\n                            name=\"oap_rights\"\r\n                            ref={register()}\r\n                            value={Data.oap_rights}\r\n                            styles={selectStyle}\r\n                            onChange={(value) => {\r\n                                setData(prevState => ({\r\n                                    ...prevState,\r\n                                    oap_rights: value\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <Row >\r\n                        <div className={classes.btnContainer}>\r\n                            <Button type=\"submit\" style={{ backgroundColor: colour.c5, color: colour.c1, marginRight: 10, padding: 10 }}>Submit</Button>\r\n                            <Button onClick={() => history.push(`/manageroles`)} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginLeft: 10, padding: 10 }}>Cancel</Button>\r\n                        </div>\r\n                    </Row>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditRole;","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\Register\\Register.js",["703","704","705","706","707","708","709","710","711"],"import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport countryList from 'react-select-country-list'\r\nimport { isValidPhoneNumber } from \"react-phone-number-input\";\r\nimport colour from '../../Components/Colours/Colours';\r\nimport { makeStyles, Button, Paper } from '@material-ui/core';\r\nimport Select from 'react-select';\r\nimport axios from 'axios';\r\nimport config from '../../Config';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { decodeToken } from 'react-jwt';\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Title from '../../Components/Title/Title';\r\n\r\nconst Register = ({ match }) => {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, control, formState: { errors }, watch } = useForm();\r\n\r\n    const token = match.params.token;\r\n    const email = decodeToken(token).email\r\n    const company_id = decodeToken(token).company_id\r\n    const priv_id = decodeToken(token).priv_id\r\n    const key = decodeToken(token).key\r\n\r\n    const countryOptions = useMemo(() => countryList().getData(), [])\r\n\r\n    const [userData, setUserData] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: email,\r\n        contact: \"\",\r\n        country: \"\",\r\n        state: \"\",\r\n        street: \"\",\r\n        postalcode: \"\",\r\n        priv_id: priv_id,\r\n        company_id: company_id,\r\n        key: key,\r\n    })\r\n\r\n    useEffect(() => { \r\n        axios.post(`${config.baseUrl}/u/user/checkemailandkey/`, //Check with database to see if param is a valid\r\n          {\r\n            data: {\r\n              email: email,\r\n              key: key\r\n            }\r\n          })\r\n          .then(response => {\r\n            console.log(response.data)\r\n            if (response.data.length == 0) { \r\n              alert('This invitation link have expired or does not exist')\r\n              window.location.assign('/login')\r\n            }\r\n          }).catch(error => {\r\n            if (error.response.status == 500) {\r\n              console.log(error);\r\n            }\r\n          });\r\n      },[])\r\n\r\n    const privOptions = [\r\n        { value: 2, label: 'Super Admin' },\r\n        { value: 3, label: 'Admin' },\r\n        { value: 4, label: 'User' }\r\n    ]\r\n\r\n    const phoneValidation = (value) => {\r\n        if (value == \"\") {\r\n            return false\r\n        }\r\n        else {\r\n            return isValidPhoneNumber('+' + value.toString())\r\n\r\n        }\r\n    }\r\n    const onSubmit = (data, e) => {\r\n        data.country = userData.country\r\n        data.contact = userData.contact\r\n        data.email = userData.email\r\n        data.company_id = userData.company_id\r\n        data.priv_id = userData.priv_id\r\n        data.key = userData.key\r\n        axios.post(`${config.baseUrl}/u/user/createuser`, { data })\r\n            .then(response => {\r\n                window.location.assign('/login')\r\n                alert('Successfuly Created. You can now login.')\r\n            }).catch(error => {\r\n                if (error.response.status == 500) {\r\n                    alert('error')\r\n                }\r\n                if (error.response.status == 401) {\r\n                    alert('Invitation Link has expired.')\r\n                }\r\n            })\r\n    }// End of onSubmit\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formField: {\r\n            backgroundColor: 'black'\r\n        },\r\n        btnContainer: {\r\n            marginTop: 20,\r\n            marginBottom: 50,\r\n            margin: 'auto'\r\n        }\r\n\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Title title=\"Register\"/>\r\n            <TopBar pageName='Register' />\r\n            <Paper className={classes.formContainer}>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"emailInput\">Email</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"emailInput\"\r\n                            defaultValue={userData.email}\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter email\"\r\n                            disabled\r\n                            placeholder=\"Enter email\"\r\n                            ref={register({\r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                    message: \"Invalid email address\"\r\n                                },\r\n                                required: {\r\n                                    type: \"email\",\r\n                                    value: true,\r\n                                    message: 'Please enter your email.',\r\n                                },\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"firstNameInput\">First Name</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"firstNameInput\"\r\n                            name=\"firstName\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter first name\"\r\n                            placeholder=\"Enter first name\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter your first name.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"firstName\"] && (\r\n                            <p className=\"error-message\">Please enter first name</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastNameInput\">Last Name</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"lastNameInput\"\r\n                            name=\"lastName\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter last name\"\r\n                            placeholder=\"Enter last name\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter your last name.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"lastName\"] && (\r\n                            <p className=\"error-message\">Please enter last name</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"passwordInput\">Password</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"passwordInput\"\r\n                            placeholder=\"Enter password\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter password',\r\n                                },\r\n                                minLength: {\r\n                                    value: 6,\r\n                                    message: 'Minimum 5 characters are allowed',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"password\"] && (\r\n                            <p className=\"error-message\">Password length must be a minimum of 5 characters</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"confirmPasswordInput\">Confirm Password</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"confirmPassword\"\r\n                            className=\"form-control\"\r\n                            id=\"confirmPasswordInput\"\r\n                            placeholder=\"Enter confirm password\"\r\n                            ref={register({\r\n                                validate: (value) => value === watch('password') || \"Passwords don't match.\",\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter password',\r\n                                },\r\n                                minLength: {\r\n                                    value: 5,\r\n                                    message: 'Minimum 5 characters are allowed',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"confirmPassword\"] && (\r\n                            <p className=\"error-message\">Field is empty or password does not match</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"contactInput\">Contact Number</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <Controller\r\n                            name=\"contact\"\r\n                            control={control}\r\n                            rules={{\r\n                                validate: (value) => phoneValidation(userData.contact)\r\n                            }}\r\n                            render={() => (\r\n                                <PhoneInput\r\n                                    dropdownStyle={{ 'color': \"black\" }}\r\n                                    enableSearch\r\n                                    onChange={e => setUserData(prevState => ({\r\n                                        ...prevState,\r\n                                        contact: e\r\n                                    }))}\r\n                                    name=\"contact\"\r\n                                    country=\"sg\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        {errors[\"contact\"] && (\r\n                            <p className=\"error-message\">Invalid Phone Number</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"countryInput\">Select Country</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <Select options={countryOptions}\r\n                            styles={selectStyle}\r\n                            name=\"country\"\r\n                            register={register}\r\n                            onChange={e => setUserData(prevState => ({\r\n                                ...prevState,\r\n                                country: e\r\n                            }))}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"stateInput\">State</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"stateInput\"\r\n                            name=\"state\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter state\"\r\n                            placeholder=\"Enter state\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter state.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"state\"] && (\r\n                            <p className=\"error-message\">Please enter your state</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"streetInput\">Street</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"streetInput\"\r\n                            name=\"street\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter street\"\r\n                            placeholder=\"Enter street\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter street.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"street\"] && (\r\n                            <p className=\"error-message\">Please enter your street</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"postalcodeInput\">Postal Code</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"postalcodeInput\"\r\n                            name=\"postalcode\"\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter postal code\"\r\n                            placeholder=\"Enter postal code\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter postal code.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"postalcode\"] && (\r\n                            <p className=\"error-message\">Please enter your postal code</p>\r\n                        )}\r\n                    </div>\r\n                    <Row >\r\n                        <div className={classes.btnContainer}>\r\n                            <Button type=\"submit\" style={{ backgroundColor: colour.c5, color: colour.c1, marginRight: 10, padding: 10 }}>Submit</Button>\r\n                            <Button onClick={() => history.push(`/manageusers`)} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginLeft: 10, padding: 10 }}>Cancel</Button>\r\n                        </div>\r\n                    </Row>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\nexport default Register;\r\n","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\Company\\Company.js",["712","713","714","715","716","717","718","719"],"import React, { useState, useMemo, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport countryList from 'react-select-country-list'\r\nimport Select from 'react-select';\r\nimport axios from 'axios';\r\nimport config from '../../Config';\r\nimport Title from '../../Components/Title/Title'\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport { decodeToken } from \"react-jwt\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { Row } from 'react-bootstrap'\r\n\r\n//import Components\r\nimport colour from '../../Components/Colours/Colours'\r\nimport TopBar from '../../Components/TopBar/TopBar'\r\nimport StyledButton from '../../Components/StyledButton/StyledButton'\r\n\r\n\r\n\r\nconst Company = () => {\r\n    const token = localStorage.getItem('token')\r\n    const company_id = decodeToken(token).companyId\r\n    const { register, handleSubmit, control, errors } = useForm()\r\n    const history = useHistory();\r\n    if (decodeToken(token).privId != 2) {\r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n    const countryOptions = useMemo(() => countryList().getData(), [])\r\n    //States\r\n    const [contactValid, setContactValid] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const [Data, setData] = useState({\r\n        name: null,\r\n        description: null,\r\n        email: null,\r\n        contact_number: null,\r\n        postal_code: null,\r\n        state: null,\r\n        street: null,\r\n    })\r\n\r\n    //regex\r\n    const regex = new RegExp(/65[6|8|9]\\d{7}/g)\r\n\r\n    //Styles\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n            color: colour.c1,\r\n            borderRadius: \"5px\",\r\n            boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formField: {\r\n            marginBottom: 30,\r\n        },\r\n        btnContainer: {\r\n            marginTop: 20,\r\n            marginBottom: 20,\r\n            margin: 'auto'\r\n        },\r\n        errorMessage: {\r\n            color: colour.error\r\n        }\r\n\r\n    })\r\n    const classes = useStyles()\r\n\r\n    //Select Style\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/company/getcompanydata/${company_id}`,\r\n        )\r\n            .then(response => {\r\n                let data = response.data[0]\r\n                for (var i = 0; i < countryOptions.length; i++) {\r\n                    if (countryOptions[i].label === data.country) {\r\n                        setCountry(countryOptions[i])\r\n                    }\r\n                }\r\n                setData({\r\n                    name: data.name,\r\n                    description: data.description,\r\n                    email: data.email,\r\n                    contact_number: data.contact_number.toString(),\r\n                    state: data.state,\r\n                    street: data.street,\r\n                    postal_code: data.postal_code\r\n                })\r\n            }).catch(error => {\r\n                console.log(error)\r\n                alert('Error when submitting, please try again.')\r\n            });\r\n    }, []);\r\n\r\n    //Handle the form submit of Registration form\r\n    const onSubmit = (data) => {\r\n        //validate contact\r\n        if (Data.contact_number == '') {\r\n            console.log('empty')\r\n            setContactValid('empty')\r\n            return\r\n        } else if (regex.test(Data.contact_number) == true) {\r\n            console.log('pass')\r\n            setContactValid('pass')\r\n        } else {\r\n            console.log('fail')\r\n            setContactValid('fail')\r\n            return\r\n        }\r\n        data.contact_number = Data.contact_number\r\n        data.country = country\r\n        axios.put(`${config.baseUrl}/u/company/updatecompany/${company_id}`,\r\n            { data }\r\n        )\r\n            .then(response => {\r\n                alert('Submit Ok')\r\n                alert('Successfully Updated')\r\n                history.push(`/dashboard`);\r\n            }).catch(error => {\r\n                console.log(error)\r\n                alert('Error when submitting, please try again.')\r\n            });\r\n    }// End of onSubmit\r\n    https://stackoverflow.com/questions/62574713/react-form-hooks-how-to-validate-select-option\r\n    console.log(Data)\r\n    return (\r\n        <div>\r\n            <TopBar pageName=\"Company\" />\r\n            <Title title=\"Company\"></Title>\r\n            <div className={classes.formContainer} >\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={classes.formField}>\r\n                        <label htmlFor=\"name\">Company Name</label>\r\n                        <input\r\n                            name=\"name\"\r\n                            type='text'\r\n                            defaultValue={Data.name}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Name\"\r\n                            ref={register({ required: { value: true, message: \"Please input company name\" } })}\r\n                        />\r\n                        {errors.name && <p className={classes.errorMessage}>{errors.name.message}</p>}\r\n                    </div>\r\n\r\n                    <div className={classes.formField}>\r\n                        <label htmlFor=\"description\">Company Description</label>\r\n                        <input\r\n                            name=\"description\"\r\n                            className=\"form-control\"\r\n                            type='text'\r\n                            defaultValue={Data.description}\r\n                            placeholder=\"Enter Name\"\r\n                            ref={register({ required: { value: true, message: \"Please input company name\" } })}\r\n                        />\r\n                        {errors.description && <p className={classes.errorMessage}>{errors.description.message}</p>}\r\n                    </div>\r\n\r\n                    <div className={classes.formField}>\r\n                        <label htmlFor=\"email\">Company Email</label>\r\n                        <input\r\n                            name=\"email\"\r\n                            className=\"form-control\"\r\n                            type='email'\r\n                            defaultValue={Data.email}\r\n                            placeholder=\"Enter Email\"\r\n                            ref={register({ required: { value: true, message: \"Please input company name\" } })}\r\n                        />\r\n                        {errors.email && <p className={classes.errorMessage}>{errors.email.message}</p>}\r\n                    </div>\r\n\r\n                    <div className={classes.formField}>\r\n                        <label htmlFor=\"contact\">Company Contact Number</label>\r\n                        <Controller\r\n                            name=\"contact\"\r\n                            control={control}\r\n                            render={() => (\r\n                                <PhoneInput\r\n                                    dropdownStyle={{ 'color': \"black\" }}\r\n                                    enableSearch\r\n                                    value={Data.contact_number}\r\n                                    onChange={e => setData(prevState => ({\r\n                                        ...prevState,\r\n                                        contact_number: e\r\n                                    }))}\r\n                                    name=\"contact\"\r\n                                    country=\"sg\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        {contactValid == 'empty' && <p className={classes.errorMessage}>Please input company contact number</p>}\r\n                        {contactValid == 'fail' && <p className={classes.errorMessage}>Company contact number invalid</p>}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"countryInput\">Select Country</label>\r\n                        <Select options={countryOptions}\r\n                            styles={selectStyle}\r\n                            name=\"country\"\r\n                            register={register}\r\n                            value={country}\r\n                            onChange={setCountry}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={classes.formField}>\r\n                        <label htmlFor=\"state\">State</label>\r\n                        <input\r\n                            name=\"state\"\r\n                            type='text'\r\n                            className=\"form-control\"\r\n                            defaultValue={Data.state}\r\n                            placeholder=\"Enter Name\"\r\n                            ref={register({ required: { value: true, message: \"Please input company's state\" } })}\r\n                        />\r\n                        {errors.state && <p className={classes.errorMessage}>{errors.state.message}</p>}\r\n                    </div>\r\n\r\n                    <div className={classes.formField}>\r\n                        <label htmlFor=\"street\">Street</label>\r\n                        <input\r\n                            name=\"street\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            defaultValue={Data.street}\r\n                            placeholder=\"Enter Name\"\r\n                            ref={register({ required: { value: true, message: \"Please input company's street\" } })}\r\n                        />\r\n                        {errors.street && <p className={classes.errorMessage}>{errors.street.message}</p>}\r\n                    </div>\r\n\r\n                    <div className={classes.formField}>\r\n                        <label htmlFor=\"postalcode\">Postal Code</label>\r\n                        <input\r\n                            name=\"postalcode\"\r\n                            type=\"numbers\"\r\n                            defaultValue={Data.postal_code}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Name\"\r\n                            ref={register({ required: { value: true, message: \"Please input company's postal\" } })}\r\n                        />\r\n                        {errors.postalcode && <p className={classes.errorMessage}>{errors.postalcode.message}</p>}\r\n                    </div>\r\n                    <Row>\r\n                        <div style={{ margin: 'auto' }}>\r\n                            <StyledButton text=\"Submit\" type='submit' event={() => { }} />\r\n                            <StyledButton text=\"Cancel\" event={() => { history.push('/dashboard') }} style={{ marginLeft: 20 }} />\r\n                        </div>\r\n                    </Row>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Company;","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\SendInvites\\SendInvites.js",["720","721","722","723","724","725","726","727","728","729","730"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport axios from 'axios';\r\nimport config from '../../Config';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { decodeToken } from 'react-jwt';\r\nimport { Row } from 'react-bootstrap'\r\n//import Components\r\nimport colour from '../../Components/Colours/Colours'\r\nimport TopBar from '../../Components/TopBar/TopBar'\r\nimport StyledButton from '../../Components/StyledButton/StyledButton'\r\nimport EmailChip from '../../Components/EmailChip/EmailChip';\r\nimport Title from '../../Components/Title/Title';\r\n\r\nconst SendInvites = () => {\r\n  const { register, handleSubmit, errors, control } = useForm();\r\n  const history = useHistory();\r\n  const token = localStorage.getItem('token')\r\n  if (decodeToken(token).privId > 3) {\r\n    alert('You do not have the privilege to view this page.')\r\n    history.push('/dashboard')\r\n  }\r\n  //states\r\n  const [emailValid, setEmailValid] = useState('')\r\n  const [email, setEmail] = useState({\r\n    items: [],\r\n    value: \"\",\r\n    error: null\r\n  })\r\n\r\n  const company_id = decodeToken(token).companyId\r\n  //Styles\r\n  const useStyles = makeStyles({\r\n    //local style\r\n    formContainer: {\r\n      backgroundColor: colour.c3,\r\n      color: colour.c1,\r\n      borderRadius: \"5px\",\r\n      boxShadow: \"0px 5px 5px rgba(00,00,00,0.2)\",\r\n    },\r\n    form: {\r\n      width: '80%',\r\n      margin: 'auto',\r\n      color: 'white',\r\n      padding: '20px'\r\n    },\r\n    formField: {\r\n      marginBottom: 30,\r\n    },\r\n    btnContainer: {\r\n      marginTop: 20,\r\n      marginBottom: 20,\r\n      margin: 'auto'\r\n    },\r\n    errorMessage: {\r\n      color: colour.error\r\n    }\r\n  })\r\n  const classes = useStyles()\r\n\r\n  const selectStyle = {\r\n    option: styles => ({ ...styles, color: 'black' }),\r\n  }\r\n\r\n  // Handle the form submit of Registration form\r\n  const onSubmit = (data) => {\r\n\r\n\r\n    if (email.items.length == 0) {\r\n      setEmailValid('empty')\r\n      return\r\n    } else {\r\n      setEmailValid('valid')\r\n    }\r\n\r\n    data = { ...data, email: email.items }\r\n    data.company_id = company_id\r\n\r\n    axios.post(`${config.baseUrl}/u/user/senduserinvite`,\r\n      data)\r\n      .then(response => {\r\n        alert('Invite has been sent')\r\n        history.push(`/dashboard`);\r\n      }).catch(error => {\r\n        console.log(error)\r\n        if (error.response.status == 500) {\r\n        }\r\n        if (error.response.status == 401) {\r\n          let string = ''\r\n          for (let i = 0; i < error.response.data.length; i++) {\r\n            string += '\\n' + error.response.data[i]\r\n          }\r\n          alert(`These these email(s) ${string}\\nhas already been registered or already exist in the invite list.`)\r\n        }\r\n      });\r\n\r\n\r\n  }// End of onSubmit\r\n\r\n  return (\r\n    <div>\r\n      <TopBar pageName=\"Send Invites\" />\r\n      <Title title=\"Send Invites\"></Title>\r\n      <div className={classes.formContainer}>\r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"emailInput\">Emails</label>\r\n            <EmailChip email={email} setEmail={setEmail} />\r\n            {emailValid == 'empty' && <p className={classes.errorMessage}>Please insert at least one email.</p>}\r\n          </div>\r\n          <Row>\r\n            <div style={{ margin: 'auto' }}>\r\n              <StyledButton text=\"Submit\" type='submit' event={() => { }} />\r\n              <StyledButton text=\"Cancel\" event={() => { history.push('/manageinvites') }} style={{ marginLeft: 20 }} />\r\n            </div>\r\n          </Row>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SendInvites;","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\ChangePassword\\ChangePassword.js",["731","732","733","734","735","736","737","738","739","740","741"],"import { React, useState } from 'react';\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport axios from 'axios';\r\nimport config from '../../Config.js';\r\nimport { makeStyles, Paper, IconButton, Button } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\r\nimport { Row } from \"react-bootstrap\"\r\nimport { decodeToken } from 'react-jwt';\r\nimport { useHistory } from 'react-router';\r\n//components\r\nimport TopBar from '../../Components/TopBar/TopBar.js';\r\nimport colour from '../../Components/Colours/Colours.js';\r\nimport Title from '../../Components/Title/Title';\r\n\r\nconst ChangePassword = () => {\r\n    const token = localStorage.getItem('token')\r\n    const user_uuid = decodeToken(token).userUUID;\r\n    const history = useHistory()\r\n    if (decodeToken(token).privId > 3) {\r\n        alert('You do not have the privilege to view this page.')\r\n        history.push('/dashboard')\r\n    }\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n            overflow: 'hidden'\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formField: {\r\n            backgroundColor: 'black'\r\n        },\r\n        removeOutline: {\r\n            \"&:focus\": {\r\n                border: \"none\",\r\n                outline: \"none\"\r\n            }\r\n        },\r\n        btnContainer: {\r\n            marginBottom: 20,\r\n            margin: 'auto'\r\n        }\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const [currentPassword, setCurrentPassword] = useState('')\r\n    const [currentPwType, setCurrentPwType] = useState('password')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [newPwType, setNewPwType] = useState('password')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [cmfPwType, setCmfPwType] = useState('password')\r\n\r\n    //submit\r\n    const onSubmit = () => {\r\n        if (newPassword.length < 1 || currentPassword.length < 1) {\r\n            alert('Field should not be empty')\r\n        } else if (newPassword != confirmPassword) {\r\n            alert('Password not matching')\r\n        } else {\r\n            console.log(user_uuid);\r\n            axios.put(`${config.baseUrl}/u/user/changepassword/${user_uuid}`, { data: { currentPassword: currentPassword, newPassword: newPassword } })\r\n                .then(response => {\r\n                    alert('Password updated')\r\n                    history.push(`/Dashboard`)\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status == 406) {\r\n                        alert('Wrong Current Password')\r\n                    }\r\n                    else {\r\n                        alert('Update fail')\r\n                        console.log(error)\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    //show current password\r\n    const toggleCurrentPW = () => {\r\n        if (currentPwType == 'password') {\r\n            setCurrentPwType('text')\r\n        } else {\r\n            setCurrentPwType('password')\r\n        }\r\n    }\r\n\r\n    //show password\r\n    const toggleNewPW = () => {\r\n        if (newPwType == 'password') {\r\n            setNewPwType('text')\r\n        } else {\r\n            setNewPwType('password')\r\n        }\r\n    }\r\n\r\n    //show confirm password\r\n    const toggleCmfPW = () => {\r\n        if (cmfPwType == 'password') {\r\n            setCmfPwType('text')\r\n        } else {\r\n            setCmfPwType('password')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Title title=\"Change Password\" />\r\n            <TopBar pageName='Change Password' />\r\n            <Paper className={classes.formContainer}>\r\n                <form className={classes.form} noValidate autoComplete=\"off\">\r\n                    {/* Current Password */}\r\n                    <div className=\"form-group\" style={{ height: 'auto' }}>\r\n                        <label htmlFor=\"newPassword\">Current Password</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <input\r\n                                style={{ margin: 'auto' }}\r\n                                id=\"currentPassword\"\r\n                                type={currentPwType}\r\n                                className=\"form-control\" w\r\n                                placeholder=\"Enter current password\"\r\n                                onChange={(e) => { setCurrentPassword(e.target.value) }}\r\n                            />\r\n                            <IconButton onClick={() => toggleCurrentPW()} className={classes.removeOutline}>\r\n                                {(currentPwType == 'password') && <VisibilityOff style={{ color: 'white' }} />}\r\n                                {(currentPwType != 'password') && <Visibility style={{ color: 'white' }} />}\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* New Password */}\r\n                    <div className=\"form-group\" style={{ height: 'auto' }}>\r\n                        <label htmlFor=\"newPassword\">New Password</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <input\r\n                                style={{ margin: 'auto' }}\r\n                                id=\"newPassword\"\r\n                                type={newPwType}\r\n                                className=\"form-control\" w\r\n                                placeholder=\"Enter new password\"\r\n                                onChange={(e) => { setNewPassword(e.target.value) }}\r\n                            />\r\n                            <IconButton onClick={() => toggleNewPW()} className={classes.removeOutline}>\r\n                                {(newPwType == 'password') && <VisibilityOff style={{ color: 'white' }} />}\r\n                                {(newPwType != 'password') && <Visibility style={{ color: 'white' }} />}\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Confirm Password */}\r\n                    <div className=\"form-group\" style={{ height: 'auto' }}>\r\n                        <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <input\r\n                                style={{ margin: 'auto' }}\r\n                                id=\"confirmPassword\"\r\n                                type={cmfPwType}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Confirm Password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => { setConfirmPassword(e.target.value) }}\r\n                            />\r\n                            <IconButton onClick={() => toggleCmfPW()} className={classes.removeOutline}>\r\n                                {(cmfPwType == 'password') && <VisibilityOff style={{ color: 'white' }} />}\r\n                                {(cmfPwType != 'password') && <Visibility style={{ color: 'white' }} />}\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <Row >\r\n                    <div className={classes.btnContainer}>\r\n                        <Button onClick={() => onSubmit()} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginRight: 10 }}>Submit</Button>\r\n                        <Button onClick={() => history.push(`/manageusers`)} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginLeft: 10 }}>Cancel</Button>\r\n                    </div>\r\n                </Row>\r\n            </Paper>\r\n        </div >\r\n    );\r\n};\r\nexport default ChangePassword\r\n","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\EditProfile\\EditProfile.js",["742","743","744","745","746","747","748","749"],"import { React, useState, useEffect, useMemo } from 'react';\r\nimport Select from 'react-select-v2';\r\nimport countryList from 'react-select-country-list'\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { isValidPhoneNumber } from \"react-phone-number-input\";\r\nimport axios from 'axios';\r\nimport { decodeToken } from 'react-jwt';\r\nimport config from '../../Config.js';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { makeStyles, Paper, Button } from '@material-ui/core';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport TopBar from '../../Components/TopBar/TopBar.js';\r\nimport colour from '../../Components/Colours/Colours.js';\r\nimport Title from '../../Components/Title/Title';\r\n\r\nconst Profile = () => {\r\n    const { register, handleSubmit, errors, control } = useForm();\r\n    const history = useHistory();\r\n    const countryOptions = useMemo(() => countryList().getData(), [])\r\n    const token = localStorage.getItem('token')\r\n    const user_id = decodeToken(token).userId\r\n    const [firstName, setFirstName] = useState()\r\n    const [lastName, setLastName] = useState()\r\n    const [email, setEmail] = useState()\r\n    const [contact, setContact] = useState()\r\n    const [country, setCountry] = useState('')\r\n    const [state, setState] = useState()\r\n    const [street, setStreet] = useState()\r\n    const [postalcode, setPostalCode] = useState()\r\n    const [privilege, setPrivilege] = useState()\r\n\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/user/getuserdata/${user_id}`,\r\n            {})\r\n            .then(response => {\r\n                var data = response.data.data[0]\r\n                for (var i = 0; i < countryOptions.length; i++) {\r\n                    if (countryOptions[i].label === data.country) {\r\n                        setCountry(countryOptions[i])\r\n                    }\r\n                }\r\n                setFirstName(data.first_name)\r\n                setLastName(data.last_name)\r\n                setEmail(data.email)\r\n                setContact(data.contact_number.toString())\r\n                setState(data.state)\r\n                setStreet(data.street)\r\n                setPostalCode(data.postal_code)\r\n                setPrivilege(privOptions[data.priv_id - 2])\r\n            }).catch(error => {\r\n                if (error.response.status == 500) {\r\n                    alert(\"Error!\")\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    const privOptions = [\r\n        { value: 2, label: 'Super Admin' },\r\n        { value: 3, label: 'Admin' },\r\n        { value: 4, label: 'User' }\r\n    ]\r\n\r\n    \r\n    const phoneValidation = (value) => {\r\n        if (value == \"\") {\r\n            return false\r\n        }\r\n        else {\r\n            return isValidPhoneNumber('+' + value.toString())\r\n\r\n        }\r\n    }\r\n    const onSubmit = (data, e) => {\r\n        if (data.country == undefined) {\r\n            data.country = country\r\n        }\r\n        data.contact = contact\r\n        data.privilege = privilege\r\n        axios.put(`${config.baseUrl}/u/user/updateuser/${user_id}`,\r\n            {\r\n                data: data\r\n            })\r\n            .then(response => {\r\n                alert('Successfuly Updated')\r\n                history.push(`/dashboard`);\r\n            }).catch(error => {\r\n\r\n                if (error.response.status == 500) {\r\n                    alert('Error!')\r\n                }\r\n\r\n                if (error.response.status == 401) {\r\n                    alert(\"This email has already been used.\")\r\n                }\r\n                // Reset the form state\r\n                e.target.reset();\r\n            });\r\n    }// End of onSubmit\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        formContainer: {\r\n            backgroundColor: colour.c3,\r\n            overflow: 'hidden'\r\n        },\r\n        form: {\r\n            width: '80%',\r\n            margin: 'auto',\r\n            color: 'white',\r\n            padding: '20px'\r\n        },\r\n        formField: {\r\n            backgroundColor: 'black'\r\n        },\r\n        btnContainer: {\r\n            marginTop: 20,\r\n            marginBottom: 20,\r\n            margin: 'auto'\r\n        }\r\n\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Title title=\"Profile\"/>\r\n            <TopBar pageName='Profile' />\r\n            <Paper className={classes.formContainer}>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"firstNameInput\">First Name</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"firstNameInput\"\r\n                            name=\"firstName\"\r\n                            defaultValue={firstName}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter first name\"\r\n                            placeholder=\"Enter first name\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter your first name.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"firstName\"] && (\r\n                            <p className=\"error-message\">Please enter first name</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastNameInput\">Last Name</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"lastNameInput\"\r\n                            name=\"lastName\"\r\n                            defaultValue={lastName}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter last name\"\r\n                            placeholder=\"Enter last name\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter your last name.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"lastName\"] && (\r\n                            <p className=\"error-message\">Please enter last name</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"emailInput\">Email</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"emailInput\"\r\n                            defaultValue={email}\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter email\"\r\n                            placeholder=\"Enter email\"\r\n                            ref={register({\r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                    message: \"Invalid email address\"\r\n                                },\r\n                                required: {\r\n                                    type: \"email\",\r\n                                    value: true,\r\n                                    message: 'Please enter your email.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"email\"] && (\r\n                            <p className=\"error-message\">Invalid Email</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"contactInput\">Contact Number</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <Controller\r\n                            name=\"contact\"\r\n                            control={control}\r\n                            rules={{\r\n                                validate: (value) => phoneValidation(contact)\r\n                            }}\r\n                            render={() => (\r\n                                <PhoneInput\r\n                                    dropdownStyle={{ 'color': \"black\" }}\r\n                                    enableSearch\r\n                                    value={contact}\r\n                                    onChange={setContact}\r\n                                    name=\"contact\"\r\n                                    country=\"sg\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        {errors[\"contact\"] && (\r\n                            <p className=\"error-message\">Invalid Phone Number</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"countryInput\">Select Country</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <Select options={countryOptions}\r\n                            styles={selectStyle}\r\n                            name=\"country\"\r\n                            register={register}\r\n                            value={country}\r\n                            onChange={setCountry}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"stateInput\">State</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"stateInput\"\r\n                            name=\"state\"\r\n                            defaultValue={state}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter state\"\r\n                            placeholder=\"Enter state\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter state.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"state\"] && (\r\n                            <p className=\"error-message\">Please enter your state</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"streetInput\">Street</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"streetInput\"\r\n                            name=\"street\"\r\n                            defaultValue={street}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter street\"\r\n                            placeholder=\"Enter street\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter street.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"street\"] && (\r\n                            <p className=\"error-message\">Please enter your street</p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"postalcodeInput\">Postal Code</label>\r\n                        <span className=\"mandatory\">*</span>\r\n                        <input\r\n                            id=\"postalcodeInput\"\r\n                            name=\"postalcode\"\r\n                            defaultValue={postalcode}\r\n                            type=\"numbers\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"Enter postal code\"\r\n                            placeholder=\"Enter postal code\"\r\n                            ref={register({\r\n                                required: {\r\n                                    value: true,\r\n                                    message: 'Please enter postal code.',\r\n                                },\r\n                            })}\r\n                        />\r\n                        {errors[\"postalcode\"] && (\r\n                            <p className=\"error-message\">Please enter your postal code</p>\r\n                        )}\r\n                    </div>\r\n                    {false && (\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"privInput\">Privilege</label>\r\n                            <Select\r\n                                options={privOptions}\r\n                                name=\"privilege\"\r\n                                ref={register()}\r\n                                value={privilege}\r\n                                onChange={setPrivilege}\r\n                                styles={selectStyle}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <Row >\r\n                        <div className={classes.btnContainer}>\r\n                            <Button type=\"submit\" style={{ backgroundColor: colour.c5, color: colour.c1, marginRight: 10, padding: 10 }}>Submit</Button>\r\n                            <Button onClick={() => history.push(`/dashboard`)} className={classes.removeOutline} style={{ backgroundColor: colour.c5, color: colour.c1, marginLeft: 10, padding: 10 }}>Cancel</Button>\r\n                        </div>\r\n                    </Row>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\Expired\\Expired.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Pages\\PaymentMethod\\PaymentMethod.js",["750","751","752","753","754"],"import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport axios from 'axios';\r\nimport { decodeToken } from 'react-jwt';\r\n\r\nimport TopBar from '../../Components/TopBar/TopBar';\r\nimport config from '../../Config';\r\nimport SetupPaymentMethod from '../../Components/SetupPaymentMethod/SetupPaymentMethod';\r\nimport visa from '../../Images/visa.png';\r\nimport amex from '../../Images/amex.png';\r\nimport mastercard from '../../Images/mastercard.png';\r\nimport StyledButton from '../../Components/StyledButton/StyledButton';\r\nimport colour from '../../Components/Colours/Colours';\r\nimport Title from '../../Components/Title/Title';\r\n\r\n\r\n// Make sure to call `loadStripe` outside of a component’s render to avoid\r\n// recreating the `Stripe` object on every render.\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY);\r\n\r\nfunction App() {\r\n  const [userData, setUserData] = useState([]);\r\n  const [userSubscription, setUserSubscription] = useState([]);\r\n  const token = localStorage.getItem('token');\r\n\r\n  const options = {\r\n    // passing the client secret obtained in step 2\r\n    clientSecret: '{{CLIENT_SECRET}}',\r\n    // Fully customizable with appearance API.\r\n    appearance: {/*...*/ },\r\n  };\r\n\r\n  const handleDeletePayment = (id) => {\r\n    console.log(id)\r\n    if (window.confirm(\"Are you sure you want to delete?\")) {\r\n      axios.delete(`${config.baseUrl}/u/stripe/paymentmethods/${id}`, { withCredentials: true })\r\n        .then(response => {\r\n          window.location.reload();\r\n        }).catch(error => {\r\n          alert(\"Something went wrong. Please try again later.\");\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  const handleDeleteSubscription = () => {\r\n    if (window.confirm(\"Are you sure you want to delete?\")) {\r\n      // /api/u/stripe/subscriptions/\r\n\r\n      axios.delete(`${config.baseUrl}/u/stripe/subscriptions`, { withCredentials: true })\r\n        .then(response => {\r\n          window.location.reload();\r\n        }).catch(error => {\r\n          alert(\"Something went wrong. Please try again later.\");\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(`${config.baseUrl}/u/stripe/paymentmethods`, { withCredentials: true })\r\n      .then(response => {\r\n        // console.log(response)\r\n        var data = response.data;\r\n        setUserData(data);\r\n      }).catch(error => {\r\n        console.log(error)\r\n      });\r\n\r\n    axios.get(`${config.baseUrl}/u/stripe/subscription`, { withCredentials: true })\r\n      .then(response => {\r\n        console.log(response.data)\r\n        var data = response.data;\r\n        setUserSubscription(data);\r\n      }).catch(error => {\r\n        console.log(error)\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Title title=\"Payment Methods\" />\r\n      <TopBar pageName=\"Payment Method\" />\r\n      <div className=\"m-2 p-3\" style={{ backgroundColor: colour.c1 }}>\r\n        <div>\r\n          <div className=\"my-3 d-flex justify-content-between\">\r\n            <h3>My Payment Methods</h3>\r\n            <SetupPaymentMethod />\r\n          </div>\r\n          <hr />\r\n          {!userData &&\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h6>\r\n                You have yet to add a payment method.\r\n              </h6>\r\n            </div>\r\n          }\r\n          {userData &&\r\n            <>\r\n              {userData.map(x => {\r\n                return (\r\n                  <>\r\n                    <div className=\"border d-flex justify-content-between mt-3\">\r\n                      <span className=\"d-flex\" >\r\n                        <div className=\"m-3\" style={{ backgroundColor: \"white\" }}>\r\n                          {x.stripe_card_type === \"visa\" && <img className=\"p-3\" src={visa} style={{ width: \"auto\", maxWidth: \"100px\" }} alt=\"Logo\"></img>}\r\n                          {x.stripe_card_type === \"amex\" && <img className=\"p-3\" src={amex} style={{ width: \"auto\", maxWidth: \"100px\" }} alt=\"Logo\"></img>}\r\n                          {x.stripe_card_type === \"mastercard\" && <img className=\"p-3\" src={mastercard} style={{ width: \"auto\", maxWidth: \"100px\" }} alt=\"Logo\"></img>}\r\n                        </div>\r\n                        <div className=\"m-3\">\r\n                          <p className=\"text-dark\"> **** **** **** {x.stripe_card_last_four_digit} </p>\r\n                          <p className=\"text-dark\">Expires {x.stripe_card_exp_date}</p>\r\n                        </div>\r\n                      </span>\r\n                      <div className=\"d-flex align-items-center m-4\">\r\n                        <StyledButton text=\"Remove\" event={() => handleDeletePayment(x.stripe_payment_method_id)} />\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )\r\n              })}\r\n            </>\r\n          }\r\n          <hr />\r\n        </div>\r\n\r\n        <div className=\"my-3\">\r\n          <h3>My Subscriptions</h3>\r\n          <hr style={{ border: \"1px solid dark\" }} />\r\n          {userSubscription.length === 0 &&\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h6>\r\n                You have no subscriptions.\r\n              </h6>\r\n            </div>\r\n          }\r\n          {userSubscription.map(x => {\r\n            return (\r\n              <>\r\n                <div className=\"border d-flex justify-content-between mt-3\">\r\n                  <span className=\" m-3\" >\r\n                    <h5>Plan: {x.name} </h5>\r\n                    <h5 >Status: {x.stripe_status}</h5>\r\n                  </span>\r\n                  <div className=\"d-flex align-items-center m-4\">\r\n                    <StyledButton text=\"Remove\" event={() => handleDeleteSubscription()} />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Utils\\Common.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\TopBar\\TopBar.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\ModalPopupPayment\\ModalPopupPayment.js",["755","756","757","758","759","760","761","762","763"],"//Libraries\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, makeStyles } from '@material-ui/core/';\r\nimport Select from 'react-select';\r\nimport axios from 'axios'\r\n\r\n//Components\r\nimport StyledButton from '../StyledButton/StyledButton';\r\nimport colour from '../Colours/Colours';\r\nimport config from '../../Config';\r\nimport visa from '../../Images/visa.png';\r\nimport amex from '../../Images/amex.png';\r\nimport mastercard from '../../Images/mastercard.png';\r\nimport SetupPaymentMethod from '../SetupPaymentMethod/SetupPaymentMethod';\r\n\r\nconst ModalPopupPayment = ({ rowData }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [userData, setUserData] = useState([]);\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [paymentId, setPaymentId] = useState();\r\n    const [selectOptions, setSelectOptions] = useState([]);\r\n    const [rowDataState, setRowDataState] = useState(rowData)\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    console.log(rowData)\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get(`${config.baseUrl}/u/stripe/paymentmethods`, { withCredentials: true })\r\n            .then(response => {\r\n                console.log(response)\r\n                var data = response.data;\r\n                setUserData(data);\r\n\r\n                const options = data.map(x =>\r\n                    ({ value: x.stripe_payment_method_id, label: \"****\" + x.stripe_card_last_four_digit + \" Expires \" + x.stripe_card_exp_date }));\r\n                setSelectOptions(options)\r\n                console.log(options)\r\n\r\n            }).catch(error => {\r\n                console.log(error)\r\n            });\r\n    }, []);\r\n\r\n    const onSubmit = () => {\r\n        console.log(rowData.name);\r\n        console.log(paymentId);\r\n\r\n        axios.post(`${config.baseUrl}/u/stripe/subscriptions/${rowData.name}`, {\r\n            paymentMethodID: paymentId.value\r\n        }, { withCredentials: true })\r\n            .then(response => {\r\n                alert(\"worked\")\r\n            })\r\n            .catch(error => {\r\n                alert(error)\r\n            })\r\n            ;\r\n    }\r\n\r\n    const handleSelectChange = (value) => {\r\n        setPaymentId(value);\r\n        console.log(paymentId)\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        titleContainer: {\r\n            backgroundColor: colour.c6,\r\n            color: 'white',\r\n        },\r\n        contentContainer: {\r\n            backgroundColor: colour.c4,\r\n            width: \"100%\",\r\n            height: \"300px\"\r\n        },\r\n        actionContainer: {\r\n            backgroundColor: colour.c3,\r\n        },\r\n        text: {\r\n            color: 'white',\r\n        },\r\n        selectContainer: {\r\n            marginTop: 30\r\n        },\r\n        disabledReasonTextField: {\r\n            marginTop: 20,\r\n            width: 545,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n                color: 'white',\r\n                borderColor: 'black'\r\n            },\r\n            \"& .MuiFormLabel-root.Mui-disabled \": {\r\n                color: 'white'\r\n            },\r\n            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: \"black\"\r\n            },\r\n        },\r\n        reasonTextField: {\r\n            marginTop: 20,\r\n            width: 545,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n                color: 'white',\r\n                borderColor: 'black'\r\n            },\r\n            \"& .MuiFormLabel-root.Mui-disabled \": {\r\n                color: 'white'\r\n            },\r\n            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: \"white\"\r\n            },\r\n        },\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' }),\r\n        menu: provided => ({ ...provided, zIndex: 9999 }),\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledButton style={{ width: \"75%\", height: \"auto\" }} text=\"Subscribe\" event={() => handleClickOpen()} />\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle className={classes.titleContainer} id=\"form-dialog-title\">Payment Method</DialogTitle>\r\n                <DialogContent className={classes.contentContainer}>\r\n                    {userData &&\r\n                        <>\r\n                            <div className=\"d-flex justify-content-center text-center\">\r\n                                <div className=\"w-100\">\r\n                                    <h6 className=\"my-3\">Choose a payment method or add one</h6>\r\n\r\n                                    <div className=\"w-100 text-left\">\r\n                                        <Select\r\n                                            options={selectOptions}\r\n                                            style={selectStyle}\r\n                                            onChange={(value) => {\r\n                                                handleSelectChange(value)\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions className={classes.actionContainer}>\r\n                    <div className=\"mr-4\">\r\n                        <SetupPaymentMethod />\r\n                    </div>\r\n                    <StyledButton text=\"Cancel\" event={() => handleClose()} />\r\n                    <StyledButton text=\"Subscribe\" event={() => onSubmit()} />\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalPopupPayment","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\Title\\Title.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\StyledButton\\StyledButton.js",[],"C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\SetupPaymentMethod\\SetupPaymentMethod.js",["764","765","766","767"],"import React, { useState, useEffect } from 'react';\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport axios from 'axios';\r\nimport config from '../../Config';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, makeStyles } from '@material-ui/core/';\r\nimport StyledButton from '../StyledButton/StyledButton';\r\nimport colour from '../Colours/Colours';\r\n\r\nconst SetupPaymentMethod = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [cardSetupError, setCardSetupError] = useState(null);\r\n    const [cardSetupProcessing, setCardSetupProcessing] = useState(false);\r\n    const [cardSetupDisabled, setCardSetupDisabled] = useState(true);\r\n    const [cardSetupSuccess, setCardSetupSuccess] = useState(false);\r\n    const [setupIntentID, setSetupIntentID] = useState(null);\r\n    const [clientSecret, setClientSecret] = useState(null);\r\n    const token = localStorage.getItem('token')\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const showHideClassName = open ? \"l-Setup-payment-method l-Setup-payment-method--show\" : \"l-Setup-payment-method l-Setup-payment-method--hidden\";\r\n\r\n    const CARD_ELEMENT_OPTIONS = {\r\n        hidePostalCode: true,\r\n        style: {\r\n            base: {\r\n                iconColor: '#F1EBEA',\r\n                color: \"#32325d\",\r\n                fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n                fontSmoothing: \"antialiased\",\r\n                fontSize: \"20px\",\r\n                \"::placeholder\": {\r\n                    color: \"#32325d\",\r\n                },\r\n                color: 'black'\r\n            },\r\n            invalid: {\r\n                color: \"#fa755a\",\r\n                iconColor: \"#fa755a\"\r\n            },\r\n\r\n        },\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        elements.getElement(CardElement).update({ disabled: true });\r\n        setCardSetupProcessing(() => true);\r\n        if (!stripe || !elements || !clientSecret || !setupIntentID) {\r\n            // Stripe.js has not yet loaded.\r\n            // Make sure to disable form submission until Stripe.js has loaded.\r\n            setCardSetupProcessing(() => false);\r\n            elements.getElement(CardElement).update({ disabled: false });\r\n            setCardSetupError(() => \"Error! Please try again later!\");\r\n        } else {\r\n            const result = await stripe.confirmCardSetup(clientSecret, {\r\n                payment_method: {\r\n                    card: elements.getElement(CardElement)\r\n                },\r\n            });\r\n\r\n            if (result.error) {\r\n                setCardSetupError(() => result.error.message);\r\n                setCardSetupProcessing(() => false);\r\n                // Display result.error.message in your UI.\r\n                elements.getElement(CardElement).update({ disabled: false });\r\n            } else {\r\n                // The setup has succeeded. Display a success message and send\r\n                // result.setupIntent.payment_method to your server to save the\r\n                // card to a Customer\r\n\r\n                // Obtain payment method id\r\n                const paymentMethodID = result.setupIntent.payment_method;\r\n\r\n                try {\r\n                    await axios.post(`${config.baseUrl}/u/stripe/paymentmethods`, {\r\n                        paymentMethodID }, { withCredentials: true });\r\n\r\n                    elements.getElement(CardElement).clear();\r\n                    setCardSetupSuccess(() => true);\r\n                    setCardSetupProcessing(() => false);\r\n                    setCardSetupError(() => null);\r\n\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    const duplicate = error.response?.data.duplicate;\r\n                    if (duplicate) {\r\n                        setCardSetupError(() => error.response.data.message);\r\n                    } else {\r\n                        setCardSetupError(() => \"Error! Please try again later!\");\r\n                    }\r\n                    setCardSetupProcessing(() => false);\r\n\r\n                    elements.getElement(CardElement).update({ disabled: false });\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleBtn = () => {\r\n        // Clear stripe element before closing\r\n        if (elements?.getElement(CardElement)) {\r\n            elements.getElement(CardElement).clear();\r\n        }\r\n        handleClose();\r\n        setCardSetupSuccess(() => false);\r\n        setCardSetupProcessing(() => false);\r\n    };\r\n\r\n    const handleCardInputChange = async (event) => {\r\n        // Listen for changes in the CardElement\r\n        // and display any errors as the customer types their card details\r\n\r\n        if (event.complete) {\r\n            setCardSetupDisabled(() => false);\r\n        } else {\r\n            setCardSetupDisabled(() => true);\r\n        }\r\n\r\n        setCardSetupError(event.error ? event.error.message : \"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        let componentMounted = true;\r\n\r\n        (async () => {\r\n            try {\r\n                if (componentMounted) {\r\n                    if (open) {\r\n                        // Retrieve client secret here\r\n                        const setupIntent = await axios.post(`${config.baseUrl}/u/stripe/setupintents`, {}, { withCredentials: true }, {\r\n                        });\r\n                        console.log(setupIntent);\r\n                        setClientSecret(() => setupIntent.data.clientSecret);\r\n                        setSetupIntentID(() => setupIntent.data.setupIntentID);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        })()\r\n\r\n        return (() => {\r\n            componentMounted = false;\r\n        });\r\n    }, [open]);\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        titleContainer: {\r\n            backgroundColor: colour.c6,\r\n            color: 'white',\r\n        },\r\n        contentContainer: {\r\n            backgroundColor: colour.c4,\r\n            height: '100px',\r\n            width: '500px'\r\n        },\r\n        textField:{\r\n            marginTop: '10px',\r\n            border: '1px solid black',\r\n            borderRadius: '5px'\r\n        },\r\n        actionContainer:{\r\n            backgroundColor: colour.c3,\r\n        }\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div>\r\n            <StyledButton text=\"Add Payment Method\" event={() => handleClickOpen()} />\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" onBackdropClick=\"false\">\r\n                <DialogTitle className={classes.titleContainer} id=\"form-dialog-title\">Add Payment Method</DialogTitle>\r\n                <DialogContent className={classes.contentContainer}>\r\n                    <form className={showHideClassName} onSubmit={(event) => handleSubmit(event)}>\r\n                        {\r\n                            cardSetupSuccess ?\r\n                                // Card set up success component\r\n                                <div>\r\n                                    <span>\r\n                                        <svg viewBox=\"0 0 24 24\">\r\n                                            <path strokeWidth=\"2\" fill=\"none\" stroke=\"#ffffff\" d=\"M 3,12 l 6,6 l 12, -12\" />\r\n                                        </svg>\r\n                                    </span>\r\n                                    <h1>Card Added Successfully!</h1>\r\n                                </div>\r\n                                :\r\n                                <div>\r\n                                    <div>\r\n                                        <div className={classes.textField}>\r\n                                            {/* Card input is rendered here */}\r\n                                            <CardElement options={CARD_ELEMENT_OPTIONS} onChange={handleCardInputChange} />\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* Show any error that happens when setting up the payment method */}\r\n                                    {cardSetupError && (\r\n                                        <div className=\"card-error\" role=\"alert\">\r\n                                            {cardSetupError}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                </div>\r\n                        }\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions className={classes.actionContainer}>\r\n                    {\r\n                        cardSetupSuccess ?\r\n                            <button type=\"button\" onClick={() => handleBtn()}>Close</button>\r\n                            :\r\n                            <div className=\"c-Setup-payment-method__Btn\">\r\n                                <button disabled={cardSetupProcessing || cardSetupDisabled} type=\"button\" className={cardSetupProcessing || cardSetupDisabled ? \"c-Btn c-Btn--disabled\" : \"c-Btn\"} onClick={(event) => handleSubmit(event)}>\r\n                                    {cardSetupProcessing ? (\r\n                                        <>\r\n                                            <span> Processing </span>\r\n                                            <Spinner animation=\"border\" role=\"status\" />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            Save\r\n                                        </>\r\n                                    )}\r\n                                </button>\r\n                                <button disabled={cardSetupProcessing} type=\"button\" onClick={() => handleBtn()}>Cancel</button>\r\n                            </div>\r\n                    }\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SetupPaymentMethod","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\EmailChip\\EmailChip.js",["768","769","770","771","772","773","774","775","776","777","778"],"import { makeStyles } from \"@material-ui/core\";\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n//components \r\nimport colour from '../Colours/Colours'\r\n\r\n//regex\r\nconst regexEmail = new RegExp(/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i)\r\nconst isValid = (emailstate, setEmail, email) => {\r\n    let error = null;\r\n\r\n    if (isInList(emailstate, email)) {\r\n        error = `${email} has already been added.`;\r\n    }\r\n\r\n    if (!isEmail(email)) {\r\n        error = `${email} is not a valid email address.`;\r\n    }\r\n\r\n    if (error) {\r\n        setEmail({\r\n            items: [...emailstate.items],\r\n            error: error\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nconst isInList = (emailstate, email) => {\r\n    return emailstate.items.includes(email);\r\n}\r\n\r\nconst isEmail = (email) => {\r\n    return regexEmail.test(email);\r\n}\r\n\r\nconst EmailChip = ({ email, setEmail }) => {\r\n    const useStyles = makeStyles({\r\n        errorMessage: {\r\n            color: colour.error,\r\n            marginBottom: 0\r\n        },\r\n        chipBox: {\r\n            backgroundColor: colour.c2,\r\n            marginTop: 15,\r\n            borderRadius: 5\r\n        },\r\n        chip: {\r\n            margin: 5\r\n        }\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const handleKeyDown = evt => {\r\n        if ([\"Enter\", \"Tab\", \",\", \" \"].includes(evt.key)) {\r\n            evt.preventDefault();\r\n\r\n            var value = email.value.trim();\r\n\r\n            if (value && isValid(email, setEmail, value)) {\r\n                setEmail({\r\n                    items: [...email.items, email.value],\r\n                    value: \"\"\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleChange = evt => {\r\n        setEmail({\r\n            value: evt.target.value,\r\n            items: [...email.items],\r\n            error: null\r\n        });\r\n    };\r\n\r\n    const handleDelete = item => {\r\n        setEmail({\r\n            items: email.items.filter(i => i !== item),\r\n            value: [...email.value]\r\n        });\r\n    };\r\n\r\n    const handlePaste = evt => {\r\n        evt.preventDefault();\r\n\r\n        var paste = evt.clipboardData.getData(\"text\");\r\n\r\n        var emails = regexEmail.test(paste);\r\n\r\n        if (emails) {\r\n            if (!email.items.includes(paste)) {\r\n                setEmail({\r\n                    items: [...email.items, paste]\r\n                });\r\n            }\r\n            else {\r\n                setEmail(prevState => ({\r\n                    ...prevState,\r\n                    error: 'Email is already keyed in'\r\n                }))\r\n            }\r\n        }\r\n        else {\r\n            setEmail(prevState => ({\r\n                ...prevState,\r\n                error: 'Email pasted is not a valid email'\r\n            }))\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                className={\"input \" + (email.error && \" has-error\")}\r\n                value={email.value}\r\n                placeholder=\"Type or paste email addresses and press `Enter`...\"\r\n                className='form-control'\r\n                onKeyDown={e => handleKeyDown(e)}\r\n                onChange={e => handleChange(e)}\r\n                onPaste={e => handlePaste(e)}\r\n            />\r\n            <div className={classes.chipBox}>\r\n                {email.items.map(item => (\r\n                    <Chip className={classes.chip} label={item} onDelete={() => handleDelete(item)} />\r\n                ))}\r\n            </div>\r\n            {email.error && <p className={classes.errorMessage}>{email.error}</p>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmailChip\r\n","C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\MUITableIcons\\material.table.icons.jsx",[],"C:\\Users\\wonna\\Documents\\GitHub\\aws_backend\\frontend\\src\\Components\\ModalPopup\\ModalPopup.js",["779","780","781"],"import React, { useState } from 'react';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, makeStyles } from '@material-ui/core/';\r\nimport Select from 'react-select';\r\nimport StyledButton from '../StyledButton/StyledButton';\r\nimport colour from '../Colours/Colours';\r\nimport axios from 'axios'\r\nimport config from '../../Config';\r\n\r\n\r\nconst ModalPopup = ({ rowData, Data, setData }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [rowDataState, setRowDataState] = useState(rowData)\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        let status = rowDataState.user_status\r\n        let reason = rowDataState.reason\r\n        if (status == 1) {\r\n            reason = \"\"\r\n            setRowDataState(prevState => ({\r\n                ...prevState,\r\n                reason: \"\"\r\n            }))\r\n        }\r\n        axios.put(`${config.baseUrl}/u/user/updateuserstatus/${rowData.user_id}`,\r\n            {\r\n                data: {\r\n                    status: status,\r\n                    reason: reason\r\n                }\r\n            })\r\n            .then(response => {\r\n                const index = Data.findIndex(obj => obj.user_id === rowData.user_id);\r\n                const changedData = [...Data];\r\n                changedData[index].user_status = rowDataState.user_status\r\n                setData(changedData)\r\n\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        handleClose()\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        //local style\r\n        titleContainer: {\r\n            backgroundColor: colour.c4,\r\n            color: 'white',\r\n        },\r\n        contentContainer: {\r\n            backgroundColor: colour.c3,\r\n            height: \"275px\",\r\n        },\r\n        actionContainer: {\r\n            backgroundColor: colour.c3,\r\n        },\r\n        text: {\r\n            color: 'white',\r\n        },\r\n        selectContainer: {\r\n            marginTop: 30\r\n        },\r\n        disabledReasonTextField: {\r\n            marginTop: 20,\r\n            width: 545,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n                color: 'white',\r\n                borderColor: 'black'\r\n            },\r\n            \"& .MuiFormLabel-root.Mui-disabled \": {\r\n                color: 'white'\r\n            },\r\n            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: \"black\"\r\n            },\r\n        },\r\n        reasonTextField: {\r\n            marginTop: 20,\r\n            width: 545,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n                color: 'white',\r\n                borderColor: 'black'\r\n            },\r\n            \"& .MuiFormLabel-root.Mui-disabled \": {\r\n                color: 'white'\r\n            },\r\n            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: \"white\"\r\n            },\r\n        },\r\n    })\r\n    const classes = useStyles()\r\n\r\n    const selectStyle = {\r\n        option: styles => ({ ...styles, color: 'black' }),\r\n        menu: provided => ({ ...provided, zIndex: 9999 }),\r\n    }\r\n\r\n    const options = [\r\n        { value: 0, label: 'Terminated' },\r\n        { value: 1, label: 'Active' },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <StyledButton text=\"Terminate/Activate\" event={() => handleClickOpen()} />\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle className={classes.titleContainer} id=\"form-dialog-title\">Terminate/Activate User</DialogTitle>\r\n                <DialogContent className={classes.contentContainer}>\r\n                    <DialogContentText className={classes.text}>\r\n                        To terminate this user, means that this user will not be able to login to their accounts.\r\n                    </DialogContentText>\r\n                    <Select className={classes.selectContainer}\r\n                        options={options}\r\n                        value={options[rowDataState.user_status]}\r\n                        onChange={e => setRowDataState(prevState => ({\r\n                            ...prevState,\r\n                            user_status: e.value\r\n                        }))}\r\n                        styles={selectStyle}\r\n                    />\r\n                    {(rowDataState.user_status == 1 &&\r\n                        <TextField className={classes.disabledReasonTextField}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            disabled\r\n                            multiline\r\n                            rows={3}\r\n                            rowsMax={3}\r\n                            label=\"Reason\"\r\n                            value=\"\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    )}\r\n                    {(rowDataState.user_status == 0 &&\r\n                        <TextField className={classes.reasonTextField}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            multiline\r\n                            rows={3}\r\n                            rowsMax={3}\r\n                            autoFocus={true}\r\n                            label=\"Reason\"\r\n                            onChange={e => setRowDataState(prevState => ({\r\n                                ...prevState,\r\n                                reason: e.target.value\r\n                            }))}\r\n                            value={rowDataState.reason}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions className={classes.actionContainer}>\r\n                    <StyledButton text=\"Cancel\" event={() => handleClose()} />\r\n                    <StyledButton text=\"Save\" event={() => onSubmit()} />\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalPopup","C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\index.js",[],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Routes.js",["782","783","784","785","786","787","788"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Config.js",[],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\Colours\\Colours.js",[],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\Header\\Header.js",["789","790","791"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\SideNav\\SideNav.js",["792","793","794","795","796","797","798","799","800","801","802","803","804","805"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\Dashboard\\Dashboard.js",["806","807","808","809"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\ManageUsers\\ManageUsers.js",["810","811"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\Login\\Login.js",["812","813","814","815"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\EditUser\\EditUser.js",["816","817","818","819","820","821","822","823","824"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\ResetPassword\\EmailRequest.js",["825","826"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\MissingPage\\MissingPage.js",[],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\ManageInvites\\ManageInvites.js",["827","828","829"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\ResetPassword\\ResetPassword.js",["830","831","832","833","834","835","836"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\ResetPassword\\ResetPasswordV2.js",["837","838","839","840","841"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\ManageRoles\\MangeRoles.js",["842","843"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\EditRole\\EditRole.js",["844","845","846","847","848","849","850","851"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\Profile\\Profile.js",["852","853","854"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\AssignRole\\AssignRole.js",["855","856","857","858","859","860","861"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\EditProfile\\EditProfile.js",["862","863","864","865","866","867","868","869"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\SendInvites\\SendInvites.js",["870","871","872","873","874","875","876","877","878","879","880"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\Register\\Register.js",["881","882","883","884","885","886","887","888","889"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\PaymentMethod\\PaymentMethod.js",["890","891","892","893","894"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\Expired\\Expired.js",[],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\Company\\Company.js",["895","896","897","898","899","900","901","902"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Pages\\ChangePassword\\ChangePassword.js",["903","904","905","906","907","908","909","910","911","912","913"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\TopBar\\TopBar.js",[],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Utils\\Common.js",[],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\StyledButton\\StyledButton.js",[],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\ModalPopupPayment\\ModalPopupPayment.js",["914","915","916","917","918","919","920","921","922"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\Title\\Title.js",[],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\ModalPopup\\ModalPopup.js",["923","924","925"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\SetupPaymentMethod\\SetupPaymentMethod.js",["926","927","928","929"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\EmailChip\\EmailChip.js",["930","931","932","933","934","935","936","937","938","939","940"],"C:\\Users\\wonna\\Documents\\AWS\\aws_pet_project\\frontend\\src\\Components\\MUITableIcons\\material.table.icons.jsx",[],{"ruleId":"941","severity":1,"message":"942","line":1,"column":28,"nodeType":"943","messageId":"944","endLine":1,"endColumn":36},{"ruleId":"941","severity":1,"message":"945","line":12,"column":8,"nodeType":"943","messageId":"944","endLine":12,"endColumn":14},{"ruleId":"941","severity":1,"message":"946","line":13,"column":10,"nodeType":"943","messageId":"944","endLine":13,"endColumn":21},{"ruleId":"941","severity":1,"message":"947","line":13,"column":23,"nodeType":"943","messageId":"944","endLine":13,"endColumn":32},{"ruleId":"941","severity":1,"message":"948","line":36,"column":8,"nodeType":"943","messageId":"944","endLine":36,"endColumn":15},{"ruleId":"941","severity":1,"message":"949","line":47,"column":11,"nodeType":"943","messageId":"944","endLine":47,"endColumn":18},{"ruleId":"941","severity":1,"message":"950","line":48,"column":11,"nodeType":"943","messageId":"944","endLine":48,"endColumn":18},{"ruleId":"941","severity":1,"message":"951","line":2,"column":54,"nodeType":"943","messageId":"944","endLine":2,"endColumn":62},{"ruleId":"941","severity":1,"message":"952","line":3,"column":52,"nodeType":"943","messageId":"944","endLine":3,"endColumn":62},{"ruleId":"941","severity":1,"message":"953","line":3,"column":64,"nodeType":"943","messageId":"944","endLine":3,"endColumn":74},{"ruleId":"941","severity":1,"message":"954","line":3,"column":76,"nodeType":"943","messageId":"944","endLine":3,"endColumn":86},{"ruleId":"941","severity":1,"message":"955","line":3,"column":88,"nodeType":"943","messageId":"944","endLine":3,"endColumn":105},{"ruleId":"941","severity":1,"message":"956","line":3,"column":124,"nodeType":"943","messageId":"944","endLine":3,"endColumn":135},{"ruleId":"941","severity":1,"message":"957","line":3,"column":137,"nodeType":"943","messageId":"944","endLine":3,"endColumn":143},{"ruleId":"941","severity":1,"message":"958","line":3,"column":145,"nodeType":"943","messageId":"944","endLine":3,"endColumn":153},{"ruleId":"941","severity":1,"message":"959","line":3,"column":155,"nodeType":"943","messageId":"944","endLine":3,"endColumn":173},{"ruleId":"941","severity":1,"message":"960","line":3,"column":175,"nodeType":"943","messageId":"944","endLine":3,"endColumn":185},{"ruleId":"941","severity":1,"message":"961","line":3,"column":187,"nodeType":"943","messageId":"944","endLine":3,"endColumn":196},{"ruleId":"941","severity":1,"message":"962","line":107,"column":11,"nodeType":"943","messageId":"944","endLine":107,"endColumn":23},{"ruleId":"941","severity":1,"message":"963","line":111,"column":11,"nodeType":"943","messageId":"944","endLine":111,"endColumn":32},{"ruleId":"964","severity":1,"message":"965","line":172,"column":31,"nodeType":"966","messageId":"967","endLine":172,"endColumn":33},{"ruleId":"941","severity":1,"message":"945","line":11,"column":8,"nodeType":"943","messageId":"944","endLine":11,"endColumn":14},{"ruleId":"941","severity":1,"message":"949","line":20,"column":9,"nodeType":"943","messageId":"944","endLine":20,"endColumn":16},{"ruleId":"941","severity":1,"message":"968","line":23,"column":10,"nodeType":"943","messageId":"944","endLine":23,"endColumn":19},{"ruleId":"941","severity":1,"message":"969","line":24,"column":10,"nodeType":"943","messageId":"944","endLine":24,"endColumn":19},{"ruleId":"941","severity":1,"message":"970","line":3,"column":22,"nodeType":"943","messageId":"944","endLine":3,"endColumn":27},{"ruleId":"941","severity":1,"message":"945","line":4,"column":8,"nodeType":"943","messageId":"944","endLine":4,"endColumn":14},{"ruleId":"941","severity":1,"message":"946","line":6,"column":10,"nodeType":"943","messageId":"944","endLine":6,"endColumn":21},{"ruleId":"941","severity":1,"message":"971","line":42,"column":9,"nodeType":"943","messageId":"944","endLine":42,"endColumn":16},{"ruleId":"941","severity":1,"message":"972","line":2,"column":29,"nodeType":"943","messageId":"944","endLine":2,"endColumn":34},{"ruleId":"973","severity":1,"message":"974","line":67,"column":8,"nodeType":"975","endLine":67,"endColumn":10,"suggestions":"976"},{"ruleId":"941","severity":1,"message":"977","line":2,"column":29,"nodeType":"943","messageId":"944","endLine":2,"endColumn":35},{"ruleId":"973","severity":1,"message":"974","line":64,"column":8,"nodeType":"975","endLine":64,"endColumn":10,"suggestions":"978"},{"ruleId":"964","severity":1,"message":"979","line":88,"column":75,"nodeType":"966","messageId":"967","endLine":88,"endColumn":77},{"ruleId":"941","severity":1,"message":"980","line":11,"column":22,"nodeType":"943","messageId":"944","endLine":11,"endColumn":26},{"ruleId":"941","severity":1,"message":"981","line":13,"column":15,"nodeType":"943","messageId":"944","endLine":13,"endColumn":18},{"ruleId":"964","severity":1,"message":"965","line":59,"column":43,"nodeType":"966","messageId":"967","endLine":59,"endColumn":45},{"ruleId":"973","severity":1,"message":"982","line":63,"column":8,"nodeType":"975","endLine":63,"endColumn":10,"suggestions":"983"},{"ruleId":"964","severity":1,"message":"965","line":72,"column":19,"nodeType":"966","messageId":"967","endLine":72,"endColumn":21},{"ruleId":"964","severity":1,"message":"965","line":81,"column":26,"nodeType":"966","messageId":"967","endLine":81,"endColumn":28},{"ruleId":"964","severity":1,"message":"965","line":95,"column":43,"nodeType":"966","messageId":"967","endLine":95,"endColumn":45},{"ruleId":"964","severity":1,"message":"965","line":99,"column":43,"nodeType":"966","messageId":"967","endLine":99,"endColumn":45},{"ruleId":"964","severity":1,"message":"965","line":314,"column":37,"nodeType":"966","messageId":"967","endLine":314,"endColumn":39},{"ruleId":"941","severity":1,"message":"984","line":5,"column":29,"nodeType":"943","messageId":"944","endLine":5,"endColumn":39},{"ruleId":"941","severity":1,"message":"985","line":14,"column":8,"nodeType":"943","messageId":"944","endLine":14,"endColumn":20},{"ruleId":"964","severity":1,"message":"965","line":33,"column":33,"nodeType":"966","messageId":"967","endLine":33,"endColumn":35},{"ruleId":"986","severity":1,"message":"987","line":54,"column":34,"nodeType":"943","messageId":"988","endLine":54,"endColumn":35},{"ruleId":"964","severity":1,"message":"979","line":55,"column":64,"nodeType":"966","messageId":"967","endLine":55,"endColumn":66},{"ruleId":"973","severity":1,"message":"989","line":67,"column":8,"nodeType":"975","endLine":67,"endColumn":10,"suggestions":"990"},{"ruleId":"964","severity":1,"message":"965","line":119,"column":43,"nodeType":"966","messageId":"967","endLine":119,"endColumn":45},{"ruleId":"964","severity":1,"message":"979","line":60,"column":29,"nodeType":"966","messageId":"967","endLine":60,"endColumn":31},{"ruleId":"964","severity":1,"message":"965","line":77,"column":20,"nodeType":"966","messageId":"967","endLine":77,"endColumn":22},{"ruleId":"964","severity":1,"message":"965","line":86,"column":23,"nodeType":"966","messageId":"967","endLine":86,"endColumn":25},{"ruleId":"964","severity":1,"message":"965","line":114,"column":42,"nodeType":"966","messageId":"967","endLine":114,"endColumn":44},{"ruleId":"964","severity":1,"message":"979","line":115,"column":42,"nodeType":"966","messageId":"967","endLine":115,"endColumn":44},{"ruleId":"964","severity":1,"message":"965","line":135,"column":45,"nodeType":"966","messageId":"967","endLine":135,"endColumn":47},{"ruleId":"964","severity":1,"message":"979","line":136,"column":45,"nodeType":"966","messageId":"967","endLine":136,"endColumn":47},{"ruleId":"941","severity":1,"message":"970","line":2,"column":22,"nodeType":"943","messageId":"944","endLine":2,"endColumn":27},{"ruleId":"941","severity":1,"message":"942","line":4,"column":17,"nodeType":"943","messageId":"944","endLine":4,"endColumn":25},{"ruleId":"941","severity":1,"message":"991","line":4,"column":27,"nodeType":"943","messageId":"944","endLine":4,"endColumn":36},{"ruleId":"941","severity":1,"message":"977","line":2,"column":29,"nodeType":"943","messageId":"944","endLine":2,"endColumn":35},{"ruleId":"973","severity":1,"message":"974","line":75,"column":8,"nodeType":"975","endLine":75,"endColumn":10,"suggestions":"992"},{"ruleId":"941","severity":1,"message":"993","line":2,"column":8,"nodeType":"943","messageId":"944","endLine":2,"endColumn":16},{"ruleId":"941","severity":1,"message":"946","line":5,"column":10,"nodeType":"943","messageId":"944","endLine":5,"endColumn":21},{"ruleId":"941","severity":1,"message":"994","line":20,"column":7,"nodeType":"943","messageId":"944","endLine":20,"endColumn":20},{"ruleId":"941","severity":1,"message":"995","line":25,"column":9,"nodeType":"943","messageId":"944","endLine":25,"endColumn":14},{"ruleId":"941","severity":1,"message":"996","line":27,"column":9,"nodeType":"943","messageId":"944","endLine":27,"endColumn":16},{"ruleId":"941","severity":1,"message":"997","line":17,"column":37,"nodeType":"943","messageId":"944","endLine":17,"endColumn":43},{"ruleId":"941","severity":1,"message":"998","line":17,"column":45,"nodeType":"943","messageId":"944","endLine":17,"endColumn":50},{"ruleId":"941","severity":1,"message":"999","line":17,"column":52,"nodeType":"943","messageId":"944","endLine":17,"endColumn":60},{"ruleId":"941","severity":1,"message":"1000","line":41,"column":11,"nodeType":"943","messageId":"944","endLine":41,"endColumn":23},{"ruleId":"964","severity":1,"message":"965","line":42,"column":18,"nodeType":"966","messageId":"967","endLine":42,"endColumn":20},{"ruleId":"964","severity":1,"message":"965","line":65,"column":33,"nodeType":"966","messageId":"967","endLine":65,"endColumn":35},{"ruleId":"973","severity":1,"message":"1001","line":94,"column":8,"nodeType":"975","endLine":94,"endColumn":10,"suggestions":"1002"},{"ruleId":"964","severity":1,"message":"965","line":107,"column":43,"nodeType":"966","messageId":"967","endLine":107,"endColumn":45},{"ruleId":"941","severity":1,"message":"980","line":2,"column":10,"nodeType":"943","messageId":"944","endLine":2,"endColumn":14},{"ruleId":"941","severity":1,"message":"981","line":16,"column":15,"nodeType":"943","messageId":"944","endLine":16,"endColumn":18},{"ruleId":"964","severity":1,"message":"965","line":55,"column":38,"nodeType":"966","messageId":"967","endLine":55,"endColumn":40},{"ruleId":"964","severity":1,"message":"965","line":60,"column":39,"nodeType":"966","messageId":"967","endLine":60,"endColumn":41},{"ruleId":"973","severity":1,"message":"1003","line":64,"column":9,"nodeType":"975","endLine":64,"endColumn":11,"suggestions":"1004"},{"ruleId":"941","severity":1,"message":"1005","line":66,"column":11,"nodeType":"943","messageId":"944","endLine":66,"endColumn":22},{"ruleId":"964","severity":1,"message":"965","line":73,"column":19,"nodeType":"966","messageId":"967","endLine":73,"endColumn":21},{"ruleId":"964","severity":1,"message":"965","line":93,"column":43,"nodeType":"966","messageId":"967","endLine":93,"endColumn":45},{"ruleId":"964","severity":1,"message":"965","line":96,"column":43,"nodeType":"966","messageId":"967","endLine":96,"endColumn":45},{"ruleId":"964","severity":1,"message":"979","line":27,"column":35,"nodeType":"966","messageId":"967","endLine":27,"endColumn":37},{"ruleId":"973","severity":1,"message":"1006","line":106,"column":8,"nodeType":"975","endLine":106,"endColumn":10,"suggestions":"1007"},{"ruleId":"964","severity":1,"message":"965","line":111,"column":33,"nodeType":"966","messageId":"967","endLine":111,"endColumn":35},{"ruleId":"964","severity":1,"message":"965","line":115,"column":52,"nodeType":"966","messageId":"967","endLine":115,"endColumn":54},{"ruleId":"1008","severity":1,"message":"1009","line":137,"column":5,"nodeType":"1010","messageId":"1011","endLine":138,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1013","line":137,"column":5,"nodeType":"943","messageId":"1014","endLine":137,"endColumn":10},{"ruleId":"964","severity":1,"message":"965","line":203,"column":39,"nodeType":"966","messageId":"967","endLine":203,"endColumn":41},{"ruleId":"964","severity":1,"message":"965","line":204,"column":39,"nodeType":"966","messageId":"967","endLine":204,"endColumn":41},{"ruleId":"941","severity":1,"message":"980","line":11,"column":22,"nodeType":"943","messageId":"944","endLine":11,"endColumn":26},{"ruleId":"941","severity":1,"message":"981","line":13,"column":15,"nodeType":"943","messageId":"944","endLine":13,"endColumn":18},{"ruleId":"964","severity":1,"message":"965","line":53,"column":43,"nodeType":"966","messageId":"967","endLine":53,"endColumn":45},{"ruleId":"973","severity":1,"message":"982","line":57,"column":8,"nodeType":"975","endLine":57,"endColumn":10,"suggestions":"1015"},{"ruleId":"964","severity":1,"message":"965","line":67,"column":19,"nodeType":"966","messageId":"967","endLine":67,"endColumn":21},{"ruleId":"964","severity":1,"message":"965","line":76,"column":26,"nodeType":"966","messageId":"967","endLine":76,"endColumn":28},{"ruleId":"964","severity":1,"message":"965","line":90,"column":43,"nodeType":"966","messageId":"967","endLine":90,"endColumn":45},{"ruleId":"964","severity":1,"message":"965","line":94,"column":43,"nodeType":"966","messageId":"967","endLine":94,"endColumn":45},{"ruleId":"941","severity":1,"message":"991","line":1,"column":27,"nodeType":"943","messageId":"944","endLine":1,"endColumn":36},{"ruleId":"941","severity":1,"message":"1016","line":4,"column":8,"nodeType":"943","messageId":"944","endLine":4,"endColumn":14},{"ruleId":"941","severity":1,"message":"1017","line":7,"column":19,"nodeType":"943","messageId":"944","endLine":7,"endColumn":29},{"ruleId":"941","severity":1,"message":"1018","line":18,"column":11,"nodeType":"943","messageId":"944","endLine":18,"endColumn":19},{"ruleId":"941","severity":1,"message":"997","line":18,"column":35,"nodeType":"943","messageId":"944","endLine":18,"endColumn":41},{"ruleId":"941","severity":1,"message":"1019","line":18,"column":43,"nodeType":"943","messageId":"944","endLine":18,"endColumn":50},{"ruleId":"941","severity":1,"message":"1020","line":63,"column":9,"nodeType":"943","messageId":"944","endLine":63,"endColumn":20},{"ruleId":"964","severity":1,"message":"965","line":71,"column":28,"nodeType":"966","messageId":"967","endLine":71,"endColumn":30},{"ruleId":"964","severity":1,"message":"965","line":88,"column":35,"nodeType":"966","messageId":"967","endLine":88,"endColumn":37},{"ruleId":"964","severity":1,"message":"965","line":90,"column":35,"nodeType":"966","messageId":"967","endLine":90,"endColumn":37},{"ruleId":"964","severity":1,"message":"965","line":111,"column":25,"nodeType":"966","messageId":"967","endLine":111,"endColumn":27},{"ruleId":"964","severity":1,"message":"979","line":62,"column":32,"nodeType":"966","messageId":"967","endLine":62,"endColumn":34},{"ruleId":"964","severity":1,"message":"965","line":72,"column":47,"nodeType":"966","messageId":"967","endLine":72,"endColumn":49},{"ruleId":"964","severity":1,"message":"965","line":86,"column":27,"nodeType":"966","messageId":"967","endLine":86,"endColumn":29},{"ruleId":"964","severity":1,"message":"965","line":95,"column":23,"nodeType":"966","messageId":"967","endLine":95,"endColumn":25},{"ruleId":"964","severity":1,"message":"965","line":104,"column":23,"nodeType":"966","messageId":"967","endLine":104,"endColumn":25},{"ruleId":"964","severity":1,"message":"965","line":131,"column":49,"nodeType":"966","messageId":"967","endLine":131,"endColumn":51},{"ruleId":"964","severity":1,"message":"979","line":132,"column":49,"nodeType":"966","messageId":"967","endLine":132,"endColumn":51},{"ruleId":"964","severity":1,"message":"965","line":151,"column":45,"nodeType":"966","messageId":"967","endLine":151,"endColumn":47},{"ruleId":"964","severity":1,"message":"979","line":152,"column":45,"nodeType":"966","messageId":"967","endLine":152,"endColumn":47},{"ruleId":"964","severity":1,"message":"965","line":172,"column":45,"nodeType":"966","messageId":"967","endLine":172,"endColumn":47},{"ruleId":"964","severity":1,"message":"979","line":173,"column":45,"nodeType":"966","messageId":"967","endLine":173,"endColumn":47},{"ruleId":"964","severity":1,"message":"965","line":24,"column":20,"nodeType":"966","messageId":"967","endLine":24,"endColumn":22},{"ruleId":"964","severity":1,"message":"965","line":129,"column":48,"nodeType":"966","messageId":"967","endLine":129,"endColumn":50},{"ruleId":"964","severity":1,"message":"965","line":141,"column":48,"nodeType":"966","messageId":"967","endLine":141,"endColumn":50},{"ruleId":"1021","severity":1,"message":"1022","line":8,"column":44,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":45,"suggestions":"1025"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":52,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":53,"suggestions":"1027"},{"ruleId":"1021","severity":1,"message":"1022","line":8,"column":68,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":69,"suggestions":"1028"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":76,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":77,"suggestions":"1029"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":85,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":86,"suggestions":"1030"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":89,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":90,"suggestions":"1031"},{"ruleId":"1021","severity":1,"message":"1022","line":8,"column":105,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":106,"suggestions":"1032"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":113,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":114,"suggestions":"1033"},{"ruleId":"1021","severity":1,"message":"1022","line":8,"column":130,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":131,"suggestions":"1034"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":138,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":139,"suggestions":"1035"},{"ruleId":"1036","severity":1,"message":"1037","line":121,"column":17,"nodeType":"1038","endLine":121,"endColumn":41},{"ruleId":"941","severity":1,"message":"1039","line":6,"column":48,"nodeType":"943","messageId":"944","endLine":6,"endColumn":65},{"ruleId":"941","severity":1,"message":"1040","line":6,"column":80,"nodeType":"943","messageId":"944","endLine":6,"endColumn":89},{"ruleId":"941","severity":1,"message":"995","line":26,"column":11,"nodeType":"943","messageId":"944","endLine":26,"endColumn":16},{"ruleId":"1041","severity":1,"message":"1042","line":45,"column":17,"nodeType":"1043","messageId":"967","endLine":45,"endColumn":22},{"ruleId":"941","severity":1,"message":"1044","line":4,"column":24,"nodeType":"943","messageId":"944","endLine":4,"endColumn":33},{"ruleId":"941","severity":1,"message":"950","line":13,"column":9,"nodeType":"943","messageId":"944","endLine":13,"endColumn":16},{"ruleId":"941","severity":1,"message":"991","line":1,"column":17,"nodeType":"943","messageId":"944","endLine":1,"endColumn":26},{"ruleId":"941","severity":1,"message":"1044","line":4,"column":24,"nodeType":"943","messageId":"944","endLine":4,"endColumn":33},{"ruleId":"964","severity":1,"message":"965","line":34,"column":37,"nodeType":"966","messageId":"967","endLine":34,"endColumn":39},{"ruleId":"964","severity":1,"message":"965","line":34,"column":77,"nodeType":"966","messageId":"967","endLine":34,"endColumn":79},{"ruleId":"964","severity":1,"message":"979","line":42,"column":42,"nodeType":"966","messageId":"967","endLine":42,"endColumn":44},{"ruleId":"941","severity":1,"message":"950","line":7,"column":11,"nodeType":"943","messageId":"944","endLine":7,"endColumn":18},{"ruleId":"941","severity":1,"message":"1045","line":8,"column":12,"nodeType":"943","messageId":"944","endLine":8,"endColumn":19},{"ruleId":"941","severity":1,"message":"1046","line":9,"column":12,"nodeType":"943","messageId":"944","endLine":9,"endColumn":23},{"ruleId":"941","severity":1,"message":"1039","line":3,"column":48,"nodeType":"943","messageId":"944","endLine":3,"endColumn":65},{"ruleId":"941","severity":1,"message":"1040","line":3,"column":80,"nodeType":"943","messageId":"944","endLine":3,"endColumn":89},{"ruleId":"941","severity":1,"message":"1047","line":11,"column":8,"nodeType":"943","messageId":"944","endLine":11,"endColumn":12},{"ruleId":"941","severity":1,"message":"1048","line":12,"column":8,"nodeType":"943","messageId":"944","endLine":12,"endColumn":12},{"ruleId":"941","severity":1,"message":"1049","line":13,"column":8,"nodeType":"943","messageId":"944","endLine":13,"endColumn":18},{"ruleId":"941","severity":1,"message":"1050","line":19,"column":12,"nodeType":"943","messageId":"944","endLine":19,"endColumn":20},{"ruleId":"941","severity":1,"message":"1051","line":19,"column":22,"nodeType":"943","messageId":"944","endLine":19,"endColumn":33},{"ruleId":"941","severity":1,"message":"1052","line":22,"column":12,"nodeType":"943","messageId":"944","endLine":22,"endColumn":24},{"ruleId":"941","severity":1,"message":"1053","line":22,"column":26,"nodeType":"943","messageId":"944","endLine":22,"endColumn":41},{"ruleId":"1054","replacedBy":"1055"},{"ruleId":"1056","replacedBy":"1057"},{"ruleId":"941","severity":1,"message":"942","line":1,"column":28,"nodeType":"943","messageId":"944","endLine":1,"endColumn":36},{"ruleId":"941","severity":1,"message":"945","line":12,"column":8,"nodeType":"943","messageId":"944","endLine":12,"endColumn":14},{"ruleId":"941","severity":1,"message":"946","line":13,"column":10,"nodeType":"943","messageId":"944","endLine":13,"endColumn":21},{"ruleId":"941","severity":1,"message":"947","line":13,"column":23,"nodeType":"943","messageId":"944","endLine":13,"endColumn":32},{"ruleId":"941","severity":1,"message":"948","line":36,"column":8,"nodeType":"943","messageId":"944","endLine":36,"endColumn":15},{"ruleId":"941","severity":1,"message":"949","line":47,"column":11,"nodeType":"943","messageId":"944","endLine":47,"endColumn":18},{"ruleId":"941","severity":1,"message":"950","line":48,"column":11,"nodeType":"943","messageId":"944","endLine":48,"endColumn":18},{"ruleId":"941","severity":1,"message":"950","line":7,"column":11,"nodeType":"943","messageId":"944","endLine":7,"endColumn":18},{"ruleId":"941","severity":1,"message":"1045","line":8,"column":12,"nodeType":"943","messageId":"944","endLine":8,"endColumn":19},{"ruleId":"941","severity":1,"message":"1046","line":9,"column":12,"nodeType":"943","messageId":"944","endLine":9,"endColumn":23},{"ruleId":"941","severity":1,"message":"951","line":2,"column":54,"nodeType":"943","messageId":"944","endLine":2,"endColumn":62},{"ruleId":"941","severity":1,"message":"952","line":3,"column":52,"nodeType":"943","messageId":"944","endLine":3,"endColumn":62},{"ruleId":"941","severity":1,"message":"953","line":3,"column":64,"nodeType":"943","messageId":"944","endLine":3,"endColumn":74},{"ruleId":"941","severity":1,"message":"954","line":3,"column":76,"nodeType":"943","messageId":"944","endLine":3,"endColumn":86},{"ruleId":"941","severity":1,"message":"955","line":3,"column":88,"nodeType":"943","messageId":"944","endLine":3,"endColumn":105},{"ruleId":"941","severity":1,"message":"956","line":3,"column":124,"nodeType":"943","messageId":"944","endLine":3,"endColumn":135},{"ruleId":"941","severity":1,"message":"957","line":3,"column":137,"nodeType":"943","messageId":"944","endLine":3,"endColumn":143},{"ruleId":"941","severity":1,"message":"958","line":3,"column":145,"nodeType":"943","messageId":"944","endLine":3,"endColumn":153},{"ruleId":"941","severity":1,"message":"959","line":3,"column":155,"nodeType":"943","messageId":"944","endLine":3,"endColumn":173},{"ruleId":"941","severity":1,"message":"960","line":3,"column":175,"nodeType":"943","messageId":"944","endLine":3,"endColumn":185},{"ruleId":"941","severity":1,"message":"961","line":3,"column":187,"nodeType":"943","messageId":"944","endLine":3,"endColumn":196},{"ruleId":"941","severity":1,"message":"962","line":107,"column":11,"nodeType":"943","messageId":"944","endLine":107,"endColumn":23},{"ruleId":"941","severity":1,"message":"963","line":111,"column":11,"nodeType":"943","messageId":"944","endLine":111,"endColumn":32},{"ruleId":"964","severity":1,"message":"965","line":172,"column":31,"nodeType":"966","messageId":"967","endLine":172,"endColumn":33},{"ruleId":"941","severity":1,"message":"945","line":11,"column":8,"nodeType":"943","messageId":"944","endLine":11,"endColumn":14},{"ruleId":"941","severity":1,"message":"949","line":20,"column":9,"nodeType":"943","messageId":"944","endLine":20,"endColumn":16},{"ruleId":"941","severity":1,"message":"968","line":23,"column":10,"nodeType":"943","messageId":"944","endLine":23,"endColumn":19},{"ruleId":"941","severity":1,"message":"969","line":24,"column":10,"nodeType":"943","messageId":"944","endLine":24,"endColumn":19},{"ruleId":"941","severity":1,"message":"970","line":3,"column":22,"nodeType":"943","messageId":"944","endLine":3,"endColumn":27},{"ruleId":"941","severity":1,"message":"945","line":4,"column":8,"nodeType":"943","messageId":"944","endLine":4,"endColumn":14},{"ruleId":"941","severity":1,"message":"946","line":6,"column":10,"nodeType":"943","messageId":"944","endLine":6,"endColumn":21},{"ruleId":"941","severity":1,"message":"971","line":42,"column":9,"nodeType":"943","messageId":"944","endLine":42,"endColumn":16},{"ruleId":"941","severity":1,"message":"977","line":2,"column":29,"nodeType":"943","messageId":"944","endLine":2,"endColumn":35},{"ruleId":"973","severity":1,"message":"974","line":64,"column":8,"nodeType":"975","endLine":64,"endColumn":10,"suggestions":"1058"},{"ruleId":"964","severity":1,"message":"979","line":88,"column":75,"nodeType":"966","messageId":"967","endLine":88,"endColumn":77},{"ruleId":"941","severity":1,"message":"980","line":11,"column":22,"nodeType":"943","messageId":"944","endLine":11,"endColumn":26},{"ruleId":"941","severity":1,"message":"981","line":13,"column":15,"nodeType":"943","messageId":"944","endLine":13,"endColumn":18},{"ruleId":"964","severity":1,"message":"965","line":59,"column":43,"nodeType":"966","messageId":"967","endLine":59,"endColumn":45},{"ruleId":"973","severity":1,"message":"982","line":63,"column":8,"nodeType":"975","endLine":63,"endColumn":10,"suggestions":"1059"},{"ruleId":"964","severity":1,"message":"965","line":72,"column":19,"nodeType":"966","messageId":"967","endLine":72,"endColumn":21},{"ruleId":"964","severity":1,"message":"965","line":81,"column":26,"nodeType":"966","messageId":"967","endLine":81,"endColumn":28},{"ruleId":"964","severity":1,"message":"965","line":95,"column":43,"nodeType":"966","messageId":"967","endLine":95,"endColumn":45},{"ruleId":"964","severity":1,"message":"965","line":99,"column":43,"nodeType":"966","messageId":"967","endLine":99,"endColumn":45},{"ruleId":"964","severity":1,"message":"965","line":314,"column":37,"nodeType":"966","messageId":"967","endLine":314,"endColumn":39},{"ruleId":"941","severity":1,"message":"972","line":2,"column":29,"nodeType":"943","messageId":"944","endLine":2,"endColumn":34},{"ruleId":"973","severity":1,"message":"974","line":67,"column":8,"nodeType":"975","endLine":67,"endColumn":10,"suggestions":"1060"},{"ruleId":"941","severity":1,"message":"984","line":5,"column":29,"nodeType":"943","messageId":"944","endLine":5,"endColumn":39},{"ruleId":"941","severity":1,"message":"985","line":14,"column":8,"nodeType":"943","messageId":"944","endLine":14,"endColumn":20},{"ruleId":"964","severity":1,"message":"965","line":33,"column":33,"nodeType":"966","messageId":"967","endLine":33,"endColumn":35},{"ruleId":"986","severity":1,"message":"987","line":54,"column":34,"nodeType":"943","messageId":"988","endLine":54,"endColumn":35},{"ruleId":"964","severity":1,"message":"979","line":55,"column":64,"nodeType":"966","messageId":"967","endLine":55,"endColumn":66},{"ruleId":"973","severity":1,"message":"989","line":67,"column":8,"nodeType":"975","endLine":67,"endColumn":10,"suggestions":"1061"},{"ruleId":"964","severity":1,"message":"965","line":119,"column":43,"nodeType":"966","messageId":"967","endLine":119,"endColumn":45},{"ruleId":"964","severity":1,"message":"979","line":60,"column":29,"nodeType":"966","messageId":"967","endLine":60,"endColumn":31},{"ruleId":"964","severity":1,"message":"965","line":77,"column":20,"nodeType":"966","messageId":"967","endLine":77,"endColumn":22},{"ruleId":"964","severity":1,"message":"965","line":86,"column":23,"nodeType":"966","messageId":"967","endLine":86,"endColumn":25},{"ruleId":"964","severity":1,"message":"965","line":114,"column":42,"nodeType":"966","messageId":"967","endLine":114,"endColumn":44},{"ruleId":"964","severity":1,"message":"979","line":115,"column":42,"nodeType":"966","messageId":"967","endLine":115,"endColumn":44},{"ruleId":"964","severity":1,"message":"965","line":135,"column":45,"nodeType":"966","messageId":"967","endLine":135,"endColumn":47},{"ruleId":"964","severity":1,"message":"979","line":136,"column":45,"nodeType":"966","messageId":"967","endLine":136,"endColumn":47},{"ruleId":"941","severity":1,"message":"1044","line":4,"column":24,"nodeType":"943","messageId":"944","endLine":4,"endColumn":33},{"ruleId":"941","severity":1,"message":"950","line":13,"column":9,"nodeType":"943","messageId":"944","endLine":13,"endColumn":16},{"ruleId":"941","severity":1,"message":"977","line":2,"column":29,"nodeType":"943","messageId":"944","endLine":2,"endColumn":35},{"ruleId":"973","severity":1,"message":"974","line":75,"column":8,"nodeType":"975","endLine":75,"endColumn":10,"suggestions":"1062"},{"ruleId":"941","severity":1,"message":"991","line":1,"column":17,"nodeType":"943","messageId":"944","endLine":1,"endColumn":26},{"ruleId":"941","severity":1,"message":"1044","line":4,"column":24,"nodeType":"943","messageId":"944","endLine":4,"endColumn":33},{"ruleId":"964","severity":1,"message":"965","line":34,"column":37,"nodeType":"966","messageId":"967","endLine":34,"endColumn":39},{"ruleId":"964","severity":1,"message":"965","line":34,"column":77,"nodeType":"966","messageId":"967","endLine":34,"endColumn":79},{"ruleId":"964","severity":1,"message":"979","line":42,"column":42,"nodeType":"966","messageId":"967","endLine":42,"endColumn":44},{"ruleId":"941","severity":1,"message":"970","line":2,"column":22,"nodeType":"943","messageId":"944","endLine":2,"endColumn":27},{"ruleId":"941","severity":1,"message":"942","line":4,"column":17,"nodeType":"943","messageId":"944","endLine":4,"endColumn":25},{"ruleId":"941","severity":1,"message":"991","line":4,"column":27,"nodeType":"943","messageId":"944","endLine":4,"endColumn":36},{"ruleId":"941","severity":1,"message":"997","line":17,"column":37,"nodeType":"943","messageId":"944","endLine":17,"endColumn":43},{"ruleId":"941","severity":1,"message":"998","line":17,"column":45,"nodeType":"943","messageId":"944","endLine":17,"endColumn":50},{"ruleId":"941","severity":1,"message":"999","line":17,"column":52,"nodeType":"943","messageId":"944","endLine":17,"endColumn":60},{"ruleId":"941","severity":1,"message":"1000","line":41,"column":11,"nodeType":"943","messageId":"944","endLine":41,"endColumn":23},{"ruleId":"964","severity":1,"message":"965","line":42,"column":18,"nodeType":"966","messageId":"967","endLine":42,"endColumn":20},{"ruleId":"964","severity":1,"message":"965","line":65,"column":33,"nodeType":"966","messageId":"967","endLine":65,"endColumn":35},{"ruleId":"973","severity":1,"message":"1001","line":94,"column":8,"nodeType":"975","endLine":94,"endColumn":10,"suggestions":"1063"},{"ruleId":"964","severity":1,"message":"965","line":107,"column":43,"nodeType":"966","messageId":"967","endLine":107,"endColumn":45},{"ruleId":"941","severity":1,"message":"980","line":2,"column":10,"nodeType":"943","messageId":"944","endLine":2,"endColumn":14},{"ruleId":"941","severity":1,"message":"981","line":16,"column":15,"nodeType":"943","messageId":"944","endLine":16,"endColumn":18},{"ruleId":"964","severity":1,"message":"965","line":55,"column":38,"nodeType":"966","messageId":"967","endLine":55,"endColumn":40},{"ruleId":"964","severity":1,"message":"965","line":60,"column":39,"nodeType":"966","messageId":"967","endLine":60,"endColumn":41},{"ruleId":"973","severity":1,"message":"1003","line":64,"column":9,"nodeType":"975","endLine":64,"endColumn":11,"suggestions":"1064"},{"ruleId":"941","severity":1,"message":"1005","line":66,"column":11,"nodeType":"943","messageId":"944","endLine":66,"endColumn":22},{"ruleId":"964","severity":1,"message":"965","line":73,"column":19,"nodeType":"966","messageId":"967","endLine":73,"endColumn":21},{"ruleId":"964","severity":1,"message":"965","line":93,"column":43,"nodeType":"966","messageId":"967","endLine":93,"endColumn":45},{"ruleId":"964","severity":1,"message":"965","line":96,"column":43,"nodeType":"966","messageId":"967","endLine":96,"endColumn":45},{"ruleId":"964","severity":1,"message":"979","line":27,"column":35,"nodeType":"966","messageId":"967","endLine":27,"endColumn":37},{"ruleId":"973","severity":1,"message":"1006","line":106,"column":8,"nodeType":"975","endLine":106,"endColumn":10,"suggestions":"1065"},{"ruleId":"964","severity":1,"message":"965","line":111,"column":33,"nodeType":"966","messageId":"967","endLine":111,"endColumn":35},{"ruleId":"964","severity":1,"message":"965","line":115,"column":52,"nodeType":"966","messageId":"967","endLine":115,"endColumn":54},{"ruleId":"1008","severity":1,"message":"1009","line":137,"column":5,"nodeType":"1010","messageId":"1011","endLine":138,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1013","line":137,"column":5,"nodeType":"943","messageId":"1014","endLine":137,"endColumn":10},{"ruleId":"964","severity":1,"message":"965","line":203,"column":39,"nodeType":"966","messageId":"967","endLine":203,"endColumn":41},{"ruleId":"964","severity":1,"message":"965","line":204,"column":39,"nodeType":"966","messageId":"967","endLine":204,"endColumn":41},{"ruleId":"941","severity":1,"message":"991","line":1,"column":27,"nodeType":"943","messageId":"944","endLine":1,"endColumn":36},{"ruleId":"941","severity":1,"message":"1016","line":4,"column":8,"nodeType":"943","messageId":"944","endLine":4,"endColumn":14},{"ruleId":"941","severity":1,"message":"1017","line":7,"column":19,"nodeType":"943","messageId":"944","endLine":7,"endColumn":29},{"ruleId":"941","severity":1,"message":"1018","line":18,"column":11,"nodeType":"943","messageId":"944","endLine":18,"endColumn":19},{"ruleId":"941","severity":1,"message":"997","line":18,"column":35,"nodeType":"943","messageId":"944","endLine":18,"endColumn":41},{"ruleId":"941","severity":1,"message":"1019","line":18,"column":43,"nodeType":"943","messageId":"944","endLine":18,"endColumn":50},{"ruleId":"941","severity":1,"message":"1020","line":63,"column":9,"nodeType":"943","messageId":"944","endLine":63,"endColumn":20},{"ruleId":"964","severity":1,"message":"965","line":71,"column":28,"nodeType":"966","messageId":"967","endLine":71,"endColumn":30},{"ruleId":"964","severity":1,"message":"965","line":88,"column":35,"nodeType":"966","messageId":"967","endLine":88,"endColumn":37},{"ruleId":"964","severity":1,"message":"965","line":90,"column":35,"nodeType":"966","messageId":"967","endLine":90,"endColumn":37},{"ruleId":"964","severity":1,"message":"965","line":111,"column":25,"nodeType":"966","messageId":"967","endLine":111,"endColumn":27},{"ruleId":"964","severity":1,"message":"979","line":62,"column":32,"nodeType":"966","messageId":"967","endLine":62,"endColumn":34},{"ruleId":"964","severity":1,"message":"965","line":72,"column":47,"nodeType":"966","messageId":"967","endLine":72,"endColumn":49},{"ruleId":"964","severity":1,"message":"965","line":86,"column":27,"nodeType":"966","messageId":"967","endLine":86,"endColumn":29},{"ruleId":"964","severity":1,"message":"965","line":95,"column":23,"nodeType":"966","messageId":"967","endLine":95,"endColumn":25},{"ruleId":"964","severity":1,"message":"965","line":104,"column":23,"nodeType":"966","messageId":"967","endLine":104,"endColumn":25},{"ruleId":"964","severity":1,"message":"965","line":131,"column":49,"nodeType":"966","messageId":"967","endLine":131,"endColumn":51},{"ruleId":"964","severity":1,"message":"979","line":132,"column":49,"nodeType":"966","messageId":"967","endLine":132,"endColumn":51},{"ruleId":"964","severity":1,"message":"965","line":151,"column":45,"nodeType":"966","messageId":"967","endLine":151,"endColumn":47},{"ruleId":"964","severity":1,"message":"979","line":152,"column":45,"nodeType":"966","messageId":"967","endLine":152,"endColumn":47},{"ruleId":"964","severity":1,"message":"965","line":172,"column":45,"nodeType":"966","messageId":"967","endLine":172,"endColumn":47},{"ruleId":"964","severity":1,"message":"979","line":173,"column":45,"nodeType":"966","messageId":"967","endLine":173,"endColumn":47},{"ruleId":"941","severity":1,"message":"980","line":11,"column":22,"nodeType":"943","messageId":"944","endLine":11,"endColumn":26},{"ruleId":"941","severity":1,"message":"981","line":13,"column":15,"nodeType":"943","messageId":"944","endLine":13,"endColumn":18},{"ruleId":"964","severity":1,"message":"965","line":53,"column":43,"nodeType":"966","messageId":"967","endLine":53,"endColumn":45},{"ruleId":"973","severity":1,"message":"982","line":57,"column":8,"nodeType":"975","endLine":57,"endColumn":10,"suggestions":"1066"},{"ruleId":"964","severity":1,"message":"965","line":67,"column":19,"nodeType":"966","messageId":"967","endLine":67,"endColumn":21},{"ruleId":"964","severity":1,"message":"965","line":76,"column":26,"nodeType":"966","messageId":"967","endLine":76,"endColumn":28},{"ruleId":"964","severity":1,"message":"965","line":90,"column":43,"nodeType":"966","messageId":"967","endLine":90,"endColumn":45},{"ruleId":"964","severity":1,"message":"965","line":94,"column":43,"nodeType":"966","messageId":"967","endLine":94,"endColumn":45},{"ruleId":"941","severity":1,"message":"993","line":2,"column":8,"nodeType":"943","messageId":"944","endLine":2,"endColumn":16},{"ruleId":"941","severity":1,"message":"946","line":5,"column":10,"nodeType":"943","messageId":"944","endLine":5,"endColumn":21},{"ruleId":"941","severity":1,"message":"994","line":20,"column":7,"nodeType":"943","messageId":"944","endLine":20,"endColumn":20},{"ruleId":"941","severity":1,"message":"995","line":25,"column":9,"nodeType":"943","messageId":"944","endLine":25,"endColumn":14},{"ruleId":"941","severity":1,"message":"996","line":27,"column":9,"nodeType":"943","messageId":"944","endLine":27,"endColumn":16},{"ruleId":"941","severity":1,"message":"1039","line":3,"column":48,"nodeType":"943","messageId":"944","endLine":3,"endColumn":65},{"ruleId":"941","severity":1,"message":"1040","line":3,"column":80,"nodeType":"943","messageId":"944","endLine":3,"endColumn":89},{"ruleId":"941","severity":1,"message":"1047","line":11,"column":8,"nodeType":"943","messageId":"944","endLine":11,"endColumn":12},{"ruleId":"941","severity":1,"message":"1048","line":12,"column":8,"nodeType":"943","messageId":"944","endLine":12,"endColumn":12},{"ruleId":"941","severity":1,"message":"1049","line":13,"column":8,"nodeType":"943","messageId":"944","endLine":13,"endColumn":18},{"ruleId":"941","severity":1,"message":"1050","line":19,"column":12,"nodeType":"943","messageId":"944","endLine":19,"endColumn":20},{"ruleId":"941","severity":1,"message":"1051","line":19,"column":22,"nodeType":"943","messageId":"944","endLine":19,"endColumn":33},{"ruleId":"941","severity":1,"message":"1052","line":22,"column":12,"nodeType":"943","messageId":"944","endLine":22,"endColumn":24},{"ruleId":"941","severity":1,"message":"1053","line":22,"column":26,"nodeType":"943","messageId":"944","endLine":22,"endColumn":41},{"ruleId":"941","severity":1,"message":"1039","line":6,"column":48,"nodeType":"943","messageId":"944","endLine":6,"endColumn":65},{"ruleId":"941","severity":1,"message":"1040","line":6,"column":80,"nodeType":"943","messageId":"944","endLine":6,"endColumn":89},{"ruleId":"941","severity":1,"message":"995","line":26,"column":11,"nodeType":"943","messageId":"944","endLine":26,"endColumn":16},{"ruleId":"1041","severity":1,"message":"1042","line":45,"column":17,"nodeType":"1043","messageId":"967","endLine":45,"endColumn":22},{"ruleId":"1021","severity":1,"message":"1022","line":8,"column":44,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":45,"suggestions":"1067"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":52,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":53,"suggestions":"1068"},{"ruleId":"1021","severity":1,"message":"1022","line":8,"column":68,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":69,"suggestions":"1069"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":76,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":77,"suggestions":"1070"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":85,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":86,"suggestions":"1071"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":89,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":90,"suggestions":"1072"},{"ruleId":"1021","severity":1,"message":"1022","line":8,"column":105,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":106,"suggestions":"1073"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":113,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":114,"suggestions":"1074"},{"ruleId":"1021","severity":1,"message":"1022","line":8,"column":130,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":131,"suggestions":"1075"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":138,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":139,"suggestions":"1076"},{"ruleId":"1036","severity":1,"message":"1037","line":121,"column":17,"nodeType":"1038","endLine":121,"endColumn":41},{"ruleId":"964","severity":1,"message":"965","line":24,"column":20,"nodeType":"966","messageId":"967","endLine":24,"endColumn":22},{"ruleId":"964","severity":1,"message":"965","line":129,"column":48,"nodeType":"966","messageId":"967","endLine":129,"endColumn":50},{"ruleId":"964","severity":1,"message":"965","line":141,"column":48,"nodeType":"966","messageId":"967","endLine":141,"endColumn":50},{"ruleId":"941","severity":1,"message":"942","line":1,"column":28,"nodeType":"943","messageId":"944","endLine":1,"endColumn":36},{"ruleId":"941","severity":1,"message":"945","line":12,"column":8,"nodeType":"943","messageId":"944","endLine":12,"endColumn":14},{"ruleId":"941","severity":1,"message":"946","line":13,"column":10,"nodeType":"943","messageId":"944","endLine":13,"endColumn":21},{"ruleId":"941","severity":1,"message":"947","line":13,"column":23,"nodeType":"943","messageId":"944","endLine":13,"endColumn":32},{"ruleId":"941","severity":1,"message":"948","line":36,"column":8,"nodeType":"943","messageId":"944","endLine":36,"endColumn":15},{"ruleId":"941","severity":1,"message":"949","line":47,"column":11,"nodeType":"943","messageId":"944","endLine":47,"endColumn":18},{"ruleId":"941","severity":1,"message":"950","line":48,"column":11,"nodeType":"943","messageId":"944","endLine":48,"endColumn":18},{"ruleId":"941","severity":1,"message":"950","line":7,"column":11,"nodeType":"943","messageId":"944","endLine":7,"endColumn":18},{"ruleId":"941","severity":1,"message":"1045","line":8,"column":12,"nodeType":"943","messageId":"944","endLine":8,"endColumn":19},{"ruleId":"941","severity":1,"message":"1046","line":9,"column":12,"nodeType":"943","messageId":"944","endLine":9,"endColumn":23},{"ruleId":"941","severity":1,"message":"951","line":2,"column":54,"nodeType":"943","messageId":"944","endLine":2,"endColumn":62},{"ruleId":"941","severity":1,"message":"952","line":3,"column":52,"nodeType":"943","messageId":"944","endLine":3,"endColumn":62},{"ruleId":"941","severity":1,"message":"953","line":3,"column":64,"nodeType":"943","messageId":"944","endLine":3,"endColumn":74},{"ruleId":"941","severity":1,"message":"954","line":3,"column":76,"nodeType":"943","messageId":"944","endLine":3,"endColumn":86},{"ruleId":"941","severity":1,"message":"955","line":3,"column":88,"nodeType":"943","messageId":"944","endLine":3,"endColumn":105},{"ruleId":"941","severity":1,"message":"956","line":3,"column":124,"nodeType":"943","messageId":"944","endLine":3,"endColumn":135},{"ruleId":"941","severity":1,"message":"957","line":3,"column":137,"nodeType":"943","messageId":"944","endLine":3,"endColumn":143},{"ruleId":"941","severity":1,"message":"958","line":3,"column":145,"nodeType":"943","messageId":"944","endLine":3,"endColumn":153},{"ruleId":"941","severity":1,"message":"959","line":3,"column":155,"nodeType":"943","messageId":"944","endLine":3,"endColumn":173},{"ruleId":"941","severity":1,"message":"960","line":3,"column":175,"nodeType":"943","messageId":"944","endLine":3,"endColumn":185},{"ruleId":"941","severity":1,"message":"961","line":3,"column":187,"nodeType":"943","messageId":"944","endLine":3,"endColumn":196},{"ruleId":"941","severity":1,"message":"962","line":107,"column":11,"nodeType":"943","messageId":"944","endLine":107,"endColumn":23},{"ruleId":"941","severity":1,"message":"963","line":111,"column":11,"nodeType":"943","messageId":"944","endLine":111,"endColumn":32},{"ruleId":"964","severity":1,"message":"965","line":172,"column":31,"nodeType":"966","messageId":"967","endLine":172,"endColumn":33},{"ruleId":"941","severity":1,"message":"970","line":3,"column":22,"nodeType":"943","messageId":"944","endLine":3,"endColumn":27},{"ruleId":"941","severity":1,"message":"945","line":4,"column":8,"nodeType":"943","messageId":"944","endLine":4,"endColumn":14},{"ruleId":"941","severity":1,"message":"946","line":6,"column":10,"nodeType":"943","messageId":"944","endLine":6,"endColumn":21},{"ruleId":"941","severity":1,"message":"971","line":42,"column":9,"nodeType":"943","messageId":"944","endLine":42,"endColumn":16},{"ruleId":"941","severity":1,"message":"972","line":2,"column":29,"nodeType":"943","messageId":"944","endLine":2,"endColumn":34},{"ruleId":"973","severity":1,"message":"974","line":67,"column":8,"nodeType":"975","endLine":67,"endColumn":10,"suggestions":"1077"},{"ruleId":"941","severity":1,"message":"945","line":11,"column":8,"nodeType":"943","messageId":"944","endLine":11,"endColumn":14},{"ruleId":"941","severity":1,"message":"949","line":20,"column":9,"nodeType":"943","messageId":"944","endLine":20,"endColumn":16},{"ruleId":"941","severity":1,"message":"968","line":23,"column":10,"nodeType":"943","messageId":"944","endLine":23,"endColumn":19},{"ruleId":"941","severity":1,"message":"969","line":24,"column":10,"nodeType":"943","messageId":"944","endLine":24,"endColumn":19},{"ruleId":"941","severity":1,"message":"980","line":11,"column":22,"nodeType":"943","messageId":"944","endLine":11,"endColumn":26},{"ruleId":"941","severity":1,"message":"981","line":13,"column":15,"nodeType":"943","messageId":"944","endLine":13,"endColumn":18},{"ruleId":"964","severity":1,"message":"965","line":59,"column":43,"nodeType":"966","messageId":"967","endLine":59,"endColumn":45},{"ruleId":"973","severity":1,"message":"982","line":63,"column":8,"nodeType":"975","endLine":63,"endColumn":10,"suggestions":"1078"},{"ruleId":"964","severity":1,"message":"965","line":72,"column":19,"nodeType":"966","messageId":"967","endLine":72,"endColumn":21},{"ruleId":"964","severity":1,"message":"965","line":81,"column":26,"nodeType":"966","messageId":"967","endLine":81,"endColumn":28},{"ruleId":"964","severity":1,"message":"965","line":95,"column":43,"nodeType":"966","messageId":"967","endLine":95,"endColumn":45},{"ruleId":"964","severity":1,"message":"965","line":99,"column":43,"nodeType":"966","messageId":"967","endLine":99,"endColumn":45},{"ruleId":"964","severity":1,"message":"965","line":314,"column":37,"nodeType":"966","messageId":"967","endLine":314,"endColumn":39},{"ruleId":"941","severity":1,"message":"1044","line":4,"column":24,"nodeType":"943","messageId":"944","endLine":4,"endColumn":33},{"ruleId":"941","severity":1,"message":"950","line":13,"column":9,"nodeType":"943","messageId":"944","endLine":13,"endColumn":16},{"ruleId":"941","severity":1,"message":"977","line":2,"column":29,"nodeType":"943","messageId":"944","endLine":2,"endColumn":35},{"ruleId":"973","severity":1,"message":"974","line":64,"column":8,"nodeType":"975","endLine":64,"endColumn":10,"suggestions":"1079"},{"ruleId":"964","severity":1,"message":"979","line":88,"column":75,"nodeType":"966","messageId":"967","endLine":88,"endColumn":77},{"ruleId":"964","severity":1,"message":"979","line":60,"column":29,"nodeType":"966","messageId":"967","endLine":60,"endColumn":31},{"ruleId":"964","severity":1,"message":"965","line":77,"column":20,"nodeType":"966","messageId":"967","endLine":77,"endColumn":22},{"ruleId":"964","severity":1,"message":"965","line":86,"column":23,"nodeType":"966","messageId":"967","endLine":86,"endColumn":25},{"ruleId":"964","severity":1,"message":"965","line":114,"column":42,"nodeType":"966","messageId":"967","endLine":114,"endColumn":44},{"ruleId":"964","severity":1,"message":"979","line":115,"column":42,"nodeType":"966","messageId":"967","endLine":115,"endColumn":44},{"ruleId":"964","severity":1,"message":"965","line":135,"column":45,"nodeType":"966","messageId":"967","endLine":135,"endColumn":47},{"ruleId":"964","severity":1,"message":"979","line":136,"column":45,"nodeType":"966","messageId":"967","endLine":136,"endColumn":47},{"ruleId":"941","severity":1,"message":"991","line":1,"column":17,"nodeType":"943","messageId":"944","endLine":1,"endColumn":26},{"ruleId":"941","severity":1,"message":"1044","line":4,"column":24,"nodeType":"943","messageId":"944","endLine":4,"endColumn":33},{"ruleId":"964","severity":1,"message":"965","line":34,"column":37,"nodeType":"966","messageId":"967","endLine":34,"endColumn":39},{"ruleId":"964","severity":1,"message":"965","line":34,"column":77,"nodeType":"966","messageId":"967","endLine":34,"endColumn":79},{"ruleId":"964","severity":1,"message":"979","line":42,"column":42,"nodeType":"966","messageId":"967","endLine":42,"endColumn":44},{"ruleId":"941","severity":1,"message":"977","line":2,"column":29,"nodeType":"943","messageId":"944","endLine":2,"endColumn":35},{"ruleId":"973","severity":1,"message":"974","line":75,"column":8,"nodeType":"975","endLine":75,"endColumn":10,"suggestions":"1080"},{"ruleId":"941","severity":1,"message":"997","line":17,"column":37,"nodeType":"943","messageId":"944","endLine":17,"endColumn":43},{"ruleId":"941","severity":1,"message":"998","line":17,"column":45,"nodeType":"943","messageId":"944","endLine":17,"endColumn":50},{"ruleId":"941","severity":1,"message":"999","line":17,"column":52,"nodeType":"943","messageId":"944","endLine":17,"endColumn":60},{"ruleId":"941","severity":1,"message":"1000","line":41,"column":11,"nodeType":"943","messageId":"944","endLine":41,"endColumn":23},{"ruleId":"964","severity":1,"message":"965","line":42,"column":18,"nodeType":"966","messageId":"967","endLine":42,"endColumn":20},{"ruleId":"964","severity":1,"message":"965","line":65,"column":33,"nodeType":"966","messageId":"967","endLine":65,"endColumn":35},{"ruleId":"973","severity":1,"message":"1001","line":94,"column":8,"nodeType":"975","endLine":94,"endColumn":10,"suggestions":"1081"},{"ruleId":"964","severity":1,"message":"965","line":107,"column":43,"nodeType":"966","messageId":"967","endLine":107,"endColumn":45},{"ruleId":"941","severity":1,"message":"970","line":2,"column":22,"nodeType":"943","messageId":"944","endLine":2,"endColumn":27},{"ruleId":"941","severity":1,"message":"942","line":4,"column":17,"nodeType":"943","messageId":"944","endLine":4,"endColumn":25},{"ruleId":"941","severity":1,"message":"991","line":4,"column":27,"nodeType":"943","messageId":"944","endLine":4,"endColumn":36},{"ruleId":"941","severity":1,"message":"984","line":5,"column":29,"nodeType":"943","messageId":"944","endLine":5,"endColumn":39},{"ruleId":"941","severity":1,"message":"985","line":14,"column":8,"nodeType":"943","messageId":"944","endLine":14,"endColumn":20},{"ruleId":"964","severity":1,"message":"965","line":33,"column":33,"nodeType":"966","messageId":"967","endLine":33,"endColumn":35},{"ruleId":"986","severity":1,"message":"987","line":54,"column":34,"nodeType":"943","messageId":"988","endLine":54,"endColumn":35},{"ruleId":"964","severity":1,"message":"979","line":55,"column":64,"nodeType":"966","messageId":"967","endLine":55,"endColumn":66},{"ruleId":"973","severity":1,"message":"989","line":67,"column":8,"nodeType":"975","endLine":67,"endColumn":10,"suggestions":"1082"},{"ruleId":"964","severity":1,"message":"965","line":119,"column":43,"nodeType":"966","messageId":"967","endLine":119,"endColumn":45},{"ruleId":"941","severity":1,"message":"980","line":11,"column":22,"nodeType":"943","messageId":"944","endLine":11,"endColumn":26},{"ruleId":"941","severity":1,"message":"981","line":13,"column":15,"nodeType":"943","messageId":"944","endLine":13,"endColumn":18},{"ruleId":"964","severity":1,"message":"965","line":53,"column":43,"nodeType":"966","messageId":"967","endLine":53,"endColumn":45},{"ruleId":"973","severity":1,"message":"982","line":57,"column":8,"nodeType":"975","endLine":57,"endColumn":10,"suggestions":"1083"},{"ruleId":"964","severity":1,"message":"965","line":67,"column":19,"nodeType":"966","messageId":"967","endLine":67,"endColumn":21},{"ruleId":"964","severity":1,"message":"965","line":76,"column":26,"nodeType":"966","messageId":"967","endLine":76,"endColumn":28},{"ruleId":"964","severity":1,"message":"965","line":90,"column":43,"nodeType":"966","messageId":"967","endLine":90,"endColumn":45},{"ruleId":"964","severity":1,"message":"965","line":94,"column":43,"nodeType":"966","messageId":"967","endLine":94,"endColumn":45},{"ruleId":"941","severity":1,"message":"991","line":1,"column":27,"nodeType":"943","messageId":"944","endLine":1,"endColumn":36},{"ruleId":"941","severity":1,"message":"1016","line":4,"column":8,"nodeType":"943","messageId":"944","endLine":4,"endColumn":14},{"ruleId":"941","severity":1,"message":"1017","line":7,"column":19,"nodeType":"943","messageId":"944","endLine":7,"endColumn":29},{"ruleId":"941","severity":1,"message":"1018","line":18,"column":11,"nodeType":"943","messageId":"944","endLine":18,"endColumn":19},{"ruleId":"941","severity":1,"message":"997","line":18,"column":35,"nodeType":"943","messageId":"944","endLine":18,"endColumn":41},{"ruleId":"941","severity":1,"message":"1019","line":18,"column":43,"nodeType":"943","messageId":"944","endLine":18,"endColumn":50},{"ruleId":"941","severity":1,"message":"1020","line":63,"column":9,"nodeType":"943","messageId":"944","endLine":63,"endColumn":20},{"ruleId":"964","severity":1,"message":"965","line":71,"column":28,"nodeType":"966","messageId":"967","endLine":71,"endColumn":30},{"ruleId":"964","severity":1,"message":"965","line":88,"column":35,"nodeType":"966","messageId":"967","endLine":88,"endColumn":37},{"ruleId":"964","severity":1,"message":"965","line":90,"column":35,"nodeType":"966","messageId":"967","endLine":90,"endColumn":37},{"ruleId":"964","severity":1,"message":"965","line":111,"column":25,"nodeType":"966","messageId":"967","endLine":111,"endColumn":27},{"ruleId":"941","severity":1,"message":"980","line":2,"column":10,"nodeType":"943","messageId":"944","endLine":2,"endColumn":14},{"ruleId":"941","severity":1,"message":"981","line":16,"column":15,"nodeType":"943","messageId":"944","endLine":16,"endColumn":18},{"ruleId":"964","severity":1,"message":"965","line":55,"column":38,"nodeType":"966","messageId":"967","endLine":55,"endColumn":40},{"ruleId":"964","severity":1,"message":"965","line":60,"column":39,"nodeType":"966","messageId":"967","endLine":60,"endColumn":41},{"ruleId":"973","severity":1,"message":"1003","line":64,"column":9,"nodeType":"975","endLine":64,"endColumn":11,"suggestions":"1084"},{"ruleId":"941","severity":1,"message":"1005","line":66,"column":11,"nodeType":"943","messageId":"944","endLine":66,"endColumn":22},{"ruleId":"964","severity":1,"message":"965","line":73,"column":19,"nodeType":"966","messageId":"967","endLine":73,"endColumn":21},{"ruleId":"964","severity":1,"message":"965","line":93,"column":43,"nodeType":"966","messageId":"967","endLine":93,"endColumn":45},{"ruleId":"964","severity":1,"message":"965","line":96,"column":43,"nodeType":"966","messageId":"967","endLine":96,"endColumn":45},{"ruleId":"941","severity":1,"message":"993","line":2,"column":8,"nodeType":"943","messageId":"944","endLine":2,"endColumn":16},{"ruleId":"941","severity":1,"message":"946","line":5,"column":10,"nodeType":"943","messageId":"944","endLine":5,"endColumn":21},{"ruleId":"941","severity":1,"message":"994","line":20,"column":7,"nodeType":"943","messageId":"944","endLine":20,"endColumn":20},{"ruleId":"941","severity":1,"message":"995","line":25,"column":9,"nodeType":"943","messageId":"944","endLine":25,"endColumn":14},{"ruleId":"941","severity":1,"message":"996","line":27,"column":9,"nodeType":"943","messageId":"944","endLine":27,"endColumn":16},{"ruleId":"964","severity":1,"message":"979","line":27,"column":35,"nodeType":"966","messageId":"967","endLine":27,"endColumn":37},{"ruleId":"973","severity":1,"message":"1006","line":106,"column":8,"nodeType":"975","endLine":106,"endColumn":10,"suggestions":"1085"},{"ruleId":"964","severity":1,"message":"965","line":111,"column":33,"nodeType":"966","messageId":"967","endLine":111,"endColumn":35},{"ruleId":"964","severity":1,"message":"965","line":115,"column":52,"nodeType":"966","messageId":"967","endLine":115,"endColumn":54},{"ruleId":"1008","severity":1,"message":"1009","line":137,"column":5,"nodeType":"1010","messageId":"1011","endLine":138,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1013","line":137,"column":5,"nodeType":"943","messageId":"1014","endLine":137,"endColumn":10},{"ruleId":"964","severity":1,"message":"965","line":203,"column":39,"nodeType":"966","messageId":"967","endLine":203,"endColumn":41},{"ruleId":"964","severity":1,"message":"965","line":204,"column":39,"nodeType":"966","messageId":"967","endLine":204,"endColumn":41},{"ruleId":"964","severity":1,"message":"979","line":62,"column":32,"nodeType":"966","messageId":"967","endLine":62,"endColumn":34},{"ruleId":"964","severity":1,"message":"965","line":72,"column":47,"nodeType":"966","messageId":"967","endLine":72,"endColumn":49},{"ruleId":"964","severity":1,"message":"965","line":86,"column":27,"nodeType":"966","messageId":"967","endLine":86,"endColumn":29},{"ruleId":"964","severity":1,"message":"965","line":95,"column":23,"nodeType":"966","messageId":"967","endLine":95,"endColumn":25},{"ruleId":"964","severity":1,"message":"965","line":104,"column":23,"nodeType":"966","messageId":"967","endLine":104,"endColumn":25},{"ruleId":"964","severity":1,"message":"965","line":131,"column":49,"nodeType":"966","messageId":"967","endLine":131,"endColumn":51},{"ruleId":"964","severity":1,"message":"979","line":132,"column":49,"nodeType":"966","messageId":"967","endLine":132,"endColumn":51},{"ruleId":"964","severity":1,"message":"965","line":151,"column":45,"nodeType":"966","messageId":"967","endLine":151,"endColumn":47},{"ruleId":"964","severity":1,"message":"979","line":152,"column":45,"nodeType":"966","messageId":"967","endLine":152,"endColumn":47},{"ruleId":"964","severity":1,"message":"965","line":172,"column":45,"nodeType":"966","messageId":"967","endLine":172,"endColumn":47},{"ruleId":"964","severity":1,"message":"979","line":173,"column":45,"nodeType":"966","messageId":"967","endLine":173,"endColumn":47},{"ruleId":"941","severity":1,"message":"1039","line":3,"column":48,"nodeType":"943","messageId":"944","endLine":3,"endColumn":65},{"ruleId":"941","severity":1,"message":"1040","line":3,"column":80,"nodeType":"943","messageId":"944","endLine":3,"endColumn":89},{"ruleId":"941","severity":1,"message":"1047","line":11,"column":8,"nodeType":"943","messageId":"944","endLine":11,"endColumn":12},{"ruleId":"941","severity":1,"message":"1048","line":12,"column":8,"nodeType":"943","messageId":"944","endLine":12,"endColumn":12},{"ruleId":"941","severity":1,"message":"1049","line":13,"column":8,"nodeType":"943","messageId":"944","endLine":13,"endColumn":18},{"ruleId":"941","severity":1,"message":"1050","line":19,"column":12,"nodeType":"943","messageId":"944","endLine":19,"endColumn":20},{"ruleId":"941","severity":1,"message":"1051","line":19,"column":22,"nodeType":"943","messageId":"944","endLine":19,"endColumn":33},{"ruleId":"941","severity":1,"message":"1052","line":22,"column":12,"nodeType":"943","messageId":"944","endLine":22,"endColumn":24},{"ruleId":"941","severity":1,"message":"1053","line":22,"column":26,"nodeType":"943","messageId":"944","endLine":22,"endColumn":41},{"ruleId":"964","severity":1,"message":"965","line":24,"column":20,"nodeType":"966","messageId":"967","endLine":24,"endColumn":22},{"ruleId":"964","severity":1,"message":"965","line":129,"column":48,"nodeType":"966","messageId":"967","endLine":129,"endColumn":50},{"ruleId":"964","severity":1,"message":"965","line":141,"column":48,"nodeType":"966","messageId":"967","endLine":141,"endColumn":50},{"ruleId":"941","severity":1,"message":"1039","line":6,"column":48,"nodeType":"943","messageId":"944","endLine":6,"endColumn":65},{"ruleId":"941","severity":1,"message":"1040","line":6,"column":80,"nodeType":"943","messageId":"944","endLine":6,"endColumn":89},{"ruleId":"941","severity":1,"message":"995","line":26,"column":11,"nodeType":"943","messageId":"944","endLine":26,"endColumn":16},{"ruleId":"1041","severity":1,"message":"1042","line":45,"column":17,"nodeType":"1043","messageId":"967","endLine":45,"endColumn":22},{"ruleId":"1021","severity":1,"message":"1022","line":8,"column":44,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":45,"suggestions":"1086"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":52,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":53,"suggestions":"1087"},{"ruleId":"1021","severity":1,"message":"1022","line":8,"column":68,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":69,"suggestions":"1088"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":76,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":77,"suggestions":"1089"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":85,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":86,"suggestions":"1090"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":89,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":90,"suggestions":"1091"},{"ruleId":"1021","severity":1,"message":"1022","line":8,"column":105,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":106,"suggestions":"1092"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":113,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":114,"suggestions":"1093"},{"ruleId":"1021","severity":1,"message":"1022","line":8,"column":130,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":131,"suggestions":"1094"},{"ruleId":"1021","severity":1,"message":"1026","line":8,"column":138,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":139,"suggestions":"1095"},{"ruleId":"1036","severity":1,"message":"1037","line":121,"column":17,"nodeType":"1038","endLine":121,"endColumn":41},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'moment' is defined but never used.","'decodeToken' is defined but never used.","'isExpired' is defined but never used.","'Expired' is defined but never used.","'cookies' is assigned a value but never used.","'history' is assigned a value but never used.","'Collapse' is defined but never used.","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'Assessment' is defined but never used.","'SupervisorAccount' is defined but never used.","'EmojiPeople' is defined but never used.","'Policy' is defined but never used.","'ViewList' is defined but never used.","'AssignmentTurnedIn' is defined but never used.","'Assignment' is defined but never used.","'Equalizer' is defined but never used.","'toggleNested' is assigned a value but never used.","'toggleDrawerAndNested' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'errSpaceA' is assigned a value but never used.","'errSpaceB' is assigned a value but never used.","'Paper' is defined but never used.","'classes' is assigned a value but never used.","'Modal' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'company_id'. Either include it or remove the dependency array.","ArrayExpression",["1096"],"'Button' is defined but never used.",["1097"],"Expected '!==' and instead saw '!='.","'Link' is defined but never used.","'Col' is defined but never used.","React Hook useEffect has missing dependencies: 'countryOptions', 'privOptions', and 'user_id'. Either include them or remove the dependency array.",["1098"],"'IconButton' is defined but never used.","'StyledButton' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'allRoles', 'companyId', 'history', and 'userId'. Either include them or remove the dependency array. You can also do a functional update 'setAllRoles(a => ...)' if you only need 'allRoles' in the 'setAllRoles' call.",["1099"],"'useEffect' is defined but never used.",["1100"],"'ReactDOM' is defined but never used.","'stripePromise' is assigned a value but never used.","'token' is assigned a value but never used.","'options' is assigned a value but never used.","'errors' is assigned a value but never used.","'watch' is assigned a value but never used.","'setValue' is assigned a value but never used.","'defaultValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'company_id', 'handlingOptions', 'history', 'options', and 'role_id'. Either include them or remove the dependency array.",["1101"],"React Hook useEffect has missing dependencies: 'email' and 'key'. Either include them or remove the dependency array.",["1102"],"'privOptions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'company_id' and 'countryOptions'. Either include them or remove the dependency array.",["1103"],"no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'https:' is defined but never used.","unused",["1104"],"'Select' is defined but never used.","'Controller' is defined but never used.","'register' is assigned a value but never used.","'control' is assigned a value but never used.","'selectStyle' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["1105","1106"],"Unnecessary escape character: \\\".",["1107","1108"],["1109","1110"],["1111","1112"],["1113","1114"],["1115","1116"],["1117","1118"],["1119","1120"],["1121","1122"],["1123","1124"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'DialogContentText' is defined but never used.","'TextField' is defined but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","'Container' is defined but never used.","'isLogin' is assigned a value but never used.","'displayName' is assigned a value but never used.","'visa' is defined but never used.","'amex' is defined but never used.","'mastercard' is defined but never used.","'disabled' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","'rowDataState' is assigned a value but never used.","'setRowDataState' is assigned a value but never used.","no-native-reassign",["1125"],"no-negated-in-lhs",["1126"],["1127"],["1128"],["1129"],["1130"],["1131"],["1132"],["1133"],["1134"],["1135"],["1136","1137"],["1138","1139"],["1140","1141"],["1142","1143"],["1144","1145"],["1146","1147"],["1148","1149"],["1150","1151"],["1152","1153"],["1154","1155"],["1156"],["1157"],["1158"],["1159"],["1160"],["1161"],["1162"],["1163"],["1164"],["1165","1166"],["1167","1168"],["1169","1170"],["1171","1172"],["1173","1174"],["1175","1176"],["1177","1178"],["1179","1180"],["1181","1182"],["1183","1184"],{"desc":"1185","fix":"1186"},{"desc":"1185","fix":"1187"},{"desc":"1188","fix":"1189"},{"desc":"1190","fix":"1191"},{"desc":"1185","fix":"1192"},{"desc":"1193","fix":"1194"},{"desc":"1195","fix":"1196"},{"desc":"1197","fix":"1198"},{"desc":"1188","fix":"1199"},{"messageId":"1200","fix":"1201","desc":"1202"},{"messageId":"1203","fix":"1204","desc":"1205"},{"messageId":"1200","fix":"1206","desc":"1202"},{"messageId":"1203","fix":"1207","desc":"1205"},{"messageId":"1200","fix":"1208","desc":"1202"},{"messageId":"1203","fix":"1209","desc":"1205"},{"messageId":"1200","fix":"1210","desc":"1202"},{"messageId":"1203","fix":"1211","desc":"1205"},{"messageId":"1200","fix":"1212","desc":"1202"},{"messageId":"1203","fix":"1213","desc":"1205"},{"messageId":"1200","fix":"1214","desc":"1202"},{"messageId":"1203","fix":"1215","desc":"1205"},{"messageId":"1200","fix":"1216","desc":"1202"},{"messageId":"1203","fix":"1217","desc":"1205"},{"messageId":"1200","fix":"1218","desc":"1202"},{"messageId":"1203","fix":"1219","desc":"1205"},{"messageId":"1200","fix":"1220","desc":"1202"},{"messageId":"1203","fix":"1221","desc":"1205"},{"messageId":"1200","fix":"1222","desc":"1202"},{"messageId":"1203","fix":"1223","desc":"1205"},"no-global-assign","no-unsafe-negation",{"desc":"1185","fix":"1224"},{"desc":"1188","fix":"1225"},{"desc":"1185","fix":"1226"},{"desc":"1190","fix":"1227"},{"desc":"1185","fix":"1228"},{"desc":"1193","fix":"1229"},{"desc":"1195","fix":"1230"},{"desc":"1197","fix":"1231"},{"desc":"1188","fix":"1232"},{"messageId":"1200","fix":"1233","desc":"1202"},{"messageId":"1203","fix":"1234","desc":"1205"},{"messageId":"1200","fix":"1235","desc":"1202"},{"messageId":"1203","fix":"1236","desc":"1205"},{"messageId":"1200","fix":"1237","desc":"1202"},{"messageId":"1203","fix":"1238","desc":"1205"},{"messageId":"1200","fix":"1239","desc":"1202"},{"messageId":"1203","fix":"1240","desc":"1205"},{"messageId":"1200","fix":"1241","desc":"1202"},{"messageId":"1203","fix":"1242","desc":"1205"},{"messageId":"1200","fix":"1243","desc":"1202"},{"messageId":"1203","fix":"1244","desc":"1205"},{"messageId":"1200","fix":"1245","desc":"1202"},{"messageId":"1203","fix":"1246","desc":"1205"},{"messageId":"1200","fix":"1247","desc":"1202"},{"messageId":"1203","fix":"1248","desc":"1205"},{"messageId":"1200","fix":"1249","desc":"1202"},{"messageId":"1203","fix":"1250","desc":"1205"},{"messageId":"1200","fix":"1251","desc":"1202"},{"messageId":"1203","fix":"1252","desc":"1205"},{"desc":"1185","fix":"1253"},{"desc":"1188","fix":"1254"},{"desc":"1185","fix":"1255"},{"desc":"1185","fix":"1256"},{"desc":"1193","fix":"1257"},{"desc":"1190","fix":"1258"},{"desc":"1188","fix":"1259"},{"desc":"1195","fix":"1260"},{"desc":"1197","fix":"1261"},{"messageId":"1200","fix":"1262","desc":"1202"},{"messageId":"1203","fix":"1263","desc":"1205"},{"messageId":"1200","fix":"1264","desc":"1202"},{"messageId":"1203","fix":"1265","desc":"1205"},{"messageId":"1200","fix":"1266","desc":"1202"},{"messageId":"1203","fix":"1267","desc":"1205"},{"messageId":"1200","fix":"1268","desc":"1202"},{"messageId":"1203","fix":"1269","desc":"1205"},{"messageId":"1200","fix":"1270","desc":"1202"},{"messageId":"1203","fix":"1271","desc":"1205"},{"messageId":"1200","fix":"1272","desc":"1202"},{"messageId":"1203","fix":"1273","desc":"1205"},{"messageId":"1200","fix":"1274","desc":"1202"},{"messageId":"1203","fix":"1275","desc":"1205"},{"messageId":"1200","fix":"1276","desc":"1202"},{"messageId":"1203","fix":"1277","desc":"1205"},{"messageId":"1200","fix":"1278","desc":"1202"},{"messageId":"1203","fix":"1279","desc":"1205"},{"messageId":"1200","fix":"1280","desc":"1202"},{"messageId":"1203","fix":"1281","desc":"1205"},"Update the dependencies array to be: [company_id]",{"range":"1282","text":"1283"},{"range":"1284","text":"1283"},"Update the dependencies array to be: [countryOptions, privOptions, user_id]",{"range":"1285","text":"1286"},"Update the dependencies array to be: [allRoles, companyId, history, userId]",{"range":"1287","text":"1288"},{"range":"1289","text":"1283"},"Update the dependencies array to be: [company_id, handlingOptions, history, options, role_id]",{"range":"1290","text":"1291"},"Update the dependencies array to be: [email, key]",{"range":"1292","text":"1293"},"Update the dependencies array to be: [company_id, countryOptions]",{"range":"1294","text":"1295"},{"range":"1296","text":"1286"},"removeEscape",{"range":"1297","text":"1298"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1299","text":"1300"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1301","text":"1298"},{"range":"1302","text":"1300"},{"range":"1303","text":"1298"},{"range":"1304","text":"1300"},{"range":"1305","text":"1298"},{"range":"1306","text":"1300"},{"range":"1307","text":"1298"},{"range":"1308","text":"1300"},{"range":"1309","text":"1298"},{"range":"1310","text":"1300"},{"range":"1311","text":"1298"},{"range":"1312","text":"1300"},{"range":"1313","text":"1298"},{"range":"1314","text":"1300"},{"range":"1315","text":"1298"},{"range":"1316","text":"1300"},{"range":"1317","text":"1298"},{"range":"1318","text":"1300"},{"range":"1319","text":"1283"},{"range":"1320","text":"1286"},{"range":"1321","text":"1283"},{"range":"1322","text":"1288"},{"range":"1323","text":"1283"},{"range":"1324","text":"1291"},{"range":"1325","text":"1293"},{"range":"1326","text":"1295"},{"range":"1327","text":"1286"},{"range":"1328","text":"1298"},{"range":"1329","text":"1300"},{"range":"1330","text":"1298"},{"range":"1331","text":"1300"},{"range":"1332","text":"1298"},{"range":"1333","text":"1300"},{"range":"1334","text":"1298"},{"range":"1335","text":"1300"},{"range":"1336","text":"1298"},{"range":"1337","text":"1300"},{"range":"1338","text":"1298"},{"range":"1339","text":"1300"},{"range":"1340","text":"1298"},{"range":"1341","text":"1300"},{"range":"1342","text":"1298"},{"range":"1343","text":"1300"},{"range":"1344","text":"1298"},{"range":"1345","text":"1300"},{"range":"1346","text":"1298"},{"range":"1347","text":"1300"},{"range":"1348","text":"1283"},{"range":"1349","text":"1286"},{"range":"1350","text":"1283"},{"range":"1351","text":"1283"},{"range":"1352","text":"1291"},{"range":"1353","text":"1288"},{"range":"1354","text":"1286"},{"range":"1355","text":"1293"},{"range":"1356","text":"1295"},{"range":"1357","text":"1298"},{"range":"1358","text":"1300"},{"range":"1359","text":"1298"},{"range":"1360","text":"1300"},{"range":"1361","text":"1298"},{"range":"1362","text":"1300"},{"range":"1363","text":"1298"},{"range":"1364","text":"1300"},{"range":"1365","text":"1298"},{"range":"1366","text":"1300"},{"range":"1367","text":"1298"},{"range":"1368","text":"1300"},{"range":"1369","text":"1298"},{"range":"1370","text":"1300"},{"range":"1371","text":"1298"},{"range":"1372","text":"1300"},{"range":"1373","text":"1298"},{"range":"1374","text":"1300"},{"range":"1375","text":"1298"},{"range":"1376","text":"1300"},[2243,2245],"[company_id]",[2282,2284],[2721,2723],"[countryOptions, privOptions, user_id]",[3052,3054],"[allRoles, companyId, history, userId]",[2378,2380],[3383,3385],"[company_id, handlingOptions, history, options, role_id]",[2273,2275],"[email, key]",[3458,3460],"[company_id, countryOptions]",[2494,2496],[205,206],"",[205,205],"\\",[213,214],[213,213],[229,230],[229,229],[237,238],[237,237],[246,247],[246,246],[250,251],[250,250],[266,267],[266,266],[274,275],[274,274],[291,292],[291,291],[299,300],[299,299],[2282,2284],[2721,2723],[2243,2245],[3052,3054],[2378,2380],[3383,3385],[2273,2275],[3458,3460],[2494,2496],[205,206],[205,205],[213,214],[213,213],[229,230],[229,229],[237,238],[237,237],[246,247],[246,246],[250,251],[250,250],[266,267],[266,266],[274,275],[274,274],[291,292],[291,291],[299,300],[299,299],[2243,2245],[2721,2723],[2282,2284],[2378,2380],[3383,3385],[3052,3054],[2494,2496],[2273,2275],[3458,3460],[205,206],[205,205],[213,214],[213,213],[229,230],[229,229],[237,238],[237,237],[246,247],[246,246],[250,251],[250,250],[266,267],[266,266],[274,275],[274,274],[291,292],[291,291],[299,300],[299,299]]